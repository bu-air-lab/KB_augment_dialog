[P1T2] Adding entry: 3420 :- NP : l3_420:ro
[P1T2] Adding entry: take :- S/PP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) ($1 bring:a))))
[P1T2] Adding entry: walk :- S/PP : (lambda $0:<a,t> (and:<t*,t> (action:<a,t> walk:a) ($0 walk:a)))
[P1T2] Adding entry: is :- S\NP/(S\NP) : (lambda $0:<e,t> (lambda $1:e ($0 $1)))
[P1T2] Adding entry: what :- S/NP : (lambda $0:e $0)
[P1T2] Adding entry: bring :- S/PP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) ($1 bring:a))))
[P1T2] Adding entry: what :- S/(S\NP)/N : (lambda $0:<e,t> (lambda $1:<e,t> (lambda $2:e (and:<t*,t> ($0 $2) ($1 $2)))))
[P1T2] Adding entry: give :- S/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a))))
[P1T2] Adding entry: take :- S/PP/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a))))
[P1T2] Adding entry: bring :- S/PP/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a))))
[P1T2] Adding entry: deliver :- S/PP/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a))))
[P1T2] Adding entry: deliver :- S/PP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) ($1 bring:a))))
[P1T2] Adding entry: does :- S/NP/(S/NP) : (lambda $0:<e,t> (lambda $1:e ($0 $1)))
[P1T2] Adding entry: take :- S/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a))))
[P1T2] Adding entry: deliver :- S/NP/NP : (lambda $0:e (lambda $1:e (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) (actionpatient:<a,<e,t>> bring:a $1))))
[P1T2] Adding entry: give :- S/PP/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a))))
[P1T2] Adding entry: how :- S/NP : (lambda $0:e $0)
[P1T2] Adding entry: deliver :- S/PP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) ($1 bring:a))))
[P1T2] Adding entry: cell phone :- NP : phone:it
[P1T2] Adding entry: 3510 :- NP : l3_510:ro
[P1T2] Adding entry: take :- S/PP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) ($1 bring:a))))
[P1T2] Adding entry: are there :- S\NP : (lambda $0:e true:t)
[P1T2] Adding entry: deliver :- S/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a))))
[P1T2] Adding entry: how many :- S/(S\NP)/N : (lambda $0:<e,t> (lambda $1:<e,t> (count:<<e,t>,i> (lambda $2:e (and:<t*,t> ($0 $2) ($1 $2))))))
[P1T2] Adding entry: jivko sinapov :- NP : jivko:pe
[P1T2] Adding entry: matteo leonetti :- NP : matteo:pe
[P1T2] Adding entry: deliver :- S/PP/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a))))
[P1T2] Adding entry: deliver :- S/PP/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a))))
[P1T2] Adding entry: take :- S/NP/NP : (lambda $0:e (lambda $1:e (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) (actionpatient:<a,<e,t>> bring:a $1))))
[P1T2] Adding entry: take :- S/PP/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a))))
[P1T2] Adding entry: the :- N/N : (lambda $0:<e,t> (lambda $1:e ($0 $1)))
[P1T2] Adding entry: deliver :- S/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a))))
[P1T2] Adding entry: of :- NP\N/NP : (lambda $0:e (lambda $1:<e,t> (the:<<e,t>,e> (lambda $2:e (and:<t*,t> (person:<pe,t> $0) ($1 $2) (possesses:<pe,<e,t>> $0 $2))))))
[P1T2] Adding entry: give :- S/PP/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a))))
[P1T2] Adding entry: bring :- S/PP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) ($1 bring:a))))
[P1T2] Adding entry: give :- S/PP/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a))))
[P1T2] Adding entry: take :- S/PP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) ($1 bring:a))))
[P1T2] Adding entry: deliver :- S/PP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) ($1 bring:a))))
[P1T2] Adding entry: deliver :- S/PP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) ($1 bring:a))))
[P1T2] Adding entry: give :- S/PP/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a))))
[P1T2] Adding entry: give :- S/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a))))
[P1T2] Adding entry: person :- N : (lambda $0:e (person:<pe,t> $0))
[P1T2] Adding entry: bring :- S/NP/NP : (lambda $0:e (lambda $1:e (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) (actionpatient:<a,<e,t>> bring:a $1))))
[P1T2] Adding entry: deliver :- S/PP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) ($1 bring:a))))
[P1T2] Adding entry: go :- S/PP : (lambda $0:<a,t> (and:<t*,t> (action:<a,t> walk:a) ($0 walk:a)))
[P1T2] Adding entry: bring :- S/NP/NP : (lambda $0:e (lambda $1:e (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) (actionpatient:<a,<e,t>> bring:a $1))))
[P1T2] Adding entry: deliver :- S/PP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) ($1 bring:a))))
[P1T2] Adding entry: give :- S/NP/NP : (lambda $0:e (lambda $1:e (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) (actionpatient:<a,<e,t>> bring:a $1))))
[P1T2] Adding entry: give :- S/NP/NP : (lambda $0:e (lambda $1:e (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) (actionpatient:<a,<e,t>> bring:a $1))))
[P1T2] Adding entry: give :- S/PP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) ($1 bring:a))))
[P1T2] Adding entry: go :- S/PP : (lambda $0:<a,t> (and:<t*,t> (action:<a,t> walk:a) ($0 walk:a)))
[P1T2] Adding entry: give :- S/NP/NP : (lambda $0:e (lambda $1:e (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) (actionpatient:<a,<e,t>> bring:a $1))))
[P1T2] Adding entry: 3516 :- NP : l3_516:ro
[P1T2] Adding entry: take :- S/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a))))
[P1T2] Adding entry: please :- S\S : (lambda $0:e $0)
[P1T2] Adding entry: of :- NP/NP : (lambda $0:e $0)
[P1T2] Adding entry: of :- NP\N/NP : (lambda $0:e (lambda $1:<e,t> (the:<<e,t>,e> (lambda $2:e (and:<t*,t> (person:<pe,t> $0) ($1 $2) (possesses:<pe,<e,t>> $0 $2))))))
[P1T2] Adding entry: where :- S/NP : (lambda $0:e $0)
[P1T2] Adding entry: give :- S/NP/NP : (lambda $0:e (lambda $1:e (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) (actionpatient:<a,<e,t>> bring:a $1))))
[P1T2] Adding entry: daniel urieli :- NP : daniel:pe
[P1T2] Adding entry: take :- S/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a))))
[P1T2] Adding entry: no :- S\NP/(S\NP) : (lambda $0:<e,t> (lambda $1:e (not:<t,t> ($0 $1))))
[P1T2] Adding entry: deliver :- S/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a))))
[P1T2] Adding entry: take :- S/NP/NP : (lambda $0:e (lambda $1:e (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) (actionpatient:<a,<e,t>> bring:a $1))))
[P1T2] Adding entry: give :- S/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a))))
[P1T2] Adding entry: does :- S\NP/(S\NP) : (lambda $0:<e,t> (lambda $1:e ($0 $1)))
[P1T2] Adding entry: bring :- S/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a))))
[P1T2] Adding entry: take :- S/PP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) ($1 bring:a))))
[P1T2] Adding entry: bring :- S/NP/NP : (lambda $0:e (lambda $1:e (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) (actionpatient:<a,<e,t>> bring:a $1))))
[P1T2] Adding entry: bring :- S/NP/NP : (lambda $0:e (lambda $1:e (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) (actionpatient:<a,<e,t>> bring:a $1))))
[P1T2] Adding entry: bring :- S/NP/NP : (lambda $0:e (lambda $1:e (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) (actionpatient:<a,<e,t>> bring:a $1))))
[P1T2] Adding entry: bring :- S/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a))))
[P1T2] Adding entry: give :- S/NP/NP : (lambda $0:e (lambda $1:e (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) (actionpatient:<a,<e,t>> bring:a $1))))
[P1T2] Adding entry: take :- S/PP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) ($1 bring:a))))
[P1T2] Adding entry: take :- S/PP/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a))))
[P1T2] Adding entry: give :- S/PP/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a))))
[P1T2] Adding entry: peter stone :- NP : peter:pe
[P1T2] Adding entry: deliver :- S/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a))))
[P1T2] Adding entry: give :- S/NP/NP : (lambda $0:e (lambda $1:e (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) (actionpatient:<a,<e,t>> bring:a $1))))
[P1T2] Adding entry: 3502 :- NP : l3_502:ro
[P1T2] Adding entry: take :- S/PP/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a))))
[P1T2] Adding entry: s :- NP/N\NP : (lambda $0:e (lambda $1:<e,t> (the:<<e,t>,e> (lambda $2:e (and:<t*,t> (person:<pe,t> $0) ($1 $2) (possesses:<pe,<e,t>> $0 $2))))))
[P1T2] Adding entry: deliver :- S/PP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) ($1 bring:a))))
[P1T2] Adding entry: count :- S/(S\NP)/N : (lambda $0:<e,t> (lambda $1:<e,t> (count:<<e,t>,i> (lambda $2:e (and:<t*,t> ($0 $2) ($1 $2))))))
[P1T2] Adding entry: dennis davis :- NP : dennis:pe
[P1T2] Adding entry: s :- NP/N\NP : (lambda $0:e (lambda $1:<e,t> (the:<<e,t>,e> (lambda $2:e (and:<t*,t> (person:<pe,t> $0) ($1 $2) (possesses:<pe,<e,t>> $0 $2))))))
[P1T2] Adding entry: give :- S/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a))))
[P1T2] Adding entry: not :- PP/PP : (lambda $0:<e,t> (lambda $1:e (not:<t,t> ($0 $1))))
[P1T2] Adding entry: bring :- S/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a))))
[P1T2] Adding entry: give :- S/NP/NP : (lambda $0:e (lambda $1:e (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) (actionpatient:<a,<e,t>> bring:a $1))))
[P1T2] Adding entry: you :- NP : self:self
[P1T2] Adding entry: deliver :- S/NP/NP : (lambda $0:e (lambda $1:e (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) (actionpatient:<a,<e,t>> bring:a $1))))
[P1T2] Adding entry: s :- NP/N\NP : (lambda $0:e (lambda $1:<e,t> (the:<<e,t>,e> (lambda $2:e (and:<t*,t> (person:<pe,t> $0) ($1 $2) (possesses:<pe,<e,t>> $0 $2))))))
[P1T2] Adding entry: bring :- S/PP/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a))))
[P1T2] Adding entry: deliver :- S/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a))))
[P1T2] Adding entry: bring :- S/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a))))
[P1T2] Adding entry: of :- NP\N/NP : (lambda $0:e (lambda $1:<e,t> (the:<<e,t>,e> (lambda $2:e (and:<t*,t> (person:<pe,t> $0) ($1 $2) (possesses:<pe,<e,t>> $0 $2))))))
[P1T2] Adding entry: 3418 :- NP : l3_418:ro
[P1T2] Adding entry: give :- S/NP/NP : (lambda $0:e (lambda $1:e (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) (actionpatient:<a,<e,t>> bring:a $1))))
[P1T2] Adding entry: deliver :- S/PP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) ($1 bring:a))))
[P1T2] Adding entry: go :- S/PP : (lambda $0:<a,t> (and:<t*,t> (action:<a,t> walk:a) ($0 walk:a)))
[P1T2] Adding entry: give :- S/PP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) ($1 bring:a))))
[P1T2] Adding entry: of :- NP\N/NP : (lambda $0:e (lambda $1:<e,t> (the:<<e,t>,e> (lambda $2:e (and:<t*,t> (person:<pe,t> $0) ($1 $2) (possesses:<pe,<e,t>> $0 $2))))))
[P1T2] Adding entry: bring :- S/PP/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a))))
[P1T2] Adding entry: bring :- S/PP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) ($1 bring:a))))
[P1T2] Adding entry: bring :- S/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a))))
[P1T2] Adding entry: bring :- S/NP/NP : (lambda $0:e (lambda $1:e (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) (actionpatient:<a,<e,t>> bring:a $1))))
[P1T2] Adding entry: bring :- S/NP/NP : (lambda $0:e (lambda $1:e (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) (actionpatient:<a,<e,t>> bring:a $1))))
[P1T2] Adding entry: give :- S/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a))))
[P1T2] Adding entry: stacy miller :- NP : stacy:pe
[P1T2] Adding entry: deliver :- S/PP/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a))))
[P1T2] Adding entry: bring :- S/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a))))
[P1T2] Adding entry: take :- S/PP/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a))))
[P1T2] Adding entry: bring :- S/NP/NP : (lambda $0:e (lambda $1:e (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) (actionpatient:<a,<e,t>> bring:a $1))))
[P1T2] Adding entry: deliver :- S/NP/NP : (lambda $0:e (lambda $1:e (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) (actionpatient:<a,<e,t>> bring:a $1))))
[P1T2] Adding entry: go :- S/PP : (lambda $0:<a,t> (and:<t*,t> (action:<a,t> walk:a) ($0 walk:a)))
[P1T2] Adding entry: take :- S/PP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) ($1 bring:a))))
[P1T2] Adding entry: bring :- S/PP/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a))))
[P1T2] Adding entry: kazunori iwata :- NP : kazunori:pe
[P1T2] Adding entry: bring :- S/PP/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a))))
[P1T2] Adding entry: bring :- S/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a))))
[P1T2] Adding entry: deliver :- S/PP/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a))))
[P1T2] Adding entry: give :- S/NP/NP : (lambda $0:e (lambda $1:e (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) (actionpatient:<a,<e,t>> bring:a $1))))
[P1T2] Adding entry: walk :- S/PP : (lambda $0:<a,t> (and:<t*,t> (action:<a,t> walk:a) ($0 walk:a)))
[P1T2] Adding entry: bring :- S/PP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) ($1 bring:a))))
[P1T2] Adding entry: bring :- S/NP/NP : (lambda $0:e (lambda $1:e (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) (actionpatient:<a,<e,t>> bring:a $1))))
[P1T2] Adding entry: take :- S/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a))))
[P1T2] Adding entry: how many :- S/(S/NP)/N : (lambda $0:<e,t> (lambda $1:<e,t> (count:<<e,t>,i> (lambda $2:e (and:<t*,t> ($0 $2) ($1 $2))))))
[P1T2] Adding entry: room :- N : (lambda $0:e (room:<ro,t> $0))
[P1T2] Adding entry: 3412 :- NP : l3_412:ro
[P1T2] Adding entry: give :- S/NP/NP : (lambda $0:e (lambda $1:e (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) (actionpatient:<a,<e,t>> bring:a $1))))
[P1T2] Adding entry: rooms :- N : (lambda $0:e (room:<ro,t> $0))
[P1T2] Adding entry: have :- S/NP/(S/NP) : (lambda $0:<e,t> (lambda $1:e ($0 $1)))
[P1T2] Adding entry: s :- NP/N\NP : (lambda $0:e (lambda $1:<e,t> (the:<<e,t>,e> (lambda $2:e (and:<t*,t> (person:<pe,t> $0) ($1 $2) (possesses:<pe,<e,t>> $0 $2))))))
[P1T2] Adding entry: deliver :- S/NP/NP : (lambda $0:e (lambda $1:e (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) (actionpatient:<a,<e,t>> bring:a $1))))
[P1T2] Adding entry: give :- S/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a))))
[P1T2] Adding entry: take :- S/PP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) ($1 bring:a))))
[P1T2] Adding entry: coffee :- NP : coffee:it
[P1T2] Adding entry: go :- S/PP : (lambda $0:<a,t> (and:<t*,t> (action:<a,t> walk:a) ($0 walk:a)))
[P1T2] Adding entry: take :- S/NP/NP : (lambda $0:e (lambda $1:e (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) (actionpatient:<a,<e,t>> bring:a $1))))
[P1T2] Adding entry: give :- S/NP/NP : (lambda $0:e (lambda $1:e (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) (actionpatient:<a,<e,t>> bring:a $1))))
[P1T2] Adding entry: bring :- S/NP/NP : (lambda $0:e (lambda $1:e (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) (actionpatient:<a,<e,t>> bring:a $1))))
[P1T2] Adding entry: give :- S/NP/NP : (lambda $0:e (lambda $1:e (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) (actionpatient:<a,<e,t>> bring:a $1))))
[P1T2] Adding entry: deliver :- S/NP/NP : (lambda $0:e (lambda $1:e (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) (actionpatient:<a,<e,t>> bring:a $1))))
[P1T2] Adding entry: 3428 :- NP : l3_428:ro
[P1T2] Adding entry: bring :- S/PP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) ($1 bring:a))))
[P1T2] Adding entry: alice anderson :- NP : alice:pe
[P1T2] Adding entry: deliver :- S/PP/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a))))
[P1T2] Adding entry: bring :- S/PP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) ($1 bring:a))))
[P1T2] Adding entry: apple :- NP : apple:it
[P1T2] Adding entry: take :- S/PP/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a))))
[P1T2] Adding entry: take :- S/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a))))
[P1T2] Adding entry: take :- S/NP/NP : (lambda $0:e (lambda $1:e (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) (actionpatient:<a,<e,t>> bring:a $1))))
[P1T2] Adding entry: bring :- S/PP/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a))))
[P1T2] Adding entry: give :- S/PP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) ($1 bring:a))))
[P1T2] Adding entry: deliver :- S/PP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) ($1 bring:a))))
[P1T2] Adding entry: bob brown :- NP : bob:pe
[P1T2] Adding entry: give :- S/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a))))
[P1T2] Adding entry: excluding :- PP/NP : (lambda $0:e (lambda $1:e (not:<t,t> (equals:<e,<e,t>> $1 $0))))
[P1T2] Adding entry: deliver :- S/PP/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a))))
[P1T2] Adding entry: give :- S/NP/NP : (lambda $0:e (lambda $1:e (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) (actionpatient:<a,<e,t>> bring:a $1))))
[P1T2] Adding entry: take :- S/PP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) ($1 bring:a))))
[P1T2] Adding entry: give :- S/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a))))
[P1T2] Adding entry: take :- S/NP/NP : (lambda $0:e (lambda $1:e (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) (actionpatient:<a,<e,t>> bring:a $1))))
[P1T2] Adding entry: bring :- S/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a))))
[P1T2] Adding entry: take :- S/NP/NP : (lambda $0:e (lambda $1:e (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) (actionpatient:<a,<e,t>> bring:a $1))))
[P1T2] Adding entry: count :- S/(S\NP)/N : (lambda $0:<e,t> (lambda $1:<e,t> (count:<<e,t>,i> (lambda $2:e (and:<t*,t> ($0 $2) ($1 $2))))))
[P1T2] Adding entry: deliver :- S/PP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) ($1 bring:a))))
[P1T2] Adding entry: go :- S/PP : (lambda $0:<a,t> (and:<t*,t> (action:<a,t> walk:a) ($0 walk:a)))
[P1T2] Adding entry: 3432 :- NP : l3_432:ro
[P1T2] Adding entry: 3414a :- NP : l3_414a:ro
[P1T2] Adding entry: take :- S/NP/NP : (lambda $0:e (lambda $1:e (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) (actionpatient:<a,<e,t>> bring:a $1))))
[P1T2] Adding entry: give :- S/PP/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a))))
[P1T2] Adding entry: bring :- S/PP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) ($1 bring:a))))
[P1T2] Adding entry: soda :- NP : soda:it
[P1T2] Adding entry: give :- S/NP/NP : (lambda $0:e (lambda $1:e (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) (actionpatient:<a,<e,t>> bring:a $1))))
[P1T2] Adding entry: bring :- S/NP/NP : (lambda $0:e (lambda $1:e (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) (actionpatient:<a,<e,t>> bring:a $1))))
[P1T2] Adding entry: bring :- S/NP/NP : (lambda $0:e (lambda $1:e (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) (actionpatient:<a,<e,t>> bring:a $1))))
[P1T2] Adding entry: a :- N/N : (lambda $0:<e,t> (lambda $1:e ($0 $1)))
[P1T2] Adding entry: can you :- S/S : (lambda $0:<e,t> (lambda $1:e ($0 $1)))
[P1T2] Adding entry: bring :- S/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a))))
[P1T2] Adding entry: count :- S/(S/NP)/N : (lambda $0:<e,t> (lambda $1:<e,t> (count:<<e,t>,i> (lambda $2:e (and:<t*,t> ($0 $2) ($1 $2))))))
[P1T2] Adding entry: of :- NP\N/NP : (lambda $0:e (lambda $1:<e,t> (the:<<e,t>,e> (lambda $2:e (and:<t*,t> (person:<pe,t> $0) ($1 $2) (possesses:<pe,<e,t>> $0 $2))))))
[P1T2] Adding entry: deliver :- S/PP/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a))))
[P1T2] Adding entry: give :- S/NP/NP : (lambda $0:e (lambda $1:e (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) (actionpatient:<a,<e,t>> bring:a $1))))
[P1T2] Adding entry: give :- S/PP/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a))))
[P1T2] Adding entry: take :- S/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a))))
[P1T2] Adding entry: 3404 :- NP : l3_404:ro
[P1T2] Adding entry: deliver :- S/PP/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a))))
[P1T2] Adding entry: deliver :- S/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a))))
[P1T2] Adding entry: are :- PP/PP : (lambda $0:<e,t> (lambda $1:e ($0 $1)))
[P1T2] Adding entry: deliver :- S/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a))))
[P1T2] Adding entry: take :- S/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a))))
[P1T2] Adding entry: give :- S/PP/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a))))
[P1T2] Adding entry: walk :- S/PP : (lambda $0:<a,t> (and:<t*,t> (action:<a,t> walk:a) ($0 walk:a)))
[P1T2] Adding entry: offices :- N : (lambda $0:e (office:<of,t> $0))
[P1T2] Adding entry: is :- S/S : (lambda $0:t $0)
[P1T2] Adding entry: take :- S/PP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) ($1 bring:a))))
[P1T2] Adding entry: take :- S/NP/NP : (lambda $0:e (lambda $1:e (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) (actionpatient:<a,<e,t>> bring:a $1))))
[P1T2] Adding entry: bring :- S/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a))))
[P1T2] Adding entry: take :- S/NP/NP : (lambda $0:e (lambda $1:e (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) (actionpatient:<a,<e,t>> bring:a $1))))
[P1T2] Adding entry: take :- S/PP/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a))))
[P1T2] Adding entry: is :- S\NP/NP : (lambda $0:e (lambda $1:e (equals:<e,<e,t>> $1 $0)))
[P1T2] Adding entry: deliver :- S/NP/NP : (lambda $0:e (lambda $1:e (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) (actionpatient:<a,<e,t>> bring:a $1))))
[P1T2] Adding entry: give :- S/NP/NP : (lambda $0:e (lambda $1:e (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) (actionpatient:<a,<e,t>> bring:a $1))))
[P1T2] Adding entry: take :- S/NP/NP : (lambda $0:e (lambda $1:e (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) (actionpatient:<a,<e,t>> bring:a $1))))
[P1T2] Adding entry: take :- S/PP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) ($1 bring:a))))
[P1T2] Adding entry: bring :- S/NP/NP : (lambda $0:e (lambda $1:e (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) (actionpatient:<a,<e,t>> bring:a $1))))
[P1T2] Adding entry: go :- S/PP : (lambda $0:<a,t> (and:<t*,t> (action:<a,t> walk:a) ($0 walk:a)))
[P1T2] Adding entry: give :- S/PP/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a))))
[P1T2] Adding entry: bring :- S/PP/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a))))
[P1T2] Adding entry: are :- NP\N/(NP/N) : (lambda $0:<<e,t>,e> (lambda $1:<e,t> ($0 (lambda $2:e ($1 $2)))))
[P1T2] Adding entry: give :- S/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a))))
[P1T2] Adding entry: deliver :- S/PP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) ($1 bring:a))))
[P1T2] Adding entry: how many :- S/(S\NP)/N : (lambda $0:<e,t> (lambda $1:<e,t> (count:<<e,t>,i> (lambda $2:e (and:<t*,t> ($0 $2) ($1 $2))))))
[P1T2] Adding entry: 3430 :- NP : l3_430:ro
[P1T2] Adding entry: carol clark :- NP : carol:pe
[P1T2] Adding entry: take :- S/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a))))
[P1T2] Adding entry: bring :- S/PP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) ($1 bring:a))))
[P1T2] Adding entry: give :- S/PP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) ($1 bring:a))))
[P1T2] Adding entry: the :- NP/N : (lambda $0:<e,t> (the:<<e,t>,e> (lambda $1:e ($0 $1))))
[P1T2] Adding entry: bring :- S/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a))))
[P1T2] Adding entry: yourself :- NP : self:self
[P1T2] Adding entry: how many :- S/(S/NP)/N : (lambda $0:<e,t> (lambda $1:<e,t> (count:<<e,t>,i> (lambda $2:e (and:<t*,t> ($0 $2) ($1 $2))))))
[P1T2] Adding entry: deliver :- S/PP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) ($1 bring:a))))
[P1T2] Adding entry: give :- S/PP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) ($1 bring:a))))
[P1T2] Adding entry: take :- S/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a))))
[P1T2] Adding entry: are :- S\NP/PP : (lambda $0:<e,t> (lambda $1:e ($0 $1)))
[P1T2] Adding entry: give :- S/PP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) ($1 bring:a))))
[P1T2] Adding entry: take :- S/NP/NP : (lambda $0:e (lambda $1:e (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) (actionpatient:<a,<e,t>> bring:a $1))))
[P1T2] Adding entry: bring :- S/PP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) ($1 bring:a))))
[P1T2] Adding entry: bring :- S/PP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) ($1 bring:a))))
[P1T2] Adding entry: give :- S/PP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) ($1 bring:a))))
[P1T2] Adding entry: give :- S/PP/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a))))
[P1T2] Adding entry: give :- S/PP/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a))))
[P1T2] Adding entry: shiqi zhang :- NP : shiqi:pe
[P1T2] Adding entry: take :- S/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a))))
[P1T2] Adding entry: take :- S/NP/NP : (lambda $0:e (lambda $1:e (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) (actionpatient:<a,<e,t>> bring:a $1))))
[P1T2] Adding entry: bring :- S/NP/NP : (lambda $0:e (lambda $1:e (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) (actionpatient:<a,<e,t>> bring:a $1))))
[P1T2] Adding entry: 3426 :- NP : l3_426:ro
[P1T2] Adding entry: deliver :- S/PP/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a))))
[P1T2] Adding entry: deliver :- S/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a))))
[P1T2] Adding entry: take :- S/PP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) ($1 bring:a))))
[P1T2] Adding entry: deliver :- S/PP/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a))))
[P1T2] Adding entry: give :- S/NP/NP : (lambda $0:e (lambda $1:e (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) (actionpatient:<a,<e,t>> bring:a $1))))
[P1T2] Adding entry: deliver :- S/NP/NP : (lambda $0:e (lambda $1:e (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) (actionpatient:<a,<e,t>> bring:a $1))))
[P1T2] Adding entry: deliver :- S/NP/NP : (lambda $0:e (lambda $1:e (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) (actionpatient:<a,<e,t>> bring:a $1))))
[P1T2] Adding entry: give :- S/PP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) ($1 bring:a))))
[P1T2] Adding entry: take :- S/PP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) ($1 bring:a))))
[P1T2] Adding entry: take :- S/PP/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a))))
[P1T2] Adding entry: with :- NP\N/(NP/N) : (lambda $0:<<e,t>,e> (lambda $1:<e,t> ($0 (lambda $2:e ($1 $2)))))
[P1T2] Adding entry: deliver :- S/PP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) ($1 bring:a))))
[P1T2] Adding entry: give :- S/NP/NP : (lambda $0:e (lambda $1:e (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) (actionpatient:<a,<e,t>> bring:a $1))))
[P1T2] Adding entry: give :- S/PP/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a))))
[P1T2] Adding entry: calendar :- NP : calendar:it
[P1T2] Adding entry: take :- S/PP/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a))))
[P1T2] Adding entry: take :- S/PP/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a))))
[P1T2] Adding entry: is :- S/NP/(S/NP) : (lambda $0:<e,t> (lambda $1:e ($0 $1)))
[P1T2] Adding entry: take :- S/PP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) ($1 bring:a))))
[P1T2] Adding entry: not :- N/N : (lambda $0:<e,t> (lambda $1:e (not:<t,t> ($0 $1))))
[P1T2] Adding entry: bring :- S/PP/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a))))
[P1T2] Adding entry: deliver :- S/PP/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a))))
[P1T2] Adding entry: bring :- S/NP/NP : (lambda $0:e (lambda $1:e (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) (actionpatient:<a,<e,t>> bring:a $1))))
[P1T2] Adding entry: which :- S/NP : (lambda $0:e $0)
[P1T2] Adding entry: bring :- S/PP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) ($1 bring:a))))
[P1T2] Adding entry: deliver :- S/PP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) ($1 bring:a))))
[P1T2] Adding entry: give :- S/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a))))
[P1T2] Adding entry: is :- NP\N/(NP/N) : (lambda $0:<<e,t>,e> (lambda $1:<e,t> ($0 (lambda $2:e ($1 $2)))))
[P1T2] Adding entry: bring :- S/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a))))
[P1T2] Adding entry: bring :- S/PP/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a))))
[P1T2] Adding entry: bring :- S/PP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) ($1 bring:a))))
[P1T2] Adding entry: give :- S/NP/NP : (lambda $0:e (lambda $1:e (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) (actionpatient:<a,<e,t>> bring:a $1))))
[P1T2] Adding entry: walk :- S/PP : (lambda $0:<a,t> (and:<t*,t> (action:<a,t> walk:a) ($0 walk:a)))
[P1T2] Adding entry: s :- NP/N\NP : (lambda $0:e (lambda $1:<e,t> (the:<<e,t>,e> (lambda $2:e (and:<t*,t> (person:<pe,t> $0) ($1 $2) (possesses:<pe,<e,t>> $0 $2))))))
[P1T2] Adding entry: tell me :- S/S : (lambda $0:<e,t> (lambda $1:e ($0 $1)))
[P1T2] Adding entry: deliver :- S/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a))))
[P1T2] Adding entry: deliver :- S/NP/NP : (lambda $0:e (lambda $1:e (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) (actionpatient:<a,<e,t>> bring:a $1))))
[P1T2] Adding entry: take :- S/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a))))
[P1T2] Adding entry: 3402 :- NP : l3_402:ro
[P1T2] Adding entry: give :- S/PP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) ($1 bring:a))))
[P1T2] Adding entry: count :- S/(S/NP)/N : (lambda $0:<e,t> (lambda $1:<e,t> (count:<<e,t>,i> (lambda $2:e (and:<t*,t> ($0 $2) ($1 $2))))))
[P1T2] Adding entry: give :- S/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a))))
[P1T2] Adding entry: take :- S/NP/NP : (lambda $0:e (lambda $1:e (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) (actionpatient:<a,<e,t>> bring:a $1))))
[P1T2] Adding entry: take :- S/NP/NP : (lambda $0:e (lambda $1:e (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) (actionpatient:<a,<e,t>> bring:a $1))))
[P1T2] Adding entry: take :- S/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a))))
[P1T2] Adding entry: deliver :- S/NP/NP : (lambda $0:e (lambda $1:e (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) (actionpatient:<a,<e,t>> bring:a $1))))
[P1T2] Adding entry: piyush khandelwal :- NP : piyush:pe
[P1T2] Adding entry: take :- S/PP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) ($1 bring:a))))
[P1T2] Adding entry: deliver :- S/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a))))
[P1T2] Adding entry: bring :- S/NP/NP : (lambda $0:e (lambda $1:e (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) (actionpatient:<a,<e,t>> bring:a $1))))
[P1T2] Adding entry: give :- S/PP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) ($1 bring:a))))
[P1T2] Adding entry: take :- S/NP/NP : (lambda $0:e (lambda $1:e (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) (actionpatient:<a,<e,t>> bring:a $1))))
[P1T2] Adding entry: deliver :- S/PP/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a))))
[P1T2] Adding entry: give :- S/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a))))
[P1T2] Adding entry: bring :- S/PP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) ($1 bring:a))))
[P1T2] Adding entry: 3416 :- NP : l3_416:ro
[P1T2] Adding entry: give :- S/NP/NP : (lambda $0:e (lambda $1:e (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) (actionpatient:<a,<e,t>> bring:a $1))))
[P1T2] Adding entry: deliver :- S/NP/NP : (lambda $0:e (lambda $1:e (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) (actionpatient:<a,<e,t>> bring:a $1))))
[P1T2] Adding entry: give :- S/PP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) ($1 bring:a))))
[P1T2] Adding entry: walk :- S/PP : (lambda $0:<a,t> (and:<t*,t> (action:<a,t> walk:a) ($0 walk:a)))
[P1T2] Adding entry: deliver :- S/PP/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a))))
[P1T2] Adding entry: deliver :- S/PP/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a))))
[P1T2] Adding entry: bring :- S/PP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) ($1 bring:a))))
[P1T2] Adding entry: bring :- S/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a))))
[P1T2] Adding entry: deliver :- S/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a))))
[P1T2] Adding entry: walk :- S/PP : (lambda $0:<a,t> (and:<t*,t> (action:<a,t> walk:a) ($0 walk:a)))
[P1T2] Adding entry: give :- S/PP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) ($1 bring:a))))
[P1T2] Adding entry: deliver :- S/NP/NP : (lambda $0:e (lambda $1:e (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) (actionpatient:<a,<e,t>> bring:a $1))))
[P1T2] Adding entry: how many :- S/(S\NP)/N : (lambda $0:<e,t> (lambda $1:<e,t> (count:<<e,t>,i> (lambda $2:e (and:<t*,t> ($0 $2) ($1 $2))))))
[P1T2] Adding entry: deliver :- S/NP/NP : (lambda $0:e (lambda $1:e (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) (actionpatient:<a,<e,t>> bring:a $1))))
[P1T2] Adding entry: walk :- S/PP : (lambda $0:<a,t> (and:<t*,t> (action:<a,t> walk:a) ($0 walk:a)))
[P1T2] Adding entry: deliver :- S/NP/NP : (lambda $0:e (lambda $1:e (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) (actionpatient:<a,<e,t>> bring:a $1))))
[P1T2] Adding entry: bring :- S/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a))))
[P1T2] Adding entry: deliver :- S/NP/NP : (lambda $0:e (lambda $1:e (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) (actionpatient:<a,<e,t>> bring:a $1))))
[P1T2] Adding entry: deliver :- S/NP/NP : (lambda $0:e (lambda $1:e (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) (actionpatient:<a,<e,t>> bring:a $1))))
[P1T2] Adding entry: take :- S/NP/NP : (lambda $0:e (lambda $1:e (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) (actionpatient:<a,<e,t>> bring:a $1))))
[P1T2] Adding entry: take :- S/NP/NP : (lambda $0:e (lambda $1:e (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) (actionpatient:<a,<e,t>> bring:a $1))))
[P1T2] Adding entry: take :- S/NP/NP : (lambda $0:e (lambda $1:e (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) (actionpatient:<a,<e,t>> bring:a $1))))
[P1T2] Adding entry: take :- S/PP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) ($1 bring:a))))
[P1T2] Adding entry: take :- S/PP/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a))))
[P1T2] Adding entry: give :- S/PP/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a))))
[P1T2] Adding entry: give :- S/PP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) ($1 bring:a))))
[P1T2] Adding entry: bring :- S/PP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) ($1 bring:a))))
[P1T2] Adding entry: take :- S/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a))))
[P1T2] Adding entry: bring :- S/PP/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a))))
[P1T2] Adding entry: take :- S/PP/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a))))
[P1T2] Adding entry: who :- N : (lambda $0:e (person:<pe,t> $0))
[P1T2] Adding entry: deliver :- S/PP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) ($1 bring:a))))
[P1T2] Adding entry: bring :- S/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a))))
[P1T2] Adding entry: how many :- S/(S/NP)/N : (lambda $0:<e,t> (lambda $1:<e,t> (count:<<e,t>,i> (lambda $2:e (and:<t*,t> ($0 $2) ($1 $2))))))
[P1T2] Adding entry: deliver :- S/NP/NP : (lambda $0:e (lambda $1:e (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) (actionpatient:<a,<e,t>> bring:a $1))))
[P1T2] Adding entry: take :- S/NP/NP : (lambda $0:e (lambda $1:e (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) (actionpatient:<a,<e,t>> bring:a $1))))
[P1T2] Adding entry: bring :- S/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a))))
[P1T2] Adding entry: bring :- S/NP/NP : (lambda $0:e (lambda $1:e (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) (actionpatient:<a,<e,t>> bring:a $1))))
[P1T2] Adding entry: deliver :- S/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a))))
[P1T2] Adding entry: give :- S/PP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) ($1 bring:a))))
[P1T2] Adding entry: deliver :- S/PP/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a))))
[P1T2] Adding entry: give :- S/NP/NP : (lambda $0:e (lambda $1:e (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) (actionpatient:<a,<e,t>> bring:a $1))))
[P1T2] Adding entry: go :- S/PP : (lambda $0:<a,t> (and:<t*,t> (action:<a,t> walk:a) ($0 walk:a)))
[P1T2] Adding entry: bring :- S/PP/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a))))
[P1T2] Adding entry: deliver :- S/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a))))
[P1T2] Adding entry: deliver :- S/PP/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a))))
[P1T2] Adding entry: bring :- S/NP/NP : (lambda $0:e (lambda $1:e (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) (actionpatient:<a,<e,t>> bring:a $1))))
[P1T2] Adding entry: take :- S/NP/NP : (lambda $0:e (lambda $1:e (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) (actionpatient:<a,<e,t>> bring:a $1))))
[P1T2] Adding entry: of :- NP\N/NP : (lambda $0:e (lambda $1:<e,t> (the:<<e,t>,e> (lambda $2:e (and:<t*,t> (person:<pe,t> $0) ($1 $2) (possesses:<pe,<e,t>> $0 $2))))))
[P1T2] Adding entry: deliver :- S/NP/NP : (lambda $0:e (lambda $1:e (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) (actionpatient:<a,<e,t>> bring:a $1))))
[P1T2] Adding entry: counter :- NP : coffeecounter:sc
[P1T2] Adding entry: take :- S/NP/NP : (lambda $0:e (lambda $1:e (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) (actionpatient:<a,<e,t>> bring:a $1))))
[P1T2] Adding entry: walk :- S/PP : (lambda $0:<a,t> (and:<t*,t> (action:<a,t> walk:a) ($0 walk:a)))
[P1T2] Adding entry: take :- S/PP/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a))))
[P1T2] Adding entry: bring :- S/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a))))
[P1T2] Adding entry: give :- S/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a))))
[P1T2] Adding entry: give :- S/PP/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a))))
[P1T2] Adding entry: give :- S/PP/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a))))
[P1T2] Adding entry: bring :- S/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a))))
[P1T2] Adding entry: give :- S/NP/NP : (lambda $0:e (lambda $1:e (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) (actionpatient:<a,<e,t>> bring:a $1))))
[P1T2] Adding entry: bring :- S/PP/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a))))
[P1T2] Adding entry: take :- S/NP/NP : (lambda $0:e (lambda $1:e (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) (actionpatient:<a,<e,t>> bring:a $1))))
[P1T2] Adding entry: deliver :- S/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a))))
[P1T2] Adding entry: that :- PP/(S/NP) : (lambda $0:<e,t> (lambda $1:e ($0 $1)))
[P1T2] Adding entry: take :- S/PP/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a))))
[P1T2] Adding entry: deliver :- S/NP/NP : (lambda $0:e (lambda $1:e (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) (actionpatient:<a,<e,t>> bring:a $1))))
[P1T2] Adding entry: deliver :- S/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a))))
[P1T2] Adding entry: deliver :- S/NP/NP : (lambda $0:e (lambda $1:e (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) (actionpatient:<a,<e,t>> bring:a $1))))
[P1T2] Adding entry: take :- S/NP/NP : (lambda $0:e (lambda $1:e (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) (actionpatient:<a,<e,t>> bring:a $1))))
[P1T2] Adding entry: bring :- S/NP/NP : (lambda $0:e (lambda $1:e (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) (actionpatient:<a,<e,t>> bring:a $1))))
[P1T2] Adding entry: bring :- S/NP/NP : (lambda $0:e (lambda $1:e (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) (actionpatient:<a,<e,t>> bring:a $1))))
[P1T2] Adding entry: bring :- S/NP/NP : (lambda $0:e (lambda $1:e (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) (actionpatient:<a,<e,t>> bring:a $1))))
[P1T2] Adding entry: is :- NP/NP : (lambda $0:e $0)
[P1T2] Adding entry: 3422 :- NP : l3_422:ro
[P1T2] Adding entry: deliver :- S/NP/NP : (lambda $0:e (lambda $1:e (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) (actionpatient:<a,<e,t>> bring:a $1))))
[P1T2] Adding entry: the :- NP/NP : (lambda $0:e $0)
[P1T2] Adding entry: take :- S/PP/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a))))
[P1T2] Adding entry: s :- NP/N\NP : (lambda $0:e (lambda $1:<e,t> (the:<<e,t>,e> (lambda $2:e (and:<t*,t> (person:<pe,t> $0) ($1 $2) (possesses:<pe,<e,t>> $0 $2))))))
[P1T2] Adding entry: take :- S/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a))))
[P1T2] Adding entry: of :- N/N : (lambda $0:<e,t> (lambda $1:e ($0 $1)))
[P1T2] Adding entry: deliver :- S/NP/NP : (lambda $0:e (lambda $1:e (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) (actionpatient:<a,<e,t>> bring:a $1))))
[P1T2] Adding entry: deliver :- S/PP/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a))))
[P1T2] Adding entry: give :- S/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a))))
[P1T2] Adding entry: give :- S/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a))))
[P1T2] Adding entry: take :- S/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a))))
[P1T2] Adding entry: bring :- S/PP/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a))))
[P1T2] Adding entry: take :- S/NP/NP : (lambda $0:e (lambda $1:e (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) (actionpatient:<a,<e,t>> bring:a $1))))
[P1T2] Adding entry: give :- S/PP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) ($1 bring:a))))
[P1T2] Adding entry: objects :- N : (lambda $0:e (object:<ob,t> $0))
[P1T2] Adding entry: deliver :- S/NP/NP : (lambda $0:e (lambda $1:e (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) (actionpatient:<a,<e,t>> bring:a $1))))
[P1T2] Adding entry: bring :- S/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a))))
[P1T2] Adding entry: deliver :- S/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a))))
[P1T2] Adding entry: give :- S/PP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) ($1 bring:a))))
[P1T2] Adding entry: excluding :- PP/NP : (lambda $0:e (lambda $1:e (not:<t,t> (equals:<e,<e,t>> $1 $0))))
[P1T2] Adding entry: take :- S/PP/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a))))
[P1T2] Adding entry: people :- N : (lambda $0:e (person:<pe,t> $0))
[P1T2] Adding entry: 3414b :- NP : l3_414b:ro
[P1T2] Adding entry: that :- PP/(S\NP) : (lambda $0:<e,t> (lambda $1:e ($0 $1)))
[P1T2] Adding entry: which :- PP/(S/NP) : (lambda $0:<e,t> (lambda $1:e ($0 $1)))
[P1T2] Adding entry: bring :- S/PP/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a))))
[P1T2] Adding entry: bring :- S/PP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) ($1 bring:a))))
[P1T2] Adding entry: take :- S/PP/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a))))
[P1T2] Adding entry: deliver :- S/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a))))
[P1T2] Adding entry: office :- N : (lambda $0:e (office:<of,t> $0))
[P1T2] Adding entry: give :- S/NP/NP : (lambda $0:e (lambda $1:e (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) (actionpatient:<a,<e,t>> bring:a $1))))
[P1T2] Adding entry: deliver :- S/NP/NP : (lambda $0:e (lambda $1:e (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) (actionpatient:<a,<e,t>> bring:a $1))))
[P1T2] Adding entry: give :- S/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a))))
[P1T2] Adding entry: bring :- S/NP/NP : (lambda $0:e (lambda $1:e (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) (actionpatient:<a,<e,t>> bring:a $1))))
[P1T2] Adding entry: i :- NP : me:pe
[P1T2] Adding entry: walk :- S/PP : (lambda $0:<a,t> (and:<t*,t> (action:<a,t> walk:a) ($0 walk:a)))
[P1T2] Adding entry: to :- PP/NP : (lambda $0:e (lambda $1:a (actionrecipient:<a,<e,t>> $1 $0)))
[P1T2] Adding entry: give :- S/NP/NP : (lambda $0:e (lambda $1:e (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) (actionpatient:<a,<e,t>> bring:a $1))))
[P1T2] Adding entry: bring :- S/NP/NP : (lambda $0:e (lambda $1:e (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) (actionpatient:<a,<e,t>> bring:a $1))))
[P1T2] Adding entry: please :- S/S : (lambda $0:<e,t> (lambda $1:e ($0 $1)))
[P1T2] Adding entry: go :- S/PP : (lambda $0:<a,t> (and:<t*,t> (action:<a,t> walk:a) ($0 walk:a)))
[P1T2] Adding entry: deliver :- S/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a))))
[P1T2] Adding entry: take :- S/PP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) ($1 bring:a))))
[P1T2] Adding entry: deliver :- S/PP/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a))))
[P1T2] Adding entry: me :- NP : me:pe
[P1T2] Adding entry: walk :- S/PP : (lambda $0:<a,t> (and:<t*,t> (action:<a,t> walk:a) ($0 walk:a)))
[P1T2] Adding entry: deliver :- S/PP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) ($1 bring:a))))
[P1T2] Adding entry: 3512 :- NP : l3_512:ro
[P1T2] Adding entry: deliver :- S/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a))))
[P1T2] Adding entry: bring :- S/PP/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a))))
[P1T2] Adding entry: take :- S/PP/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a))))
[P1T2] Adding entry: deliver :- S/NP/NP : (lambda $0:e (lambda $1:e (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) (actionpatient:<a,<e,t>> bring:a $1))))
[P1T2] Adding entry: take :- S/NP/NP : (lambda $0:e (lambda $1:e (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) (actionpatient:<a,<e,t>> bring:a $1))))
[P1T2] Adding entry: deliver :- S/PP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) ($1 bring:a))))
[P1T2] Adding entry: bring :- S/PP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) ($1 bring:a))))
[P1T2] Adding entry: give :- S/NP/NP : (lambda $0:e (lambda $1:e (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) (actionpatient:<a,<e,t>> bring:a $1))))
[P1T2] Adding entry: bring :- S/NP/NP : (lambda $0:e (lambda $1:e (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) (actionpatient:<a,<e,t>> bring:a $1))))
[P1T2] Adding entry: give :- S/PP/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a))))
[P1T2] Adding entry: give :- S/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a))))
[P1T2] Adding entry: which :- PP/(S\NP) : (lambda $0:<e,t> (lambda $1:e ($0 $1)))
[P1T2] Adding entry: go :- S/PP : (lambda $0:<a,t> (and:<t*,t> (action:<a,t> walk:a) ($0 walk:a)))
[P1T2] Adding entry: bring :- S/PP/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a))))
[P1T2] Adding entry: bring :- S/NP/NP : (lambda $0:e (lambda $1:e (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) (actionpatient:<a,<e,t>> bring:a $1))))
[P1T2] Adding entry: deliver :- S/PP/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a))))
[P1T2] Adding entry: count :- S/(S\NP)/N : (lambda $0:<e,t> (lambda $1:<e,t> (count:<<e,t>,i> (lambda $2:e (and:<t*,t> ($0 $2) ($1 $2))))))
[P1T2] Adding entry: give :- S/PP/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a))))
[P1T2] Adding entry: bring :- S/PP/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a))))
[P1T2] Adding entry: give :- S/PP/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a))))
[P1T2] Adding entry: 3508 :- NP : l3_508:ro
[P1T2] Adding entry: trashcan :- NP : trashcan:it
[P1T2] Adding entry: bring :- S/PP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) ($1 bring:a))))
[P1T2] Adding entry: take :- S/PP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) ($1 bring:a))))
[P1T2] Adding entry: deliver :- S/PP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) ($1 bring:a))))
[P1T2] Adding entry: deliver :- S/NP/NP : (lambda $0:e (lambda $1:e (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) (actionpatient:<a,<e,t>> bring:a $1))))
[P1T2] Adding entry: take :- S/NP/NP : (lambda $0:e (lambda $1:e (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) (actionpatient:<a,<e,t>> bring:a $1))))
[P1T2] Adding entry: give :- S/PP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) ($1 bring:a))))
[P1T2] Adding entry: take :- S/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a))))
[P1T2] Adding entry: deliver :- S/PP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) ($1 bring:a))))
[P1T2] Adding entry: how many :- S/NP : (lambda $0:e $0)
[P1T2] Adding entry: do not :- S\NP/(S\NP) : (lambda $0:<e,t> (lambda $1:e (not:<t,t> ($0 $1))))
[P1T2] Adding entry: take :- S/PP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) ($1 bring:a))))
[P1T2] Adding entry: 3414 :- NP : l3_414:ro
[P1T2] Adding entry: take :- S/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a))))
[P1T2] Adding entry: object :- N : (lambda $0:e (object:<ob,t> $0))
[P1T2] Adding entry: deliver :- S/NP/NP : (lambda $0:e (lambda $1:e (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) (actionpatient:<a,<e,t>> bring:a $1))))
[P1T2] Adding entry: bring :- S/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a))))
[P1T2] Adding entry: deliver :- S/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a))))
[P1T2] Adding entry: bring :- S/PP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) ($1 bring:a))))
[P1T2] Adding entry: take :- S/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a))))
[P1T2] Adding entry: bring :- S/NP/NP : (lambda $0:e (lambda $1:e (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) (actionpatient:<a,<e,t>> bring:a $1))))
[P1T2] Adding entry: is :- N/N : (lambda $0:<e,t> (lambda $1:e ($0 $1)))
[P1T2] Adding entry: bring :- S/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a))))
[P1T2] Adding entry: bring :- S/PP/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a))))
[P1T2] Adding entry: take :- S/PP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) ($1 bring:a))))
[P1T2] Adding entry: take :- S/NP/NP : (lambda $0:e (lambda $1:e (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) (actionpatient:<a,<e,t>> bring:a $1))))
[P1T2] Adding entry: deliver :- S/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a))))
[P1T2] Adding entry: take :- S/PP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) ($1 bring:a))))
[P1T2] Adding entry: bring :- S/PP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) ($1 bring:a))))
[P1T2] Adding entry: give :- S/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a))))
[P1T2] Adding entry: deliver :- S/NP/NP : (lambda $0:e (lambda $1:e (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) (actionpatient:<a,<e,t>> bring:a $1))))
[P1T2] Adding entry: give :- S/NP/NP : (lambda $0:e (lambda $1:e (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) (actionpatient:<a,<e,t>> bring:a $1))))
[P1T2] Adding entry: bring :- S/PP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) ($1 bring:a))))
[P1T2] Adding entry: take :- S/PP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) ($1 bring:a))))
[P1T2] Adding entry: deliver :- S/NP/NP : (lambda $0:e (lambda $1:e (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) (actionpatient:<a,<e,t>> bring:a $1))))
[P1T2] Adding entry: what :- S/(S/NP)/N : (lambda $0:<e,t> (lambda $1:<e,t> (lambda $2:e (and:<t*,t> ($0 $2) ($1 $2)))))
[P1T2] Adding entry: are :- N\N/N : (lambda $0:<e,t> (lambda $1:<e,t> (lambda $2:e (and:<t*,t> ($0 $2) ($1 $2)))))
[P1T2] Adding entry: deliver :- S/PP/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a))))
[P1T2] Adding entry: take :- S/PP/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a))))
[P1T2] Adding entry: bring :- S/PP/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a))))
[P1T2] Adding entry: deliver :- S/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a))))
[P1T2] Adding entry: give :- S/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a))))
[P1T2] Adding entry: deliver :- S/PP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) ($1 bring:a))))
[P1T2] Adding entry: give :- S/NP/NP : (lambda $0:e (lambda $1:e (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) (actionpatient:<a,<e,t>> bring:a $1))))
[P1T2] Adding entry: bring :- S/NP/NP : (lambda $0:e (lambda $1:e (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) (actionpatient:<a,<e,t>> bring:a $1))))
[P1T2] Adding entry: s :- NP/N\NP : (lambda $0:e (lambda $1:<e,t> (the:<<e,t>,e> (lambda $2:e (and:<t*,t> (person:<pe,t> $0) ($1 $2) (possesses:<pe,<e,t>> $0 $2))))))
[P1T2] Adding entry: give :- S/PP/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a))))
[P1T2] Adding entry: bring :- S/NP/NP : (lambda $0:e (lambda $1:e (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) (actionpatient:<a,<e,t>> bring:a $1))))
[P1T2] Adding entry: give :- S/PP/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a))))
[P1T2] Adding entry: take :- S/PP/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a))))
[P1T2] Adding entry: give :- S/PP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) ($1 bring:a))))
[P1T2] Adding entry: give :- S/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a))))
[P1T2] Adding entry: walk :- S/PP : (lambda $0:<a,t> (and:<t*,t> (action:<a,t> walk:a) ($0 walk:a)))
[P1T2] Adding entry: take :- S/NP/NP : (lambda $0:e (lambda $1:e (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) (actionpatient:<a,<e,t>> bring:a $1))))
[P1T2] Adding entry: give :- S/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a))))
[P1T2] Adding entry: count :- S/(S/NP)/N : (lambda $0:<e,t> (lambda $1:<e,t> (count:<<e,t>,i> (lambda $2:e (and:<t*,t> ($0 $2) ($1 $2))))))
[P1T2] Adding entry: ellen edwards :- NP : ellen:pe
[P1T2] Adding entry: take :- S/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a))))
[P1T2] Adding entry: bring :- S/NP/NP : (lambda $0:e (lambda $1:e (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) (actionpatient:<a,<e,t>> bring:a $1))))
[P1T2] Adding entry: dana ballard :- NP : dana:pe
[P1T2] Adding entry: give :- S/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a))))
[P1T2] Adding entry: take :- S/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a))))
[P1T2] Adding entry: go :- S/PP : (lambda $0:<a,t> (and:<t*,t> (action:<a,t> walk:a) ($0 walk:a)))
[P1T2] Adding entry: give :- S/PP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) ($1 bring:a))))
[P1T2] Adding entry: deliver :- S/PP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) ($1 bring:a))))
[P1T2] Adding entry: take :- S/PP/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a))))
[P1T2] Adding entry: take :- S/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a))))
[P1T2] Adding entry: give :- S/PP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) ($1 bring:a))))
[P1T2] Adding entry: take :- S/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a))))
[P1T2] Adding entry: deliver :- S/PP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) ($1 bring:a))))
[P1T2] Adding entry: give :- S/NP/NP : (lambda $0:e (lambda $1:e (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) (actionpatient:<a,<e,t>> bring:a $1))))
[P1T2] Adding entry: bring :- S/PP/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a))))
[P1T2] Adding entry: bring :- S/PP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) ($1 bring:a))))
[P1T2] Adding entry: give :- S/PP/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a))))
[P1T2] Adding entry: give :- S/PP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) ($1 bring:a))))
[P1T2] Adding entry: raymond mooney :- NP : ray:pe
[P1T2] Adding entry: hamburger :- NP : hamburger:it
[P1T2] Adding entry: please :- S\S : (lambda $0:t $0)
[P1T2] Adding entry: take :- S/NP/NP : (lambda $0:e (lambda $1:e (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) (actionpatient:<a,<e,t>> bring:a $1))))
[P1T2] Adding entry: give :- S/NP/NP : (lambda $0:e (lambda $1:e (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) (actionpatient:<a,<e,t>> bring:a $1))))
[P1T2] Adding entry: bring :- S/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a))))
[P1T2] Adding entry: of :- NP\N/NP : (lambda $0:e (lambda $1:<e,t> (the:<<e,t>,e> (lambda $2:e (and:<t*,t> (person:<pe,t> $0) ($1 $2) (possesses:<pe,<e,t>> $0 $2))))))
[P1T2] Adding entry: take :- S/PP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) ($1 bring:a))))
[P1T2] Adding entry: bring :- S/PP/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a))))
[P1T2] Adding entry: 3436 :- NP : l3_436:ro
[P1T2] Adding entry: give :- S/PP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) ($1 bring:a))))
[P1T2] Adding entry: take :- S/PP/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a))))
[P1T2] Adding entry: give :- S/PP/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a))))
[P1T2] Adding entry: excluding :- PP/NP : (lambda $0:e (lambda $1:e (not:<t,t> (equals:<e,<e,t>> $1 $0))))
[P1T2] Adding entry: bring :- S/PP/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a))))
[P1T2] Adding entry: deliver :- S/PP/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a))))
[P1T2] Adding entry: 3426 :- NP : l3_426:ro
[P1T2] Adding entry: stacy miller :- NP : stacy:pe
[P1T2] Adding entry: 3428 :- NP : l3_428:ro
[P1T2] Adding entry: dana ballard :- NP : dana:pe
[P1T2] Adding entry: 3422 :- NP : l3_422:ro
[P1T2] Adding entry: 3502 :- NP : l3_502:ro
[P1T2] Adding entry: peter stone :- NP : peter:pe
[P1T2] Adding entry: 3402 :- NP : l3_402:ro
[P1T2] Adding entry: alice anderson :- NP : alice:pe
[P1T2] Adding entry: 3420 :- NP : l3_420:ro
[P1T2] Adding entry: i :- NP : me:pe
[P1T2] Adding entry: apple :- NP : apple:it
[P1T2] Adding entry: counter :- NP : coffeecounter:sc
[P1T2] Adding entry: piyush khandelwal :- NP : piyush:pe
[P1T2] Adding entry: kazunori iwata :- NP : kazunori:pe
[P1T2] Adding entry: dennis davis :- NP : dennis:pe
[P1T2] Adding entry: 3508 :- NP : l3_508:ro
[P1T2] Adding entry: 3404 :- NP : l3_404:ro
[P1T2] Adding entry: trashcan :- NP : trashcan:it
[P1T2] Adding entry: 3430 :- NP : l3_430:ro
[P1T2] Adding entry: carol clark :- NP : carol:pe
[P1T2] Adding entry: 3516 :- NP : l3_516:ro
[P1T2] Adding entry: me :- NP : me:pe
[P1T2] Adding entry: calendar :- NP : calendar:it
[P1T2] Adding entry: raymond mooney :- NP : ray:pe
[P1T2] Adding entry: 3512 :- NP : l3_512:ro
[P1T2] Adding entry: 3412 :- NP : l3_412:ro
[P1T2] Adding entry: yourself :- NP : self:self
[P1T2] Adding entry: bob brown :- NP : bob:pe
[P1T2] Adding entry: hamburger :- NP : hamburger:it
[P1T2] Adding entry: cell phone :- NP : phone:it
[P1T2] Adding entry: 3510 :- NP : l3_510:ro
[P1T2] Adding entry: 3414 :- NP : l3_414:ro
[P1T2] Adding entry: you :- NP : self:self
[P1T2] Adding entry: 3416 :- NP : l3_416:ro
[P1T2] Adding entry: daniel urieli :- NP : daniel:pe
[P1T2] Adding entry: 3436 :- NP : l3_436:ro
[P1T2] Adding entry: 3418 :- NP : l3_418:ro
[P1T2] Adding entry: jivko sinapov :- NP : jivko:pe
[P1T2] Adding entry: 3432 :- NP : l3_432:ro
[P1T2] Adding entry: 3414a :- NP : l3_414a:ro
[P1T2] Adding entry: coffee :- NP : coffee:it
[P1T2] Adding entry: 3414b :- NP : l3_414b:ro
[P1T2] Adding entry: matteo leonetti :- NP : matteo:pe
[P1T2] Adding entry: shiqi zhang :- NP : shiqi:pe
[P1T2] Adding entry: soda :- NP : soda:it
[P1T2] Adding entry: ellen edwards :- NP : ellen:pe
[P1T2] Init LEX: 3420 :- NP : l3_420:ro -> {LEX#338=10.0(1.0),XEME#168=0.0(1.0),XTMP#19=0.0(0.1)}
[P1T2] Init LEX: take :- S/PP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#2=10.0(1.0),XEME#2=0.0(1.0),XTMP#2=0.0(0.1)}
[P1T2] Init LEX: walk :- S/PP : (lambda $0:<a,t> (and:<t*,t> (action:<a,t> walk:a) ($0 walk:a))) -> {LEX#4=10.0(1.0),XEME#4=0.0(1.0),XTMP#4=0.0(0.1)}
[P1T2] Init LEX: is :- S\NP/(S\NP) : (lambda $0:<e,t> (lambda $1:e ($0 $1))) -> {LEX#5=10.0(1.0),XEME#5=0.0(1.0),XTMP#5=0.0(0.1)}
[P1T2] Init LEX: what :- S/NP : (lambda $0:e $0) -> {LEX#339=10.0(1.0),XEME#76=0.0(1.0),XTMP#146=0.0(0.1)}
[P1T2] Init LEX: bring :- S/PP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#34=10.0(1.0),XEME#78=0.0(1.0),XTMP#37=0.0(0.1)}
[P1T2] Init LEX: what :- S/(S\NP)/N : (lambda $0:<e,t> (lambda $1:<e,t> (lambda $2:e (and:<t*,t> ($0 $2) ($1 $2))))) -> {LEX#340=10.0(1.0),XEME#150=0.0(1.0),XTMP#86=0.0(0.1)}
[P1T2] Init LEX: give :- S/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#9=10.0(1.0),XEME#8=0.0(1.0),XTMP#9=0.0(0.1)}
[P1T2] Init LEX: take :- S/PP/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#66=10.0(1.0),XEME#41=0.0(1.0),XTMP#56=0.0(0.1)}
[P1T2] Init LEX: bring :- S/PP/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#117=10.0(1.0),XEME#31=0.0(1.0),XTMP#92=0.0(0.1)}
[P1T2] Init LEX: deliver :- S/PP/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#31=10.0(1.0),XEME#32=0.0(1.0),XTMP#91=0.0(0.1)}
[P1T2] Init LEX: deliver :- S/PP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#10=10.0(1.0),XEME#9=0.0(1.0),XTMP#10=0.0(0.1)}
[P1T2] Init LEX: does :- S/NP/(S/NP) : (lambda $0:<e,t> (lambda $1:e ($0 $1))) -> {LEX#11=10.0(1.0),XEME#10=0.0(1.0),XTMP#11=0.0(0.1)}
[P1T2] Init LEX: take :- S/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#44=10.0(1.0),XEME#89=0.0(1.0),XTMP#58=0.0(0.1)}
[P1T2] Init LEX: deliver :- S/NP/NP : (lambda $0:e (lambda $1:e (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) (actionpatient:<a,<e,t>> bring:a $1)))) -> {LEX#83=10.0(1.0),XEME#130=0.0(1.0),XTMP#1=0.0(0.1)}
[P1T2] Init LEX: give :- S/PP/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#18=10.0(1.0),XEME#8=0.0(1.0),XTMP#17=0.0(0.1)}
[P1T2] Init LEX: how :- S/NP : (lambda $0:e $0) -> {LEX#344=10.0(1.0),XEME#61=0.0(1.0),XTMP#146=0.0(0.1)}
[P1T2] Init LEX: deliver :- S/PP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#10=10.0(1.0),XEME#44=0.0(1.0),XTMP#7=0.0(0.1)}
[P1T2] Init LEX: cell phone :- NP : phone:it -> {LEX#20=21.435469250725863(1.0),XEME#18=0.0(1.0),XTMP#19=0.0(0.1)}
[P1T2] Init LEX: 3510 :- NP : l3_510:ro -> {LEX#345=10.0(1.0),XEME#169=0.0(1.0),XTMP#19=0.0(0.1)}
[P1T2] Init LEX: take :- S/PP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#2=10.0(1.0),XEME#89=0.0(1.0),XTMP#34=0.0(0.1)}
[P1T2] Init LEX: are there :- S\NP : (lambda $0:e true:t) -> {LEX#21=21.435469250725863(1.0),XEME#19=0.0(1.0),XTMP#20=0.0(0.1)}
[P1T2] Init LEX: deliver :- S/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#22=10.0(1.0),XEME#20=0.0(1.0),XTMP#21=0.0(0.1)}
[P1T2] Init LEX: how many :- S/(S\NP)/N : (lambda $0:<e,t> (lambda $1:<e,t> (count:<<e,t>,i> (lambda $2:e (and:<t*,t> ($0 $2) ($1 $2)))))) -> {LEX#25=21.435469250725863(1.0),XEME#23=0.0(1.0),XTMP#24=0.0(0.1)}
[P1T2] Init LEX: jivko sinapov :- NP : jivko:pe -> {LEX#348=21.435469250725863(1.0),XEME#170=0.0(1.0),XTMP#19=0.0(0.1)}
[P1T2] Init LEX: matteo leonetti :- NP : matteo:pe -> {LEX#29=21.435469250725863(1.0),XEME#27=0.0(1.0),XTMP#19=0.0(0.1)}
[P1T2] Init LEX: deliver :- S/PP/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#31=10.0(1.0),XEME#20=0.0(1.0),XTMP#65=0.0(0.1)}
[P1T2] Init LEX: deliver :- S/PP/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#31=10.0(1.0),XEME#29=0.0(1.0),XTMP#28=0.0(0.1)}
[P1T2] Init LEX: take :- S/NP/NP : (lambda $0:e (lambda $1:e (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) (actionpatient:<a,<e,t>> bring:a $1)))) -> {LEX#57=10.0(1.0),XEME#119=0.0(1.0),XTMP#22=0.0(0.1)}
[P1T2] Init LEX: take :- S/PP/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#66=10.0(1.0),XEME#93=0.0(1.0),XTMP#87=0.0(0.1)}
[P1T2] Init LEX: the :- N/N : (lambda $0:<e,t> (lambda $1:e ($0 $1))) -> {LEX#32=10.0(1.0),XEME#0=0.0(1.0),XTMP#29=0.0(0.1)}
[P1T2] Init LEX: deliver :- S/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#22=10.0(1.0),XEME#32=0.0(1.0),XTMP#141=0.0(0.1)}
[P1T2] Init LEX: of :- NP\N/NP : (lambda $0:e (lambda $1:<e,t> (the:<<e,t>,e> (lambda $2:e (and:<t*,t> (person:<pe,t> $0) ($1 $2) (possesses:<pe,<e,t>> $0 $2)))))) -> {LEX#33=10.0(1.0),XEME#30=0.0(1.0),XTMP#30=0.0(0.1)}
[P1T2] Init LEX: give :- S/PP/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#18=10.0(1.0),XEME#94=0.0(1.0),XTMP#18=0.0(0.1)}
[P1T2] Init LEX: bring :- S/PP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#34=10.0(1.0),XEME#31=0.0(1.0),XTMP#31=0.0(0.1)}
[P1T2] Init LEX: give :- S/PP/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#18=10.0(1.0),XEME#8=0.0(1.0),XTMP#14=0.0(0.1)}
[P1T2] Init LEX: take :- S/PP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#2=10.0(1.0),XEME#50=0.0(1.0),XTMP#109=0.0(0.1)}
[P1T2] Init LEX: deliver :- S/PP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#10=10.0(1.0),XEME#32=0.0(1.0),XTMP#34=0.0(0.1)}
[P1T2] Init LEX: deliver :- S/PP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#10=10.0(1.0),XEME#132=0.0(1.0),XTMP#84=0.0(0.1)}
[P1T2] Init LEX: give :- S/PP/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#18=10.0(1.0),XEME#82=0.0(1.0),XTMP#134=0.0(0.1)}
[P1T2] Init LEX: give :- S/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#9=10.0(1.0),XEME#33=0.0(1.0),XTMP#35=0.0(0.1)}
[P1T2] Init LEX: person :- N : (lambda $0:e (person:<pe,t> $0)) -> {LEX#351=10.0(1.0),XEME#116=0.0(1.0),XTMP#101=0.0(0.1)}
[P1T2] Init LEX: bring :- S/NP/NP : (lambda $0:e (lambda $1:e (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) (actionpatient:<a,<e,t>> bring:a $1)))) -> {LEX#64=10.0(1.0),XEME#106=0.0(1.0),XTMP#33=0.0(0.1)}
[P1T2] Init LEX: deliver :- S/PP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#10=10.0(1.0),XEME#158=0.0(1.0),XTMP#115=0.0(0.1)}
[P1T2] Init LEX: go :- S/PP : (lambda $0:<a,t> (and:<t*,t> (action:<a,t> walk:a) ($0 walk:a))) -> {LEX#40=10.0(1.0),XEME#22=0.0(1.0),XTMP#39=0.0(0.1)}
[P1T2] Init LEX: bring :- S/NP/NP : (lambda $0:e (lambda $1:e (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) (actionpatient:<a,<e,t>> bring:a $1)))) -> {LEX#64=10.0(1.0),XEME#53=0.0(1.0),XTMP#116=0.0(0.1)}
[P1T2] Init LEX: deliver :- S/PP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#10=10.0(1.0),XEME#36=0.0(1.0),XTMP#40=0.0(0.1)}
[P1T2] Init LEX: give :- S/NP/NP : (lambda $0:e (lambda $1:e (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) (actionpatient:<a,<e,t>> bring:a $1)))) -> {LEX#41=10.0(1.0),XEME#37=0.0(1.0),XTMP#41=0.0(0.1)}
[P1T2] Init LEX: give :- S/NP/NP : (lambda $0:e (lambda $1:e (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) (actionpatient:<a,<e,t>> bring:a $1)))) -> {LEX#41=10.0(1.0),XEME#38=0.0(1.0),XTMP#42=0.0(0.1)}
[P1T2] Init LEX: give :- S/PP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#119=10.0(1.0),XEME#101=0.0(1.0),XTMP#85=0.0(0.1)}
[P1T2] Init LEX: go :- S/PP : (lambda $0:<a,t> (and:<t*,t> (action:<a,t> walk:a) ($0 walk:a))) -> {LEX#40=10.0(1.0),XEME#24=0.0(1.0),XTMP#43=0.0(0.1)}
[P1T2] Init LEX: give :- S/NP/NP : (lambda $0:e (lambda $1:e (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) (actionpatient:<a,<e,t>> bring:a $1)))) -> {LEX#41=10.0(1.0),XEME#40=0.0(1.0),XTMP#44=0.0(0.1)}
[P1T2] Init LEX: 3516 :- NP : l3_516:ro -> {LEX#352=10.0(1.0),XEME#172=0.0(1.0),XTMP#19=0.0(0.1)}
[P1T2] Init LEX: take :- S/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#44=10.0(1.0),XEME#41=0.0(1.0),XTMP#46=0.0(0.1)}
[P1T2] Init LEX: please :- S\S : (lambda $0:e $0) -> {LEX#48=10.0(1.0),XEME#25=0.0(1.0),XTMP#49=0.0(0.1)}
[P1T2] Init LEX: of :- NP/NP : (lambda $0:e $0) -> {LEX#51=10.0(1.0),XEME#45=0.0(1.0),XTMP#51=0.0(0.1)}
[P1T2] Init LEX: of :- NP\N/NP : (lambda $0:e (lambda $1:<e,t> (the:<<e,t>,e> (lambda $2:e (and:<t*,t> (person:<pe,t> $0) ($1 $2) (possesses:<pe,<e,t>> $0 $2)))))) -> {LEX#33=10.0(1.0),XEME#46=0.0(1.0),XTMP#52=0.0(0.1)}
[P1T2] Init LEX: where :- S/NP : (lambda $0:e $0) -> {LEX#353=10.0(1.0),XEME#64=0.0(1.0),XTMP#146=0.0(0.1)}
[P1T2] Init LEX: give :- S/NP/NP : (lambda $0:e (lambda $1:e (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) (actionpatient:<a,<e,t>> bring:a $1)))) -> {LEX#41=10.0(1.0),XEME#33=0.0(1.0),XTMP#23=0.0(0.1)}
[P1T2] Init LEX: daniel urieli :- NP : daniel:pe -> {LEX#54=21.435469250725863(1.0),XEME#49=0.0(1.0),XTMP#19=0.0(0.1)}
[P1T2] Init LEX: take :- S/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#44=10.0(1.0),XEME#50=0.0(1.0),XTMP#57=0.0(0.1)}
[P1T2] Init LEX: no :- S\NP/(S\NP) : (lambda $0:<e,t> (lambda $1:e (not:<t,t> ($0 $1)))) -> {LEX#354=10.0(1.0),XEME#15=0.0(1.0),XTMP#150=0.0(0.1)}
[P1T2] Init LEX: deliver :- S/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#22=10.0(1.0),XEME#32=0.0(1.0),XTMP#58=0.0(0.1)}
[P1T2] Init LEX: take :- S/NP/NP : (lambda $0:e (lambda $1:e (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) (actionpatient:<a,<e,t>> bring:a $1)))) -> {LEX#57=10.0(1.0),XEME#51=0.0(1.0),XTMP#1=0.0(0.1)}
[P1T2] Init LEX: give :- S/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#9=10.0(1.0),XEME#33=0.0(1.0),XTMP#32=0.0(0.1)}
[P1T2] Init LEX: does :- S\NP/(S\NP) : (lambda $0:<e,t> (lambda $1:e ($0 $1))) -> {LEX#356=10.0(1.0),XEME#10=0.0(1.0),XTMP#5=0.0(0.1)}
[P1T2] Init LEX: bring :- S/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#60=10.0(1.0),XEME#53=0.0(1.0),XTMP#60=0.0(0.1)}
[P1T2] Init LEX: take :- S/PP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#2=10.0(1.0),XEME#54=0.0(1.0),XTMP#7=0.0(0.1)}
[P1T2] Init LEX: bring :- S/NP/NP : (lambda $0:e (lambda $1:e (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) (actionpatient:<a,<e,t>> bring:a $1)))) -> {LEX#64=10.0(1.0),XEME#153=0.0(1.0),XTMP#136=0.0(0.1)}
[P1T2] Init LEX: bring :- S/NP/NP : (lambda $0:e (lambda $1:e (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) (actionpatient:<a,<e,t>> bring:a $1)))) -> {LEX#64=10.0(1.0),XEME#91=0.0(1.0),XTMP#12=0.0(0.1)}
[P1T2] Init LEX: bring :- S/NP/NP : (lambda $0:e (lambda $1:e (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) (actionpatient:<a,<e,t>> bring:a $1)))) -> {LEX#64=10.0(1.0),XEME#56=0.0(1.0),XTMP#63=0.0(0.1)}
[P1T2] Init LEX: bring :- S/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#60=10.0(1.0),XEME#53=0.0(1.0),XTMP#143=0.0(0.1)}
[P1T2] Init LEX: give :- S/NP/NP : (lambda $0:e (lambda $1:e (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) (actionpatient:<a,<e,t>> bring:a $1)))) -> {LEX#41=10.0(1.0),XEME#40=0.0(1.0),XTMP#133=0.0(0.1)}
[P1T2] Init LEX: take :- S/PP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#2=10.0(1.0),XEME#50=0.0(1.0),XTMP#64=0.0(0.1)}
[P1T2] Init LEX: take :- S/PP/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#66=10.0(1.0),XEME#58=0.0(1.0),XTMP#65=0.0(0.1)}
[P1T2] Init LEX: give :- S/PP/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#18=10.0(1.0),XEME#33=0.0(1.0),XTMP#98=0.0(0.1)}
[P1T2] Init LEX: peter stone :- NP : peter:pe -> {LEX#363=21.435469250725863(1.0),XEME#173=0.0(1.0),XTMP#19=0.0(0.1)}
[P1T2] Init LEX: deliver :- S/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#22=10.0(1.0),XEME#130=0.0(1.0),XTMP#112=0.0(0.1)}
[P1T2] Init LEX: give :- S/NP/NP : (lambda $0:e (lambda $1:e (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) (actionpatient:<a,<e,t>> bring:a $1)))) -> {LEX#41=10.0(1.0),XEME#33=0.0(1.0),XTMP#48=0.0(0.1)}
[P1T2] Init LEX: 3502 :- NP : l3_502:ro -> {LEX#68=10.0(1.0),XEME#60=0.0(1.0),XTMP#19=0.0(0.1)}
[P1T2] Init LEX: take :- S/PP/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#66=10.0(1.0),XEME#89=0.0(1.0),XTMP#117=0.0(0.1)}
[P1T2] Init LEX: s :- NP/N\NP : (lambda $0:e (lambda $1:<e,t> (the:<<e,t>,e> (lambda $2:e (and:<t*,t> (person:<pe,t> $0) ($1 $2) (possesses:<pe,<e,t>> $0 $2)))))) -> {LEX#73=10.0(1.0),XEME#63=0.0(1.0),XTMP#70=0.0(0.1)}
[P1T2] Init LEX: deliver :- S/PP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#10=10.0(1.0),XEME#32=0.0(1.0),XTMP#131=0.0(0.1)}
[P1T2] Init LEX: count :- S/(S\NP)/N : (lambda $0:<e,t> (lambda $1:<e,t> (count:<<e,t>,i> (lambda $2:e (and:<t*,t> ($0 $2) ($1 $2)))))) -> {LEX#75=10.0(1.0),XEME#65=0.0(1.0),XTMP#24=0.0(0.1)}
[P1T2] Init LEX: dennis davis :- NP : dennis:pe -> {LEX#77=21.435469250725863(1.0),XEME#67=0.0(1.0),XTMP#19=0.0(0.1)}
[P1T2] Init LEX: s :- NP/N\NP : (lambda $0:e (lambda $1:<e,t> (the:<<e,t>,e> (lambda $2:e (and:<t*,t> (person:<pe,t> $0) ($1 $2) (possesses:<pe,<e,t>> $0 $2)))))) -> {LEX#73=10.0(1.0),XEME#68=0.0(1.0),XTMP#73=0.0(0.1)}
[P1T2] Init LEX: give :- S/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#9=10.0(1.0),XEME#125=0.0(1.0),XTMP#25=0.0(0.1)}
[P1T2] Init LEX: not :- PP/PP : (lambda $0:<e,t> (lambda $1:e (not:<t,t> ($0 $1)))) -> {LEX#81=10.0(1.0),XEME#7=0.0(1.0),XTMP#16=0.0(0.1)}
[P1T2] Init LEX: bring :- S/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#60=10.0(1.0),XEME#71=0.0(1.0),XTMP#75=0.0(0.1)}
[P1T2] Init LEX: give :- S/NP/NP : (lambda $0:e (lambda $1:e (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) (actionpatient:<a,<e,t>> bring:a $1)))) -> {LEX#41=10.0(1.0),XEME#72=0.0(1.0),XTMP#76=0.0(0.1)}
[P1T2] Init LEX: you :- NP : self:self -> {LEX#371=10.0(1.0),XEME#174=0.0(1.0),XTMP#19=0.0(0.1)}
[P1T2] Init LEX: deliver :- S/NP/NP : (lambda $0:e (lambda $1:e (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) (actionpatient:<a,<e,t>> bring:a $1)))) -> {LEX#83=10.0(1.0),XEME#43=0.0(1.0),XTMP#77=0.0(0.1)}
[P1T2] Init LEX: s :- NP/N\NP : (lambda $0:e (lambda $1:<e,t> (the:<<e,t>,e> (lambda $2:e (and:<t*,t> (person:<pe,t> $0) ($1 $2) (possesses:<pe,<e,t>> $0 $2)))))) -> {LEX#73=10.0(1.0),XEME#175=0.0(1.0),XTMP#144=0.0(0.1)}
[P1T2] Init LEX: bring :- S/PP/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#117=10.0(1.0),XEME#71=0.0(1.0),XTMP#127=0.0(0.1)}
[P1T2] Init LEX: deliver :- S/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#22=10.0(1.0),XEME#29=0.0(1.0),XTMP#57=0.0(0.1)}
[P1T2] Init LEX: bring :- S/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#60=10.0(1.0),XEME#73=0.0(1.0),XTMP#79=0.0(0.1)}
[P1T2] Init LEX: of :- NP\N/NP : (lambda $0:e (lambda $1:<e,t> (the:<<e,t>,e> (lambda $2:e (and:<t*,t> (person:<pe,t> $0) ($1 $2) (possesses:<pe,<e,t>> $0 $2)))))) -> {LEX#33=10.0(1.0),XEME#176=0.0(1.0),XTMP#100=0.0(0.1)}
[P1T2] Init LEX: 3418 :- NP : l3_418:ro -> {LEX#86=10.0(1.0),XEME#74=0.0(1.0),XTMP#19=0.0(0.1)}
[P1T2] Init LEX: give :- S/NP/NP : (lambda $0:e (lambda $1:e (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) (actionpatient:<a,<e,t>> bring:a $1)))) -> {LEX#41=10.0(1.0),XEME#124=0.0(1.0),XTMP#103=0.0(0.1)}
[P1T2] Init LEX: deliver :- S/PP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#10=10.0(1.0),XEME#77=0.0(1.0),XTMP#80=0.0(0.1)}
[P1T2] Init LEX: go :- S/PP : (lambda $0:<a,t> (and:<t*,t> (action:<a,t> walk:a) ($0 walk:a))) -> {LEX#40=10.0(1.0),XEME#79=0.0(1.0),XTMP#15=0.0(0.1)}
[P1T2] Init LEX: give :- S/PP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#119=10.0(1.0),XEME#96=0.0(1.0),XTMP#13=0.0(0.1)}
[P1T2] Init LEX: of :- NP\N/NP : (lambda $0:e (lambda $1:<e,t> (the:<<e,t>,e> (lambda $2:e (and:<t*,t> (person:<pe,t> $0) ($1 $2) (possesses:<pe,<e,t>> $0 $2)))))) -> {LEX#33=10.0(1.0),XEME#6=0.0(1.0),XTMP#50=0.0(0.1)}
[P1T2] Init LEX: bring :- S/PP/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#117=10.0(1.0),XEME#109=0.0(1.0),XTMP#54=0.0(0.1)}
[P1T2] Init LEX: bring :- S/PP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#34=10.0(1.0),XEME#31=0.0(1.0),XTMP#110=0.0(0.1)}
[P1T2] Init LEX: bring :- S/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#60=10.0(1.0),XEME#80=0.0(1.0),XTMP#83=0.0(0.1)}
[P1T2] Init LEX: bring :- S/NP/NP : (lambda $0:e (lambda $1:e (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) (actionpatient:<a,<e,t>> bring:a $1)))) -> {LEX#64=10.0(1.0),XEME#56=0.0(1.0),XTMP#106=0.0(0.1)}
[P1T2] Init LEX: bring :- S/NP/NP : (lambda $0:e (lambda $1:e (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) (actionpatient:<a,<e,t>> bring:a $1)))) -> {LEX#64=10.0(1.0),XEME#92=0.0(1.0),XTMP#133=0.0(0.1)}
[P1T2] Init LEX: give :- S/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#9=10.0(1.0),XEME#82=0.0(1.0),XTMP#45=0.0(0.1)}
[P1T2] Init LEX: stacy miller :- NP : stacy:pe -> {LEX#92=21.435469250725863(1.0),XEME#83=0.0(1.0),XTMP#19=0.0(0.1)}
[P1T2] Init LEX: deliver :- S/PP/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#31=10.0(1.0),XEME#85=0.0(1.0),XTMP#87=0.0(0.1)}
[P1T2] Init LEX: bring :- S/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#60=10.0(1.0),XEME#106=0.0(1.0),XTMP#25=0.0(0.1)}
[P1T2] Init LEX: take :- S/PP/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#66=10.0(1.0),XEME#89=0.0(1.0),XTMP#91=0.0(0.1)}
[P1T2] Init LEX: bring :- S/NP/NP : (lambda $0:e (lambda $1:e (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) (actionpatient:<a,<e,t>> bring:a $1)))) -> {LEX#64=10.0(1.0),XEME#73=0.0(1.0),XTMP#93=0.0(0.1)}
[P1T2] Init LEX: deliver :- S/NP/NP : (lambda $0:e (lambda $1:e (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) (actionpatient:<a,<e,t>> bring:a $1)))) -> {LEX#83=10.0(1.0),XEME#77=0.0(1.0),XTMP#94=0.0(0.1)}
[P1T2] Init LEX: go :- S/PP : (lambda $0:<a,t> (and:<t*,t> (action:<a,t> walk:a) ($0 walk:a))) -> {LEX#40=10.0(1.0),XEME#13=0.0(1.0),XTMP#4=0.0(0.1)}
[P1T2] Init LEX: take :- S/PP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#2=10.0(1.0),XEME#2=0.0(1.0),XTMP#66=0.0(0.1)}
[P1T2] Init LEX: bring :- S/PP/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#117=10.0(1.0),XEME#53=0.0(1.0),XTMP#53=0.0(0.1)}
[P1T2] Init LEX: kazunori iwata :- NP : kazunori:pe -> {LEX#377=21.435469250725863(1.0),XEME#177=0.0(1.0),XTMP#19=0.0(0.1)}
[P1T2] Init LEX: bring :- S/PP/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#117=10.0(1.0),XEME#88=0.0(1.0),XTMP#6=0.0(0.1)}
[P1T2] Init LEX: bring :- S/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#60=10.0(1.0),XEME#91=0.0(1.0),XTMP#95=0.0(0.1)}
[P1T2] Init LEX: deliver :- S/PP/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#31=10.0(1.0),XEME#43=0.0(1.0),XTMP#56=0.0(0.1)}
[P1T2] Init LEX: give :- S/NP/NP : (lambda $0:e (lambda $1:e (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) (actionpatient:<a,<e,t>> bring:a $1)))) -> {LEX#41=10.0(1.0),XEME#145=0.0(1.0),XTMP#89=0.0(0.1)}
[P1T2] Init LEX: walk :- S/PP : (lambda $0:<a,t> (and:<t*,t> (action:<a,t> walk:a) ($0 walk:a))) -> {LEX#4=10.0(1.0),XEME#35=0.0(1.0),XTMP#82=0.0(0.1)}
[P1T2] Init LEX: bring :- S/PP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#34=10.0(1.0),XEME#92=0.0(1.0),XTMP#96=0.0(0.1)}
[P1T2] Init LEX: bring :- S/NP/NP : (lambda $0:e (lambda $1:e (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) (actionpatient:<a,<e,t>> bring:a $1)))) -> {LEX#64=10.0(1.0),XEME#53=0.0(1.0),XTMP#72=0.0(0.1)}
[P1T2] Init LEX: take :- S/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#44=10.0(1.0),XEME#93=0.0(1.0),XTMP#97=0.0(0.1)}
[P1T2] Init LEX: how many :- S/(S/NP)/N : (lambda $0:<e,t> (lambda $1:<e,t> (count:<<e,t>,i> (lambda $2:e (and:<t*,t> ($0 $2) ($1 $2)))))) -> {LEX#227=21.435469250725863(1.0),XEME#178=0.0(1.0),XTMP#151=0.0(0.1)}
[P1T2] Init LEX: room :- N : (lambda $0:e (room:<ro,t> $0)) -> {LEX#380=10.0(1.0),XEME#179=0.0(1.0),XTMP#101=0.0(0.1)}
[P1T2] Init LEX: 3412 :- NP : l3_412:ro -> {LEX#101=10.0(1.0),XEME#95=0.0(1.0),XTMP#19=0.0(0.1)}
[P1T2] Init LEX: give :- S/NP/NP : (lambda $0:e (lambda $1:e (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) (actionpatient:<a,<e,t>> bring:a $1)))) -> {LEX#41=10.0(1.0),XEME#96=0.0(1.0),XTMP#67=0.0(0.1)}
[P1T2] Init LEX: rooms :- N : (lambda $0:e (room:<ro,t> $0)) -> {LEX#104=10.0(1.0),XEME#98=0.0(1.0),XTMP#101=0.0(0.1)}
[P1T2] Init LEX: have :- S/NP/(S/NP) : (lambda $0:<e,t> (lambda $1:e ($0 $1))) -> {LEX#105=10.0(1.0),XEME#70=0.0(1.0),XTMP#11=0.0(0.1)}
[P1T2] Init LEX: s :- NP/N\NP : (lambda $0:e (lambda $1:<e,t> (the:<<e,t>,e> (lambda $2:e (and:<t*,t> (person:<pe,t> $0) ($1 $2) (possesses:<pe,<e,t>> $0 $2)))))) -> {LEX#73=10.0(1.0),XEME#99=0.0(1.0),XTMP#99=0.0(0.1)}
[P1T2] Init LEX: deliver :- S/NP/NP : (lambda $0:e (lambda $1:e (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) (actionpatient:<a,<e,t>> bring:a $1)))) -> {LEX#83=10.0(1.0),XEME#29=0.0(1.0),XTMP#72=0.0(0.1)}
[P1T2] Init LEX: give :- S/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#9=10.0(1.0),XEME#34=0.0(1.0),XTMP#46=0.0(0.1)}
[P1T2] Init LEX: take :- S/PP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#2=10.0(1.0),XEME#1=0.0(1.0),XTMP#85=0.0(0.1)}
[P1T2] Init LEX: coffee :- NP : coffee:it -> {LEX#385=10.0(1.0),XEME#180=0.0(1.0),XTMP#19=0.0(0.1)}
[P1T2] Init LEX: go :- S/PP : (lambda $0:<a,t> (and:<t*,t> (action:<a,t> walk:a) ($0 walk:a))) -> {LEX#40=10.0(1.0),XEME#55=0.0(1.0),XTMP#102=0.0(0.1)}
[P1T2] Init LEX: take :- S/NP/NP : (lambda $0:e (lambda $1:e (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) (actionpatient:<a,<e,t>> bring:a $1)))) -> {LEX#57=10.0(1.0),XEME#93=0.0(1.0),XTMP#103=0.0(0.1)}
[P1T2] Init LEX: give :- S/NP/NP : (lambda $0:e (lambda $1:e (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) (actionpatient:<a,<e,t>> bring:a $1)))) -> {LEX#41=10.0(1.0),XEME#101=0.0(1.0),XTMP#26=0.0(0.1)}
[P1T2] Init LEX: bring :- S/NP/NP : (lambda $0:e (lambda $1:e (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) (actionpatient:<a,<e,t>> bring:a $1)))) -> {LEX#64=10.0(1.0),XEME#88=0.0(1.0),XTMP#78=0.0(0.1)}
[P1T2] Init LEX: give :- S/NP/NP : (lambda $0:e (lambda $1:e (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) (actionpatient:<a,<e,t>> bring:a $1)))) -> {LEX#41=10.0(1.0),XEME#156=0.0(1.0),XTMP#136=0.0(0.1)}
[P1T2] Init LEX: deliver :- S/NP/NP : (lambda $0:e (lambda $1:e (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) (actionpatient:<a,<e,t>> bring:a $1)))) -> {LEX#83=10.0(1.0),XEME#43=0.0(1.0),XTMP#106=0.0(0.1)}
[P1T2] Init LEX: 3428 :- NP : l3_428:ro -> {LEX#114=10.0(1.0),XEME#103=0.0(1.0),XTMP#19=0.0(0.1)}
[P1T2] Init LEX: bring :- S/PP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#34=10.0(1.0),XEME#31=0.0(1.0),XTMP#80=0.0(0.1)}
[P1T2] Init LEX: alice anderson :- NP : alice:pe -> {LEX#389=21.435469250725863(1.0),XEME#181=0.0(1.0),XTMP#19=0.0(0.1)}
[P1T2] Init LEX: deliver :- S/PP/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#31=10.0(1.0),XEME#104=0.0(1.0),XTMP#6=0.0(0.1)}
[P1T2] Init LEX: bring :- S/PP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#34=10.0(1.0),XEME#92=0.0(1.0),XTMP#40=0.0(0.1)}
[P1T2] Init LEX: apple :- NP : apple:it -> {LEX#390=10.0(1.0),XEME#182=0.0(1.0),XTMP#19=0.0(0.1)}
[P1T2] Init LEX: take :- S/PP/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#66=10.0(1.0),XEME#112=0.0(1.0),XTMP#119=0.0(0.1)}
[P1T2] Init LEX: take :- S/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#44=10.0(1.0),XEME#112=0.0(1.0),XTMP#35=0.0(0.1)}
[P1T2] Init LEX: take :- S/NP/NP : (lambda $0:e (lambda $1:e (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) (actionpatient:<a,<e,t>> bring:a $1)))) -> {LEX#57=10.0(1.0),XEME#122=0.0(1.0),XTMP#67=0.0(0.1)}
[P1T2] Init LEX: bring :- S/PP/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#117=10.0(1.0),XEME#106=0.0(1.0),XTMP#108=0.0(0.1)}
[P1T2] Init LEX: give :- S/PP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#119=10.0(1.0),XEME#14=0.0(1.0),XTMP#109=0.0(0.1)}
[P1T2] Init LEX: deliver :- S/PP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#10=10.0(1.0),XEME#77=0.0(1.0),XTMP#110=0.0(0.1)}
[P1T2] Init LEX: bob brown :- NP : bob:pe -> {LEX#121=21.435469250725863(1.0),XEME#108=0.0(1.0),XTMP#19=0.0(0.1)}
[P1T2] Init LEX: give :- S/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#9=10.0(1.0),XEME#37=0.0(1.0),XTMP#95=0.0(0.1)}
[P1T2] Init LEX: excluding :- PP/NP : (lambda $0:e (lambda $1:e (not:<t,t> (equals:<e,<e,t>> $1 $0)))) -> {LEX#123=10.0(1.0),XEME#102=0.0(1.0),XTMP#111=0.0(0.1)}
[P1T2] Init LEX: deliver :- S/PP/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#31=10.0(1.0),XEME#137=0.0(1.0),XTMP#132=0.0(0.1)}
[P1T2] Init LEX: give :- S/NP/NP : (lambda $0:e (lambda $1:e (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) (actionpatient:<a,<e,t>> bring:a $1)))) -> {LEX#41=10.0(1.0),XEME#94=0.0(1.0),XTMP#93=0.0(0.1)}
[P1T2] Init LEX: take :- S/PP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#2=10.0(1.0),XEME#89=0.0(1.0),XTMP#113=0.0(0.1)}
[P1T2] Init LEX: give :- S/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#9=10.0(1.0),XEME#14=0.0(1.0),XTMP#57=0.0(0.1)}
[P1T2] Init LEX: take :- S/NP/NP : (lambda $0:e (lambda $1:e (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) (actionpatient:<a,<e,t>> bring:a $1)))) -> {LEX#57=10.0(1.0),XEME#183=0.0(1.0),XTMP#42=0.0(0.1)}
[P1T2] Init LEX: bring :- S/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#60=10.0(1.0),XEME#109=0.0(1.0),XTMP#112=0.0(0.1)}
[P1T2] Init LEX: take :- S/NP/NP : (lambda $0:e (lambda $1:e (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) (actionpatient:<a,<e,t>> bring:a $1)))) -> {LEX#57=10.0(1.0),XEME#135=0.0(1.0),XTMP#44=0.0(0.1)}
[P1T2] Init LEX: count :- S/(S\NP)/N : (lambda $0:<e,t> (lambda $1:<e,t> (count:<<e,t>,i> (lambda $2:e (and:<t*,t> ($0 $2) ($1 $2)))))) -> {LEX#75=10.0(1.0),XEME#66=0.0(1.0),XTMP#62=0.0(0.1)}
[P1T2] Init LEX: deliver :- S/PP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#10=10.0(1.0),XEME#36=0.0(1.0),XTMP#96=0.0(0.1)}
[P1T2] Init LEX: go :- S/PP : (lambda $0:<a,t> (and:<t*,t> (action:<a,t> walk:a) ($0 walk:a))) -> {LEX#40=10.0(1.0),XEME#110=0.0(1.0),XTMP#114=0.0(0.1)}
[P1T2] Init LEX: 3432 :- NP : l3_432:ro -> {LEX#401=10.0(1.0),XEME#184=0.0(1.0),XTMP#19=0.0(0.1)}
[P1T2] Init LEX: 3414a :- NP : l3_414a:ro -> {LEX#127=10.0(1.0),XEME#111=0.0(1.0),XTMP#19=0.0(0.1)}
[P1T2] Init LEX: take :- S/NP/NP : (lambda $0:e (lambda $1:e (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) (actionpatient:<a,<e,t>> bring:a $1)))) -> {LEX#57=10.0(1.0),XEME#112=0.0(1.0),XTMP#23=0.0(0.1)}
[P1T2] Init LEX: give :- S/PP/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#18=10.0(1.0),XEME#14=0.0(1.0),XTMP#53=0.0(0.1)}
[P1T2] Init LEX: bring :- S/PP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#34=10.0(1.0),XEME#113=0.0(1.0),XTMP#115=0.0(0.1)}
[P1T2] Init LEX: soda :- NP : soda:it -> {LEX#403=10.0(1.0),XEME#185=0.0(1.0),XTMP#19=0.0(0.1)}
[P1T2] Init LEX: give :- S/NP/NP : (lambda $0:e (lambda $1:e (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) (actionpatient:<a,<e,t>> bring:a $1)))) -> {LEX#41=10.0(1.0),XEME#125=0.0(1.0),XTMP#33=0.0(0.1)}
[P1T2] Init LEX: bring :- S/NP/NP : (lambda $0:e (lambda $1:e (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) (actionpatient:<a,<e,t>> bring:a $1)))) -> {LEX#64=10.0(1.0),XEME#109=0.0(1.0),XTMP#1=0.0(0.1)}
[P1T2] Init LEX: bring :- S/NP/NP : (lambda $0:e (lambda $1:e (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) (actionpatient:<a,<e,t>> bring:a $1)))) -> {LEX#64=10.0(1.0),XEME#115=0.0(1.0),XTMP#67=0.0(0.1)}
[P1T2] Init LEX: a :- N/N : (lambda $0:<e,t> (lambda $1:e ($0 $1))) -> {LEX#131=10.0(1.0),XEME#62=0.0(1.0),XTMP#29=0.0(0.1)}
[P1T2] Init LEX: can you :- S/S : (lambda $0:<e,t> (lambda $1:e ($0 $1))) -> {LEX#132=21.435469250725863(1.0),XEME#16=0.0(1.0),XTMP#107=0.0(0.1)}
[P1T2] Init LEX: bring :- S/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#60=10.0(1.0),XEME#80=0.0(1.0),XTMP#137=0.0(0.1)}
[P1T2] Init LEX: count :- S/(S/NP)/N : (lambda $0:<e,t> (lambda $1:<e,t> (count:<<e,t>,i> (lambda $2:e (and:<t*,t> ($0 $2) ($1 $2)))))) -> {LEX#134=10.0(1.0),XEME#66=0.0(1.0),XTMP#59=0.0(0.1)}
[P1T2] Init LEX: of :- NP\N/NP : (lambda $0:e (lambda $1:<e,t> (the:<<e,t>,e> (lambda $2:e (and:<t*,t> (person:<pe,t> $0) ($1 $2) (possesses:<pe,<e,t>> $0 $2)))))) -> {LEX#33=10.0(1.0),XEME#171=0.0(1.0),XTMP#152=0.0(0.1)}
[P1T2] Init LEX: deliver :- S/PP/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#31=10.0(1.0),XEME#77=0.0(1.0),XTMP#92=0.0(0.1)}
[P1T2] Init LEX: give :- S/NP/NP : (lambda $0:e (lambda $1:e (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) (actionpatient:<a,<e,t>> bring:a $1)))) -> {LEX#41=10.0(1.0),XEME#100=0.0(1.0),XTMP#22=0.0(0.1)}
[P1T2] Init LEX: give :- S/PP/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#18=10.0(1.0),XEME#14=0.0(1.0),XTMP#118=0.0(0.1)}
[P1T2] Init LEX: take :- S/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#44=10.0(1.0),XEME#87=0.0(1.0),XTMP#9=0.0(0.1)}
[P1T2] Init LEX: 3404 :- NP : l3_404:ro -> {LEX#407=10.0(1.0),XEME#186=0.0(1.0),XTMP#19=0.0(0.1)}
[P1T2] Init LEX: deliver :- S/PP/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#31=10.0(1.0),XEME#77=0.0(1.0),XTMP#119=0.0(0.1)}
[P1T2] Init LEX: deliver :- S/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#22=10.0(1.0),XEME#29=0.0(1.0),XTMP#60=0.0(0.1)}
[P1T2] Init LEX: are :- PP/PP : (lambda $0:<e,t> (lambda $1:e ($0 $1))) -> {LEX#138=10.0(1.0),XEME#75=0.0(1.0),XTMP#68=0.0(0.1)}
[P1T2] Init LEX: deliver :- S/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#22=10.0(1.0),XEME#104=0.0(1.0),XTMP#142=0.0(0.1)}
[P1T2] Init LEX: take :- S/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#44=10.0(1.0),XEME#51=0.0(1.0),XTMP#112=0.0(0.1)}
[P1T2] Init LEX: give :- S/PP/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#18=10.0(1.0),XEME#59=0.0(1.0),XTMP#126=0.0(0.1)}
[P1T2] Init LEX: walk :- S/PP : (lambda $0:<a,t> (and:<t*,t> (action:<a,t> walk:a) ($0 walk:a))) -> {LEX#4=10.0(1.0),XEME#90=0.0(1.0),XTMP#138=0.0(0.1)}
[P1T2] Init LEX: offices :- N : (lambda $0:e (office:<of,t> $0)) -> {LEX#142=10.0(1.0),XEME#118=0.0(1.0),XTMP#101=0.0(0.1)}
[P1T2] Init LEX: is :- S/S : (lambda $0:t $0) -> {LEX#143=10.0(1.0),XEME#5=0.0(1.0),XTMP#120=0.0(0.1)}
[P1T2] Init LEX: take :- S/PP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#2=10.0(1.0),XEME#119=0.0(1.0),XTMP#84=0.0(0.1)}
[P1T2] Init LEX: take :- S/NP/NP : (lambda $0:e (lambda $1:e (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) (actionpatient:<a,<e,t>> bring:a $1)))) -> {LEX#57=10.0(1.0),XEME#120=0.0(1.0),XTMP#89=0.0(0.1)}
[P1T2] Init LEX: bring :- S/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#60=10.0(1.0),XEME#88=0.0(1.0),XTMP#9=0.0(0.1)}
[P1T2] Init LEX: take :- S/NP/NP : (lambda $0:e (lambda $1:e (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) (actionpatient:<a,<e,t>> bring:a $1)))) -> {LEX#57=10.0(1.0),XEME#89=0.0(1.0),XTMP#128=0.0(0.1)}
[P1T2] Init LEX: take :- S/PP/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#66=10.0(1.0),XEME#112=0.0(1.0),XTMP#98=0.0(0.1)}
[P1T2] Init LEX: is :- S\NP/NP : (lambda $0:e (lambda $1:e (equals:<e,<e,t>> $1 $0))) -> {LEX#148=10.0(1.0),XEME#121=0.0(1.0),XTMP#121=0.0(0.1)}
[P1T2] Init LEX: deliver :- S/NP/NP : (lambda $0:e (lambda $1:e (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) (actionpatient:<a,<e,t>> bring:a $1)))) -> {LEX#83=10.0(1.0),XEME#29=0.0(1.0),XTMP#116=0.0(0.1)}
[P1T2] Init LEX: give :- S/NP/NP : (lambda $0:e (lambda $1:e (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) (actionpatient:<a,<e,t>> bring:a $1)))) -> {LEX#41=10.0(1.0),XEME#34=0.0(1.0),XTMP#106=0.0(0.1)}
[P1T2] Init LEX: take :- S/NP/NP : (lambda $0:e (lambda $1:e (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) (actionpatient:<a,<e,t>> bring:a $1)))) -> {LEX#57=10.0(1.0),XEME#50=0.0(1.0),XTMP#116=0.0(0.1)}
[P1T2] Init LEX: take :- S/PP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#2=10.0(1.0),XEME#122=0.0(1.0),XTMP#13=0.0(0.1)}
[P1T2] Init LEX: bring :- S/NP/NP : (lambda $0:e (lambda $1:e (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) (actionpatient:<a,<e,t>> bring:a $1)))) -> {LEX#64=10.0(1.0),XEME#53=0.0(1.0),XTMP#123=0.0(0.1)}
[P1T2] Init LEX: go :- S/PP : (lambda $0:<a,t> (and:<t*,t> (action:<a,t> walk:a) ($0 walk:a))) -> {LEX#40=10.0(1.0),XEME#79=0.0(1.0),XTMP#81=0.0(0.1)}
[P1T2] Init LEX: give :- S/PP/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#18=10.0(1.0),XEME#187=0.0(1.0),XTMP#127=0.0(0.1)}
[P1T2] Init LEX: bring :- S/PP/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#117=10.0(1.0),XEME#91=0.0(1.0),XTMP#47=0.0(0.1)}
[P1T2] Init LEX: are :- NP\N/(NP/N) : (lambda $0:<<e,t>,e> (lambda $1:<e,t> ($0 (lambda $2:e ($1 $2))))) -> {LEX#422=10.0(1.0),XEME#75=0.0(1.0),XTMP#55=0.0(0.1)}
[P1T2] Init LEX: give :- S/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#9=10.0(1.0),XEME#94=0.0(1.0),XTMP#79=0.0(0.1)}
[P1T2] Init LEX: deliver :- S/PP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#10=10.0(1.0),XEME#29=0.0(1.0),XTMP#109=0.0(0.1)}
[P1T2] Init LEX: how many :- S/(S\NP)/N : (lambda $0:<e,t> (lambda $1:<e,t> (count:<<e,t>,i> (lambda $2:e (and:<t*,t> ($0 $2) ($1 $2)))))) -> {LEX#25=21.435469250725863(1.0),XEME#17=0.0(1.0),XTMP#62=0.0(0.1)}
[P1T2] Init LEX: 3430 :- NP : l3_430:ro -> {LEX#425=10.0(1.0),XEME#188=0.0(1.0),XTMP#19=0.0(0.1)}
[P1T2] Init LEX: carol clark :- NP : carol:pe -> {LEX#426=21.435469250725863(1.0),XEME#189=0.0(1.0),XTMP#19=0.0(0.1)}
[P1T2] Init LEX: take :- S/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#44=10.0(1.0),XEME#87=0.0(1.0),XTMP#88=0.0(0.1)}
[P1T2] Init LEX: bring :- S/PP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#34=10.0(1.0),XEME#91=0.0(1.0),XTMP#34=0.0(0.1)}
[P1T2] Init LEX: give :- S/PP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#119=10.0(1.0),XEME#125=0.0(1.0),XTMP#10=0.0(0.1)}
[P1T2] Init LEX: the :- NP/N : (lambda $0:<e,t> (the:<<e,t>,e> (lambda $1:e ($0 $1)))) -> {LEX#166=10.0(1.0),XEME#0=0.0(1.0),XTMP#74=0.0(0.1)}
[P1T2] Init LEX: bring :- S/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#60=10.0(1.0),XEME#81=0.0(1.0),XTMP#45=0.0(0.1)}
[P1T2] Init LEX: yourself :- NP : self:self -> {LEX#170=10.0(1.0),XEME#126=0.0(1.0),XTMP#19=0.0(0.1)}
[P1T2] Init LEX: how many :- S/(S/NP)/N : (lambda $0:<e,t> (lambda $1:<e,t> (count:<<e,t>,i> (lambda $2:e (and:<t*,t> ($0 $2) ($1 $2)))))) -> {LEX#227=21.435469250725863(1.0),XEME#23=0.0(1.0),XTMP#153=0.0(0.1)}
[P1T2] Init LEX: deliver :- S/PP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#10=10.0(1.0),XEME#127=0.0(1.0),XTMP#66=0.0(0.1)}
[P1T2] Init LEX: give :- S/PP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#119=10.0(1.0),XEME#94=0.0(1.0),XTMP#7=0.0(0.1)}
[P1T2] Init LEX: take :- S/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#44=10.0(1.0),XEME#128=0.0(1.0),XTMP#25=0.0(0.1)}
[P1T2] Init LEX: are :- S\NP/PP : (lambda $0:<e,t> (lambda $1:e ($0 $1))) -> {LEX#175=10.0(1.0),XEME#75=0.0(1.0),XTMP#38=0.0(0.1)}
[P1T2] Init LEX: give :- S/PP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#119=10.0(1.0),XEME#33=0.0(1.0),XTMP#110=0.0(0.1)}
[P1T2] Init LEX: take :- S/NP/NP : (lambda $0:e (lambda $1:e (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) (actionpatient:<a,<e,t>> bring:a $1)))) -> {LEX#57=10.0(1.0),XEME#41=0.0(1.0),XTMP#106=0.0(0.1)}
[P1T2] Init LEX: bring :- S/PP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#34=10.0(1.0),XEME#88=0.0(1.0),XTMP#145=0.0(0.1)}
[P1T2] Init LEX: bring :- S/PP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#34=10.0(1.0),XEME#53=0.0(1.0),XTMP#125=0.0(0.1)}
[P1T2] Init LEX: give :- S/PP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#119=10.0(1.0),XEME#40=0.0(1.0),XTMP#96=0.0(0.1)}
[P1T2] Init LEX: give :- S/PP/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#18=10.0(1.0),XEME#190=0.0(1.0),XTMP#65=0.0(0.1)}
[P1T2] Init LEX: give :- S/PP/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#18=10.0(1.0),XEME#8=0.0(1.0),XTMP#6=0.0(0.1)}
[P1T2] Init LEX: shiqi zhang :- NP : shiqi:pe -> {LEX#430=21.435469250725863(1.0),XEME#191=0.0(1.0),XTMP#19=0.0(0.1)}
[P1T2] Init LEX: take :- S/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#44=10.0(1.0),XEME#54=0.0(1.0),XTMP#79=0.0(0.1)}
[P1T2] Init LEX: take :- S/NP/NP : (lambda $0:e (lambda $1:e (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) (actionpatient:<a,<e,t>> bring:a $1)))) -> {LEX#57=10.0(1.0),XEME#2=0.0(1.0),XTMP#36=0.0(0.1)}
[P1T2] Init LEX: bring :- S/NP/NP : (lambda $0:e (lambda $1:e (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) (actionpatient:<a,<e,t>> bring:a $1)))) -> {LEX#64=10.0(1.0),XEME#78=0.0(1.0),XTMP#103=0.0(0.1)}
[P1T2] Init LEX: 3426 :- NP : l3_426:ro -> {LEX#434=10.0(1.0),XEME#192=0.0(1.0),XTMP#19=0.0(0.1)}
[P1T2] Init LEX: deliver :- S/PP/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#31=10.0(1.0),XEME#29=0.0(1.0),XTMP#118=0.0(0.1)}
[P1T2] Init LEX: deliver :- S/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#22=10.0(1.0),XEME#77=0.0(1.0),XTMP#35=0.0(0.1)}
[P1T2] Init LEX: take :- S/PP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#2=10.0(1.0),XEME#128=0.0(1.0),XTMP#10=0.0(0.1)}
[P1T2] Init LEX: deliver :- S/PP/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#31=10.0(1.0),XEME#32=0.0(1.0),XTMP#117=0.0(0.1)}
[P1T2] Init LEX: give :- S/NP/NP : (lambda $0:e (lambda $1:e (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) (actionpatient:<a,<e,t>> bring:a $1)))) -> {LEX#41=10.0(1.0),XEME#57=0.0(1.0),XTMP#36=0.0(0.1)}
[P1T2] Init LEX: deliver :- S/NP/NP : (lambda $0:e (lambda $1:e (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) (actionpatient:<a,<e,t>> bring:a $1)))) -> {LEX#83=10.0(1.0),XEME#132=0.0(1.0),XTMP#22=0.0(0.1)}
[P1T2] Init LEX: deliver :- S/NP/NP : (lambda $0:e (lambda $1:e (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) (actionpatient:<a,<e,t>> bring:a $1)))) -> {LEX#83=10.0(1.0),XEME#32=0.0(1.0),XTMP#41=0.0(0.1)}
[P1T2] Init LEX: give :- S/PP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#119=10.0(1.0),XEME#100=0.0(1.0),XTMP#84=0.0(0.1)}
[P1T2] Init LEX: take :- S/PP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#2=10.0(1.0),XEME#112=0.0(1.0),XTMP#110=0.0(0.1)}
[P1T2] Init LEX: take :- S/PP/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#66=10.0(1.0),XEME#134=0.0(1.0),XTMP#127=0.0(0.1)}
[P1T2] Init LEX: with :- NP\N/(NP/N) : (lambda $0:<<e,t>,e> (lambda $1:<e,t> ($0 (lambda $2:e ($1 $2))))) -> {LEX#443=10.0(1.0),XEME#39=0.0(1.0),XTMP#55=0.0(0.1)}
[P1T2] Init LEX: deliver :- S/PP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#10=10.0(1.0),XEME#48=0.0(1.0),XTMP#85=0.0(0.1)}
[P1T2] Init LEX: give :- S/NP/NP : (lambda $0:e (lambda $1:e (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) (actionpatient:<a,<e,t>> bring:a $1)))) -> {LEX#41=10.0(1.0),XEME#37=0.0(1.0),XTMP#128=0.0(0.1)}
[P1T2] Init LEX: give :- S/PP/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#18=10.0(1.0),XEME#33=0.0(1.0),XTMP#119=0.0(0.1)}
[P1T2] Init LEX: calendar :- NP : calendar:it -> {LEX#445=10.0(1.0),XEME#193=0.0(1.0),XTMP#19=0.0(0.1)}
[P1T2] Init LEX: take :- S/PP/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#66=10.0(1.0),XEME#50=0.0(1.0),XTMP#53=0.0(0.1)}
[P1T2] Init LEX: take :- S/PP/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#66=10.0(1.0),XEME#87=0.0(1.0),XTMP#6=0.0(0.1)}
[P1T2] Init LEX: is :- S/NP/(S/NP) : (lambda $0:<e,t> (lambda $1:e ($0 $1))) -> {LEX#446=10.0(1.0),XEME#5=0.0(1.0),XTMP#11=0.0(0.1)}
[P1T2] Init LEX: take :- S/PP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#2=10.0(1.0),XEME#135=0.0(1.0),XTMP#96=0.0(0.1)}
[P1T2] Init LEX: not :- N/N : (lambda $0:<e,t> (lambda $1:e (not:<t,t> ($0 $1)))) -> {LEX#186=10.0(1.0),XEME#7=0.0(1.0),XTMP#129=0.0(0.1)}
[P1T2] Init LEX: bring :- S/PP/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#117=10.0(1.0),XEME#73=0.0(1.0),XTMP#18=0.0(0.1)}
[P1T2] Init LEX: deliver :- S/PP/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#31=10.0(1.0),XEME#137=0.0(1.0),XTMP#126=0.0(0.1)}
[P1T2] Init LEX: bring :- S/NP/NP : (lambda $0:e (lambda $1:e (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) (actionpatient:<a,<e,t>> bring:a $1)))) -> {LEX#64=10.0(1.0),XEME#81=0.0(1.0),XTMP#27=0.0(0.1)}
[P1T2] Init LEX: which :- S/NP : (lambda $0:e $0) -> {LEX#451=10.0(1.0),XEME#117=0.0(1.0),XTMP#146=0.0(0.1)}
[P1T2] Init LEX: bring :- S/PP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#34=10.0(1.0),XEME#53=0.0(1.0),XTMP#64=0.0(0.1)}
[P1T2] Init LEX: deliver :- S/PP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#10=10.0(1.0),XEME#32=0.0(1.0),XTMP#113=0.0(0.1)}
[P1T2] Init LEX: give :- S/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#9=10.0(1.0),XEME#8=0.0(1.0),XTMP#88=0.0(0.1)}
[P1T2] Init LEX: is :- NP\N/(NP/N) : (lambda $0:<<e,t>,e> (lambda $1:<e,t> ($0 (lambda $2:e ($1 $2))))) -> {LEX#192=10.0(1.0),XEME#5=0.0(1.0),XTMP#55=0.0(0.1)}
[P1T2] Init LEX: bring :- S/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#60=10.0(1.0),XEME#31=0.0(1.0),XTMP#130=0.0(0.1)}
[P1T2] Init LEX: bring :- S/PP/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#117=10.0(1.0),XEME#88=0.0(1.0),XTMP#17=0.0(0.1)}
[P1T2] Init LEX: bring :- S/PP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#34=10.0(1.0),XEME#129=0.0(1.0),XTMP#2=0.0(0.1)}
[P1T2] Init LEX: give :- S/NP/NP : (lambda $0:e (lambda $1:e (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) (actionpatient:<a,<e,t>> bring:a $1)))) -> {LEX#41=10.0(1.0),XEME#14=0.0(1.0),XTMP#116=0.0(0.1)}
[P1T2] Init LEX: walk :- S/PP : (lambda $0:<a,t> (and:<t*,t> (action:<a,t> walk:a) ($0 walk:a))) -> {LEX#4=10.0(1.0),XEME#84=0.0(1.0),XTMP#102=0.0(0.1)}
[P1T2] Init LEX: s :- NP/N\NP : (lambda $0:e (lambda $1:<e,t> (the:<<e,t>,e> (lambda $2:e (and:<t*,t> (person:<pe,t> $0) ($1 $2) (possesses:<pe,<e,t>> $0 $2)))))) -> {LEX#73=10.0(1.0),XEME#136=0.0(1.0),XTMP#105=0.0(0.1)}
[P1T2] Init LEX: tell me :- S/S : (lambda $0:<e,t> (lambda $1:e ($0 $1))) -> {LEX#193=21.435469250725863(1.0),XEME#107=0.0(1.0),XTMP#107=0.0(0.1)}
[P1T2] Init LEX: deliver :- S/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#22=10.0(1.0),XEME#44=0.0(1.0),XTMP#79=0.0(0.1)}
[P1T2] Init LEX: deliver :- S/NP/NP : (lambda $0:e (lambda $1:e (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) (actionpatient:<a,<e,t>> bring:a $1)))) -> {LEX#83=10.0(1.0),XEME#77=0.0(1.0),XTMP#48=0.0(0.1)}
[P1T2] Init LEX: take :- S/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#44=10.0(1.0),XEME#89=0.0(1.0),XTMP#95=0.0(0.1)}
[P1T2] Init LEX: 3402 :- NP : l3_402:ro -> {LEX#457=10.0(1.0),XEME#194=0.0(1.0),XTMP#19=0.0(0.1)}
[P1T2] Init LEX: give :- S/PP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#119=10.0(1.0),XEME#37=0.0(1.0),XTMP#131=0.0(0.1)}
[P1T2] Init LEX: count :- S/(S/NP)/N : (lambda $0:<e,t> (lambda $1:<e,t> (count:<<e,t>,i> (lambda $2:e (and:<t*,t> ($0 $2) ($1 $2)))))) -> {LEX#134=10.0(1.0),XEME#65=0.0(1.0),XTMP#153=0.0(0.1)}
[P1T2] Init LEX: give :- S/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#9=10.0(1.0),XEME#26=0.0(1.0),XTMP#112=0.0(0.1)}
[P1T2] Init LEX: take :- S/NP/NP : (lambda $0:e (lambda $1:e (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) (actionpatient:<a,<e,t>> bring:a $1)))) -> {LEX#57=10.0(1.0),XEME#41=0.0(1.0),XTMP#63=0.0(0.1)}
[P1T2] Init LEX: take :- S/NP/NP : (lambda $0:e (lambda $1:e (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) (actionpatient:<a,<e,t>> bring:a $1)))) -> {LEX#57=10.0(1.0),XEME#128=0.0(1.0),XTMP#33=0.0(0.1)}
[P1T2] Init LEX: take :- S/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#44=10.0(1.0),XEME#134=0.0(1.0),XTMP#75=0.0(0.1)}
[P1T2] Init LEX: deliver :- S/NP/NP : (lambda $0:e (lambda $1:e (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) (actionpatient:<a,<e,t>> bring:a $1)))) -> {LEX#83=10.0(1.0),XEME#36=0.0(1.0),XTMP#133=0.0(0.1)}
[P1T2] Init LEX: piyush khandelwal :- NP : piyush:pe -> {LEX#201=21.435469250725863(1.0),XEME#138=0.0(1.0),XTMP#19=0.0(0.1)}
[P1T2] Init LEX: take :- S/PP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#2=10.0(1.0),XEME#112=0.0(1.0),XTMP#31=0.0(0.1)}
[P1T2] Init LEX: deliver :- S/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#22=10.0(1.0),XEME#9=0.0(1.0),XTMP#25=0.0(0.1)}
[P1T2] Init LEX: bring :- S/NP/NP : (lambda $0:e (lambda $1:e (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) (actionpatient:<a,<e,t>> bring:a $1)))) -> {LEX#64=10.0(1.0),XEME#31=0.0(1.0),XTMP#94=0.0(0.1)}
[P1T2] Init LEX: give :- S/PP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#119=10.0(1.0),XEME#57=0.0(1.0),XTMP#66=0.0(0.1)}
[P1T2] Init LEX: take :- S/NP/NP : (lambda $0:e (lambda $1:e (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) (actionpatient:<a,<e,t>> bring:a $1)))) -> {LEX#57=10.0(1.0),XEME#54=0.0(1.0),XTMP#93=0.0(0.1)}
[P1T2] Init LEX: deliver :- S/PP/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#31=10.0(1.0),XEME#32=0.0(1.0),XTMP#47=0.0(0.1)}
[P1T2] Init LEX: give :- S/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#9=10.0(1.0),XEME#59=0.0(1.0),XTMP#137=0.0(0.1)}
[P1T2] Init LEX: bring :- S/PP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#34=10.0(1.0),XEME#53=0.0(1.0),XTMP#109=0.0(0.1)}
[P1T2] Init LEX: 3416 :- NP : l3_416:ro -> {LEX#460=10.0(1.0),XEME#195=0.0(1.0),XTMP#19=0.0(0.1)}
[P1T2] Init LEX: give :- S/NP/NP : (lambda $0:e (lambda $1:e (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) (actionpatient:<a,<e,t>> bring:a $1)))) -> {LEX#41=10.0(1.0),XEME#34=0.0(1.0),XTMP#77=0.0(0.1)}
[P1T2] Init LEX: deliver :- S/NP/NP : (lambda $0:e (lambda $1:e (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) (actionpatient:<a,<e,t>> bring:a $1)))) -> {LEX#83=10.0(1.0),XEME#139=0.0(1.0),XTMP#76=0.0(0.1)}
[P1T2] Init LEX: give :- S/PP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#119=10.0(1.0),XEME#8=0.0(1.0),XTMP#145=0.0(0.1)}
[P1T2] Init LEX: walk :- S/PP : (lambda $0:<a,t> (and:<t*,t> (action:<a,t> walk:a) ($0 walk:a))) -> {LEX#4=10.0(1.0),XEME#196=0.0(1.0),XTMP#114=0.0(0.1)}
[P1T2] Init LEX: deliver :- S/PP/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#31=10.0(1.0),XEME#21=0.0(1.0),XTMP#134=0.0(0.1)}
[P1T2] Init LEX: deliver :- S/PP/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#31=10.0(1.0),XEME#147=0.0(1.0),XTMP#127=0.0(0.1)}
[P1T2] Init LEX: bring :- S/PP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#34=10.0(1.0),XEME#140=0.0(1.0),XTMP#135=0.0(0.1)}
[P1T2] Init LEX: bring :- S/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#60=10.0(1.0),XEME#78=0.0(1.0),XTMP#97=0.0(0.1)}
[P1T2] Init LEX: deliver :- S/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#22=10.0(1.0),XEME#21=0.0(1.0),XTMP#45=0.0(0.1)}
[P1T2] Init LEX: walk :- S/PP : (lambda $0:<a,t> (and:<t*,t> (action:<a,t> walk:a) ($0 walk:a))) -> {LEX#4=10.0(1.0),XEME#4=0.0(1.0),XTMP#90=0.0(0.1)}
[P1T2] Init LEX: give :- S/PP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#119=10.0(1.0),XEME#33=0.0(1.0),XTMP#80=0.0(0.1)}
[P1T2] Init LEX: deliver :- S/NP/NP : (lambda $0:e (lambda $1:e (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) (actionpatient:<a,<e,t>> bring:a $1)))) -> {LEX#83=10.0(1.0),XEME#29=0.0(1.0),XTMP#123=0.0(0.1)}
[P1T2] Init LEX: how many :- S/(S\NP)/N : (lambda $0:<e,t> (lambda $1:<e,t> (count:<<e,t>,i> (lambda $2:e (and:<t*,t> ($0 $2) ($1 $2)))))) -> {LEX#25=21.435469250725863(1.0),XEME#178=0.0(1.0),XTMP#154=0.0(0.1)}
[P1T2] Init LEX: deliver :- S/NP/NP : (lambda $0:e (lambda $1:e (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) (actionpatient:<a,<e,t>> bring:a $1)))) -> {LEX#83=10.0(1.0),XEME#32=0.0(1.0),XTMP#128=0.0(0.1)}
[P1T2] Init LEX: walk :- S/PP : (lambda $0:<a,t> (and:<t*,t> (action:<a,t> walk:a) ($0 walk:a))) -> {LEX#4=10.0(1.0),XEME#47=0.0(1.0),XTMP#81=0.0(0.1)}
[P1T2] Init LEX: deliver :- S/NP/NP : (lambda $0:e (lambda $1:e (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) (actionpatient:<a,<e,t>> bring:a $1)))) -> {LEX#83=10.0(1.0),XEME#48=0.0(1.0),XTMP#26=0.0(0.1)}
[P1T2] Init LEX: bring :- S/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#60=10.0(1.0),XEME#53=0.0(1.0),XTMP#57=0.0(0.1)}
[P1T2] Init LEX: deliver :- S/NP/NP : (lambda $0:e (lambda $1:e (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) (actionpatient:<a,<e,t>> bring:a $1)))) -> {LEX#83=10.0(1.0),XEME#43=0.0(1.0),XTMP#63=0.0(0.1)}
[P1T2] Init LEX: deliver :- S/NP/NP : (lambda $0:e (lambda $1:e (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) (actionpatient:<a,<e,t>> bring:a $1)))) -> {LEX#83=10.0(1.0),XEME#127=0.0(1.0),XTMP#36=0.0(0.1)}
[P1T2] Init LEX: take :- S/NP/NP : (lambda $0:e (lambda $1:e (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) (actionpatient:<a,<e,t>> bring:a $1)))) -> {LEX#57=10.0(1.0),XEME#142=0.0(1.0),XTMP#136=0.0(0.1)}
[P1T2] Init LEX: take :- S/NP/NP : (lambda $0:e (lambda $1:e (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) (actionpatient:<a,<e,t>> bring:a $1)))) -> {LEX#57=10.0(1.0),XEME#50=0.0(1.0),XTMP#123=0.0(0.1)}
[P1T2] Init LEX: take :- S/NP/NP : (lambda $0:e (lambda $1:e (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) (actionpatient:<a,<e,t>> bring:a $1)))) -> {LEX#57=10.0(1.0),XEME#135=0.0(1.0),XTMP#133=0.0(0.1)}
[P1T2] Init LEX: take :- S/PP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#2=10.0(1.0),XEME#93=0.0(1.0),XTMP#37=0.0(0.1)}
[P1T2] Init LEX: take :- S/PP/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#66=10.0(1.0),XEME#89=0.0(1.0),XTMP#47=0.0(0.1)}
[P1T2] Init LEX: give :- S/PP/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#18=10.0(1.0),XEME#37=0.0(1.0),XTMP#117=0.0(0.1)}
[P1T2] Init LEX: give :- S/PP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#119=10.0(1.0),XEME#14=0.0(1.0),XTMP#64=0.0(0.1)}
[P1T2] Init LEX: bring :- S/PP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#34=10.0(1.0),XEME#115=0.0(1.0),XTMP#13=0.0(0.1)}
[P1T2] Init LEX: take :- S/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#44=10.0(1.0),XEME#50=0.0(1.0),XTMP#60=0.0(0.1)}
[P1T2] Init LEX: bring :- S/PP/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#117=10.0(1.0),XEME#31=0.0(1.0),XTMP#98=0.0(0.1)}
[P1T2] Init LEX: take :- S/PP/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#66=10.0(1.0),XEME#112=0.0(1.0),XTMP#92=0.0(0.1)}
[P1T2] Init LEX: who :- N : (lambda $0:e (person:<pe,t> $0)) -> {LEX#476=10.0(1.0),XEME#167=0.0(1.0),XTMP#101=0.0(0.1)}
[P1T2] Init LEX: deliver :- S/PP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#10=10.0(1.0),XEME#77=0.0(1.0),XTMP#31=0.0(0.1)}
[P1T2] Init LEX: bring :- S/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#60=10.0(1.0),XEME#56=0.0(1.0),XTMP#46=0.0(0.1)}
[P1T2] Init LEX: how many :- S/(S/NP)/N : (lambda $0:<e,t> (lambda $1:<e,t> (count:<<e,t>,i> (lambda $2:e (and:<t*,t> ($0 $2) ($1 $2)))))) -> {LEX#227=21.435469250725863(1.0),XEME#17=0.0(1.0),XTMP#59=0.0(0.1)}
[P1T2] Init LEX: deliver :- S/NP/NP : (lambda $0:e (lambda $1:e (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) (actionpatient:<a,<e,t>> bring:a $1)))) -> {LEX#83=10.0(1.0),XEME#104=0.0(1.0),XTMP#78=0.0(0.1)}
[P1T2] Init LEX: take :- S/NP/NP : (lambda $0:e (lambda $1:e (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) (actionpatient:<a,<e,t>> bring:a $1)))) -> {LEX#57=10.0(1.0),XEME#89=0.0(1.0),XTMP#12=0.0(0.1)}
[P1T2] Init LEX: bring :- S/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#60=10.0(1.0),XEME#91=0.0(1.0),XTMP#58=0.0(0.1)}
[P1T2] Init LEX: bring :- S/NP/NP : (lambda $0:e (lambda $1:e (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) (actionpatient:<a,<e,t>> bring:a $1)))) -> {LEX#64=10.0(1.0),XEME#129=0.0(1.0),XTMP#104=0.0(0.1)}
[P1T2] Init LEX: deliver :- S/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#22=10.0(1.0),XEME#104=0.0(1.0),XTMP#88=0.0(0.1)}
[P1T2] Init LEX: give :- S/PP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#119=10.0(1.0),XEME#37=0.0(1.0),XTMP#113=0.0(0.1)}
[P1T2] Init LEX: deliver :- S/PP/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#31=10.0(1.0),XEME#9=0.0(1.0),XTMP#108=0.0(0.1)}
[P1T2] Init LEX: give :- S/NP/NP : (lambda $0:e (lambda $1:e (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) (actionpatient:<a,<e,t>> bring:a $1)))) -> {LEX#41=10.0(1.0),XEME#14=0.0(1.0),XTMP#72=0.0(0.1)}
[P1T2] Init LEX: go :- S/PP : (lambda $0:<a,t> (and:<t*,t> (action:<a,t> walk:a) ($0 walk:a))) -> {LEX#40=10.0(1.0),XEME#22=0.0(1.0),XTMP#138=0.0(0.1)}
[P1T2] Init LEX: bring :- S/PP/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#117=10.0(1.0),XEME#53=0.0(1.0),XTMP#28=0.0(0.1)}
[P1T2] Init LEX: deliver :- S/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#22=10.0(1.0),XEME#104=0.0(1.0),XTMP#9=0.0(0.1)}
[P1T2] Init LEX: deliver :- S/PP/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#31=10.0(1.0),XEME#29=0.0(1.0),XTMP#53=0.0(0.1)}
[P1T2] Init LEX: bring :- S/NP/NP : (lambda $0:e (lambda $1:e (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) (actionpatient:<a,<e,t>> bring:a $1)))) -> {LEX#64=10.0(1.0),XEME#113=0.0(1.0),XTMP#89=0.0(0.1)}
[P1T2] Init LEX: take :- S/NP/NP : (lambda $0:e (lambda $1:e (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) (actionpatient:<a,<e,t>> bring:a $1)))) -> {LEX#57=10.0(1.0),XEME#89=0.0(1.0),XTMP#41=0.0(0.1)}
[P1T2] Init LEX: of :- NP\N/NP : (lambda $0:e (lambda $1:<e,t> (the:<<e,t>,e> (lambda $2:e (and:<t*,t> (person:<pe,t> $0) ($1 $2) (possesses:<pe,<e,t>> $0 $2)))))) -> {LEX#33=10.0(1.0),XEME#144=0.0(1.0),XTMP#139=0.0(0.1)}
[P1T2] Init LEX: deliver :- S/NP/NP : (lambda $0:e (lambda $1:e (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) (actionpatient:<a,<e,t>> bring:a $1)))) -> {LEX#83=10.0(1.0),XEME#86=0.0(1.0),XTMP#136=0.0(0.1)}
[P1T2] Init LEX: counter :- NP : coffeecounter:sc -> {LEX#491=10.0(1.0),XEME#197=0.0(1.0),XTMP#19=0.0(0.1)}
[P1T2] Init LEX: take :- S/NP/NP : (lambda $0:e (lambda $1:e (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) (actionpatient:<a,<e,t>> bring:a $1)))) -> {LEX#57=10.0(1.0),XEME#198=0.0(1.0),XTMP#76=0.0(0.1)}
[P1T2] Init LEX: walk :- S/PP : (lambda $0:<a,t> (and:<t*,t> (action:<a,t> walk:a) ($0 walk:a))) -> {LEX#4=10.0(1.0),XEME#42=0.0(1.0),XTMP#124=0.0(0.1)}
[P1T2] Init LEX: take :- S/PP/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#66=10.0(1.0),XEME#54=0.0(1.0),XTMP#18=0.0(0.1)}
[P1T2] Init LEX: bring :- S/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#60=10.0(1.0),XEME#199=0.0(1.0),XTMP#21=0.0(0.1)}
[P1T2] Init LEX: give :- S/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#9=10.0(1.0),XEME#33=0.0(1.0),XTMP#130=0.0(0.1)}
[P1T2] Init LEX: give :- S/PP/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#18=10.0(1.0),XEME#37=0.0(1.0),XTMP#91=0.0(0.1)}
[P1T2] Init LEX: give :- S/PP/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#18=10.0(1.0),XEME#59=0.0(1.0),XTMP#132=0.0(0.1)}
[P1T2] Init LEX: bring :- S/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#60=10.0(1.0),XEME#91=0.0(1.0),XTMP#141=0.0(0.1)}
[P1T2] Init LEX: give :- S/NP/NP : (lambda $0:e (lambda $1:e (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) (actionpatient:<a,<e,t>> bring:a $1)))) -> {LEX#41=10.0(1.0),XEME#26=0.0(1.0),XTMP#1=0.0(0.1)}
[P1T2] Init LEX: bring :- S/PP/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#117=10.0(1.0),XEME#78=0.0(1.0),XTMP#87=0.0(0.1)}
[P1T2] Init LEX: take :- S/NP/NP : (lambda $0:e (lambda $1:e (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) (actionpatient:<a,<e,t>> bring:a $1)))) -> {LEX#57=10.0(1.0),XEME#1=0.0(1.0),XTMP#26=0.0(0.1)}
[P1T2] Init LEX: deliver :- S/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#22=10.0(1.0),XEME#32=0.0(1.0),XTMP#95=0.0(0.1)}
[P1T2] Init LEX: that :- PP/(S/NP) : (lambda $0:<e,t> (lambda $1:e ($0 $1))) -> {LEX#245=10.0(1.0),XEME#114=0.0(1.0),XTMP#3=0.0(0.1)}
[P1T2] Init LEX: take :- S/PP/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#66=10.0(1.0),XEME#12=0.0(1.0),XTMP#126=0.0(0.1)}
[P1T2] Init LEX: deliver :- S/NP/NP : (lambda $0:e (lambda $1:e (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) (actionpatient:<a,<e,t>> bring:a $1)))) -> {LEX#83=10.0(1.0),XEME#44=0.0(1.0),XTMP#93=0.0(0.1)}
[P1T2] Init LEX: deliver :- S/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#22=10.0(1.0),XEME#147=0.0(1.0),XTMP#75=0.0(0.1)}
[P1T2] Init LEX: deliver :- S/NP/NP : (lambda $0:e (lambda $1:e (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) (actionpatient:<a,<e,t>> bring:a $1)))) -> {LEX#83=10.0(1.0),XEME#9=0.0(1.0),XTMP#33=0.0(0.1)}
[P1T2] Init LEX: take :- S/NP/NP : (lambda $0:e (lambda $1:e (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) (actionpatient:<a,<e,t>> bring:a $1)))) -> {LEX#57=10.0(1.0),XEME#112=0.0(1.0),XTMP#48=0.0(0.1)}
[P1T2] Init LEX: bring :- S/NP/NP : (lambda $0:e (lambda $1:e (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) (actionpatient:<a,<e,t>> bring:a $1)))) -> {LEX#64=10.0(1.0),XEME#92=0.0(1.0),XTMP#44=0.0(0.1)}
[P1T2] Init LEX: bring :- S/NP/NP : (lambda $0:e (lambda $1:e (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) (actionpatient:<a,<e,t>> bring:a $1)))) -> {LEX#64=10.0(1.0),XEME#148=0.0(1.0),XTMP#42=0.0(0.1)}
[P1T2] Init LEX: bring :- S/NP/NP : (lambda $0:e (lambda $1:e (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) (actionpatient:<a,<e,t>> bring:a $1)))) -> {LEX#64=10.0(1.0),XEME#31=0.0(1.0),XTMP#23=0.0(0.1)}
[P1T2] Init LEX: is :- NP/NP : (lambda $0:e $0) -> {LEX#505=10.0(1.0),XEME#5=0.0(1.0),XTMP#51=0.0(0.1)}
[P1T2] Init LEX: 3422 :- NP : l3_422:ro -> {LEX#248=10.0(1.0),XEME#149=0.0(1.0),XTMP#19=0.0(0.1)}
[P1T2] Init LEX: deliver :- S/NP/NP : (lambda $0:e (lambda $1:e (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) (actionpatient:<a,<e,t>> bring:a $1)))) -> {LEX#83=10.0(1.0),XEME#36=0.0(1.0),XTMP#44=0.0(0.1)}
[P1T2] Init LEX: the :- NP/NP : (lambda $0:e $0) -> {LEX#249=10.0(1.0),XEME#0=0.0(1.0),XTMP#51=0.0(0.1)}
[P1T2] Init LEX: take :- S/PP/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#66=10.0(1.0),XEME#87=0.0(1.0),XTMP#17=0.0(0.1)}
[P1T2] Init LEX: s :- NP/N\NP : (lambda $0:e (lambda $1:<e,t> (the:<<e,t>,e> (lambda $2:e (and:<t*,t> (person:<pe,t> $0) ($1 $2) (possesses:<pe,<e,t>> $0 $2)))))) -> {LEX#73=10.0(1.0),XEME#200=0.0(1.0),XTMP#140=0.0(0.1)}
[P1T2] Init LEX: take :- S/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#44=10.0(1.0),XEME#105=0.0(1.0),XTMP#45=0.0(0.1)}
[P1T2] Init LEX: of :- N/N : (lambda $0:<e,t> (lambda $1:e ($0 $1))) -> {LEX#508=10.0(1.0),XEME#45=0.0(1.0),XTMP#29=0.0(0.1)}
[P1T2] Init LEX: deliver :- S/NP/NP : (lambda $0:e (lambda $1:e (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) (actionpatient:<a,<e,t>> bring:a $1)))) -> {LEX#83=10.0(1.0),XEME#151=0.0(1.0),XTMP#42=0.0(0.1)}
[P1T2] Init LEX: deliver :- S/PP/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#31=10.0(1.0),XEME#104=0.0(1.0),XTMP#14=0.0(0.1)}
[P1T2] Init LEX: give :- S/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#9=10.0(1.0),XEME#8=0.0(1.0),XTMP#142=0.0(0.1)}
[P1T2] Init LEX: give :- S/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#9=10.0(1.0),XEME#14=0.0(1.0),XTMP#60=0.0(0.1)}
[P1T2] Init LEX: take :- S/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#44=10.0(1.0),XEME#112=0.0(1.0),XTMP#130=0.0(0.1)}
[P1T2] Init LEX: bring :- S/PP/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#117=10.0(1.0),XEME#88=0.0(1.0),XTMP#14=0.0(0.1)}
[P1T2] Init LEX: take :- S/NP/NP : (lambda $0:e (lambda $1:e (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) (actionpatient:<a,<e,t>> bring:a $1)))) -> {LEX#57=10.0(1.0),XEME#105=0.0(1.0),XTMP#27=0.0(0.1)}
[P1T2] Init LEX: give :- S/PP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#119=10.0(1.0),XEME#124=0.0(1.0),XTMP#37=0.0(0.1)}
[P1T2] Init LEX: objects :- N : (lambda $0:e (object:<ob,t> $0)) -> {LEX#255=10.0(1.0),XEME#152=0.0(1.0),XTMP#101=0.0(0.1)}
[P1T2] Init LEX: deliver :- S/NP/NP : (lambda $0:e (lambda $1:e (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) (actionpatient:<a,<e,t>> bring:a $1)))) -> {LEX#83=10.0(1.0),XEME#77=0.0(1.0),XTMP#23=0.0(0.1)}
[P1T2] Init LEX: bring :- S/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#60=10.0(1.0),XEME#31=0.0(1.0),XTMP#32=0.0(0.1)}
[P1T2] Init LEX: deliver :- S/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#22=10.0(1.0),XEME#77=0.0(1.0),XTMP#32=0.0(0.1)}
[P1T2] Init LEX: give :- S/PP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#119=10.0(1.0),XEME#37=0.0(1.0),XTMP#34=0.0(0.1)}
[P1T2] Init LEX: excluding :- PP/NP : (lambda $0:e (lambda $1:e (not:<t,t> (equals:<e,<e,t>> $1 $0)))) -> {LEX#123=10.0(1.0),XEME#141=0.0(1.0),XTMP#8=0.0(0.1)}
[P1T2] Init LEX: take :- S/PP/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#66=10.0(1.0),XEME#12=0.0(1.0),XTMP#132=0.0(0.1)}
[P1T2] Init LEX: people :- N : (lambda $0:e (person:<pe,t> $0)) -> {LEX#518=10.0(1.0),XEME#123=0.0(1.0),XTMP#101=0.0(0.1)}
[P1T2] Init LEX: 3414b :- NP : l3_414b:ro -> {LEX#519=10.0(1.0),XEME#201=0.0(1.0),XTMP#19=0.0(0.1)}
[P1T2] Init LEX: that :- PP/(S\NP) : (lambda $0:<e,t> (lambda $1:e ($0 $1))) -> {LEX#520=10.0(1.0),XEME#114=0.0(1.0),XTMP#61=0.0(0.1)}
[P1T2] Init LEX: which :- PP/(S/NP) : (lambda $0:<e,t> (lambda $1:e ($0 $1))) -> {LEX#521=10.0(1.0),XEME#117=0.0(1.0),XTMP#3=0.0(0.1)}
[P1T2] Init LEX: bring :- S/PP/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#117=10.0(1.0),XEME#56=0.0(1.0),XTMP#56=0.0(0.1)}
[P1T2] Init LEX: bring :- S/PP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#34=10.0(1.0),XEME#106=0.0(1.0),XTMP#10=0.0(0.1)}
[P1T2] Init LEX: take :- S/PP/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#66=10.0(1.0),XEME#50=0.0(1.0),XTMP#118=0.0(0.1)}
[P1T2] Init LEX: deliver :- S/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#22=10.0(1.0),XEME#29=0.0(1.0),XTMP#143=0.0(0.1)}
[P1T2] Init LEX: office :- N : (lambda $0:e (office:<of,t> $0)) -> {LEX#522=10.0(1.0),XEME#202=0.0(1.0),XTMP#101=0.0(0.1)}
[P1T2] Init LEX: give :- S/NP/NP : (lambda $0:e (lambda $1:e (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) (actionpatient:<a,<e,t>> bring:a $1)))) -> {LEX#41=10.0(1.0),XEME#37=0.0(1.0),XTMP#12=0.0(0.1)}
[P1T2] Init LEX: deliver :- S/NP/NP : (lambda $0:e (lambda $1:e (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) (actionpatient:<a,<e,t>> bring:a $1)))) -> {LEX#83=10.0(1.0),XEME#127=0.0(1.0),XTMP#104=0.0(0.1)}
[P1T2] Init LEX: give :- S/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#9=10.0(1.0),XEME#124=0.0(1.0),XTMP#97=0.0(0.1)}
[P1T2] Init LEX: bring :- S/NP/NP : (lambda $0:e (lambda $1:e (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) (actionpatient:<a,<e,t>> bring:a $1)))) -> {LEX#64=10.0(1.0),XEME#129=0.0(1.0),XTMP#36=0.0(0.1)}
[P1T2] Init LEX: i :- NP : me:pe -> {LEX#263=10.0(1.0),XEME#154=0.0(1.0),XTMP#19=0.0(0.1)}
[P1T2] Init LEX: walk :- S/PP : (lambda $0:<a,t> (and:<t*,t> (action:<a,t> walk:a) ($0 walk:a))) -> {LEX#4=10.0(1.0),XEME#90=0.0(1.0),XTMP#39=0.0(0.1)}
[P1T2] Init LEX: to :- PP/NP : (lambda $0:e (lambda $1:a (actionrecipient:<a,<e,t>> $1 $0))) -> {LEX#266=10.0(1.0),XEME#97=0.0(1.0),XTMP#122=0.0(0.1)}
[P1T2] Init LEX: give :- S/NP/NP : (lambda $0:e (lambda $1:e (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) (actionpatient:<a,<e,t>> bring:a $1)))) -> {LEX#41=10.0(1.0),XEME#82=0.0(1.0),XTMP#27=0.0(0.1)}
[P1T2] Init LEX: bring :- S/NP/NP : (lambda $0:e (lambda $1:e (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) (actionpatient:<a,<e,t>> bring:a $1)))) -> {LEX#64=10.0(1.0),XEME#146=0.0(1.0),XTMP#26=0.0(0.1)}
[P1T2] Init LEX: please :- S/S : (lambda $0:<e,t> (lambda $1:e ($0 $1))) -> {LEX#267=10.0(1.0),XEME#25=0.0(1.0),XTMP#107=0.0(0.1)}
[P1T2] Init LEX: go :- S/PP : (lambda $0:<a,t> (and:<t*,t> (action:<a,t> walk:a) ($0 walk:a))) -> {LEX#40=10.0(1.0),XEME#69=0.0(1.0),XTMP#82=0.0(0.1)}
[P1T2] Init LEX: deliver :- S/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#22=10.0(1.0),XEME#77=0.0(1.0),XTMP#130=0.0(0.1)}
[P1T2] Init LEX: take :- S/PP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#2=10.0(1.0),XEME#87=0.0(1.0),XTMP#145=0.0(0.1)}
[P1T2] Init LEX: deliver :- S/PP/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#31=10.0(1.0),XEME#77=0.0(1.0),XTMP#98=0.0(0.1)}
[P1T2] Init LEX: me :- NP : me:pe -> {LEX#268=10.0(1.0),XEME#155=0.0(1.0),XTMP#19=0.0(0.1)}
[P1T2] Init LEX: walk :- S/PP : (lambda $0:<a,t> (and:<t*,t> (action:<a,t> walk:a) ($0 walk:a))) -> {LEX#4=10.0(1.0),XEME#52=0.0(1.0),XTMP#43=0.0(0.1)}
[P1T2] Init LEX: deliver :- S/PP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#10=10.0(1.0),XEME#29=0.0(1.0),XTMP#125=0.0(0.1)}
[P1T2] Init LEX: 3512 :- NP : l3_512:ro -> {LEX#527=10.0(1.0),XEME#203=0.0(1.0),XTMP#19=0.0(0.1)}
[P1T2] Init LEX: deliver :- S/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#22=10.0(1.0),XEME#137=0.0(1.0),XTMP#83=0.0(0.1)}
[P1T2] Init LEX: bring :- S/PP/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#117=10.0(1.0),XEME#81=0.0(1.0),XTMP#134=0.0(0.1)}
[P1T2] Init LEX: take :- S/PP/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#66=10.0(1.0),XEME#51=0.0(1.0),XTMP#54=0.0(0.1)}
[P1T2] Init LEX: deliver :- S/NP/NP : (lambda $0:e (lambda $1:e (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) (actionpatient:<a,<e,t>> bring:a $1)))) -> {LEX#83=10.0(1.0),XEME#85=0.0(1.0),XTMP#103=0.0(0.1)}
[P1T2] Init LEX: take :- S/NP/NP : (lambda $0:e (lambda $1:e (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) (actionpatient:<a,<e,t>> bring:a $1)))) -> {LEX#57=10.0(1.0),XEME#50=0.0(1.0),XTMP#72=0.0(0.1)}
[P1T2] Init LEX: deliver :- S/PP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#10=10.0(1.0),XEME#133=0.0(1.0),XTMP#13=0.0(0.1)}
[P1T2] Init LEX: bring :- S/PP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#34=10.0(1.0),XEME#129=0.0(1.0),XTMP#66=0.0(0.1)}
[P1T2] Init LEX: give :- S/NP/NP : (lambda $0:e (lambda $1:e (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) (actionpatient:<a,<e,t>> bring:a $1)))) -> {LEX#41=10.0(1.0),XEME#33=0.0(1.0),XTMP#94=0.0(0.1)}
[P1T2] Init LEX: bring :- S/NP/NP : (lambda $0:e (lambda $1:e (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) (actionpatient:<a,<e,t>> bring:a $1)))) -> {LEX#64=10.0(1.0),XEME#56=0.0(1.0),XTMP#77=0.0(0.1)}
[P1T2] Init LEX: give :- S/PP/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#18=10.0(1.0),XEME#33=0.0(1.0),XTMP#92=0.0(0.1)}
[P1T2] Init LEX: give :- S/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#9=10.0(1.0),XEME#187=0.0(1.0),XTMP#75=0.0(0.1)}
[P1T2] Init LEX: which :- PP/(S\NP) : (lambda $0:<e,t> (lambda $1:e ($0 $1))) -> {LEX#536=10.0(1.0),XEME#117=0.0(1.0),XTMP#61=0.0(0.1)}
[P1T2] Init LEX: go :- S/PP : (lambda $0:<a,t> (and:<t*,t> (action:<a,t> walk:a) ($0 walk:a))) -> {LEX#40=10.0(1.0),XEME#13=0.0(1.0),XTMP#90=0.0(0.1)}
[P1T2] Init LEX: bring :- S/PP/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#117=10.0(1.0),XEME#91=0.0(1.0),XTMP#117=0.0(0.1)}
[P1T2] Init LEX: bring :- S/NP/NP : (lambda $0:e (lambda $1:e (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) (actionpatient:<a,<e,t>> bring:a $1)))) -> {LEX#64=10.0(1.0),XEME#91=0.0(1.0),XTMP#41=0.0(0.1)}
[P1T2] Init LEX: deliver :- S/PP/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#31=10.0(1.0),XEME#130=0.0(1.0),XTMP#54=0.0(0.1)}
[P1T2] Init LEX: count :- S/(S\NP)/N : (lambda $0:<e,t> (lambda $1:<e,t> (count:<<e,t>,i> (lambda $2:e (and:<t*,t> ($0 $2) ($1 $2)))))) -> {LEX#75=10.0(1.0),XEME#204=0.0(1.0),XTMP#154=0.0(0.1)}
[P1T2] Init LEX: give :- S/PP/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#18=10.0(1.0),XEME#124=0.0(1.0),XTMP#87=0.0(0.1)}
[P1T2] Init LEX: bring :- S/PP/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#117=10.0(1.0),XEME#199=0.0(1.0),XTMP#65=0.0(0.1)}
[P1T2] Init LEX: give :- S/PP/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#18=10.0(1.0),XEME#34=0.0(1.0),XTMP#56=0.0(0.1)}
[P1T2] Init LEX: 3508 :- NP : l3_508:ro -> {LEX#284=10.0(1.0),XEME#157=0.0(1.0),XTMP#19=0.0(0.1)}
[P1T2] Init LEX: trashcan :- NP : trashcan:it -> {LEX#540=10.0(1.0),XEME#205=0.0(1.0),XTMP#19=0.0(0.1)}
[P1T2] Init LEX: bring :- S/PP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#34=10.0(1.0),XEME#91=0.0(1.0),XTMP#131=0.0(0.1)}
[P1T2] Init LEX: take :- S/PP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#2=10.0(1.0),XEME#50=0.0(1.0),XTMP#125=0.0(0.1)}
[P1T2] Init LEX: deliver :- S/PP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#10=10.0(1.0),XEME#206=0.0(1.0),XTMP#135=0.0(0.1)}
[P1T2] Init LEX: deliver :- S/NP/NP : (lambda $0:e (lambda $1:e (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) (actionpatient:<a,<e,t>> bring:a $1)))) -> {LEX#83=10.0(1.0),XEME#158=0.0(1.0),XTMP#89=0.0(0.1)}
[P1T2] Init LEX: take :- S/NP/NP : (lambda $0:e (lambda $1:e (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) (actionpatient:<a,<e,t>> bring:a $1)))) -> {LEX#57=10.0(1.0),XEME#41=0.0(1.0),XTMP#77=0.0(0.1)}
[P1T2] Init LEX: give :- S/PP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#119=10.0(1.0),XEME#57=0.0(1.0),XTMP#2=0.0(0.1)}
[P1T2] Init LEX: take :- S/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#44=10.0(1.0),XEME#87=0.0(1.0),XTMP#142=0.0(0.1)}
[P1T2] Init LEX: deliver :- S/PP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#10=10.0(1.0),XEME#85=0.0(1.0),XTMP#37=0.0(0.1)}
[P1T2] Init LEX: how many :- S/NP : (lambda $0:e $0) -> {LEX#545=21.435469250725863(1.0),XEME#3=0.0(1.0),XTMP#146=0.0(0.1)}
[P1T2] Init LEX: do not :- S\NP/(S\NP) : (lambda $0:<e,t> (lambda $1:e (not:<t,t> ($0 $1)))) -> {LEX#546=21.435469250725863(1.0),XEME#131=0.0(1.0),XTMP#150=0.0(0.1)}
[P1T2] Init LEX: take :- S/PP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#2=10.0(1.0),XEME#89=0.0(1.0),XTMP#131=0.0(0.1)}
[P1T2] Init LEX: 3414 :- NP : l3_414:ro -> {LEX#548=10.0(1.0),XEME#207=0.0(1.0),XTMP#19=0.0(0.1)}
[P1T2] Init LEX: take :- S/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#44=10.0(1.0),XEME#50=0.0(1.0),XTMP#143=0.0(0.1)}
[P1T2] Init LEX: object :- N : (lambda $0:e (object:<ob,t> $0)) -> {LEX#550=10.0(1.0),XEME#208=0.0(1.0),XTMP#101=0.0(0.1)}
[P1T2] Init LEX: deliver :- S/NP/NP : (lambda $0:e (lambda $1:e (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) (actionpatient:<a,<e,t>> bring:a $1)))) -> {LEX#83=10.0(1.0),XEME#133=0.0(1.0),XTMP#67=0.0(0.1)}
[P1T2] Init LEX: bring :- S/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#60=10.0(1.0),XEME#88=0.0(1.0),XTMP#88=0.0(0.1)}
[P1T2] Init LEX: deliver :- S/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#22=10.0(1.0),XEME#43=0.0(1.0),XTMP#46=0.0(0.1)}
[P1T2] Init LEX: bring :- S/PP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#34=10.0(1.0),XEME#28=0.0(1.0),XTMP#84=0.0(0.1)}
[P1T2] Init LEX: take :- S/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#44=10.0(1.0),XEME#12=0.0(1.0),XTMP#137=0.0(0.1)}
[P1T2] Init LEX: bring :- S/NP/NP : (lambda $0:e (lambda $1:e (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) (actionpatient:<a,<e,t>> bring:a $1)))) -> {LEX#64=10.0(1.0),XEME#91=0.0(1.0),XTMP#128=0.0(0.1)}
[P1T2] Init LEX: is :- N/N : (lambda $0:<e,t> (lambda $1:e ($0 $1))) -> {LEX#555=10.0(1.0),XEME#5=0.0(1.0),XTMP#29=0.0(0.1)}
[P1T2] Init LEX: bring :- S/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#60=10.0(1.0),XEME#88=0.0(1.0),XTMP#142=0.0(0.1)}
[P1T2] Init LEX: bring :- S/PP/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#117=10.0(1.0),XEME#31=0.0(1.0),XTMP#119=0.0(0.1)}
[P1T2] Init LEX: take :- S/PP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#2=10.0(1.0),XEME#135=0.0(1.0),XTMP#40=0.0(0.1)}
[P1T2] Init LEX: take :- S/NP/NP : (lambda $0:e (lambda $1:e (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) (actionpatient:<a,<e,t>> bring:a $1)))) -> {LEX#57=10.0(1.0),XEME#2=0.0(1.0),XTMP#104=0.0(0.1)}
[P1T2] Init LEX: deliver :- S/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#22=10.0(1.0),XEME#85=0.0(1.0),XTMP#97=0.0(0.1)}
[P1T2] Init LEX: take :- S/PP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#2=10.0(1.0),XEME#159=0.0(1.0),XTMP#135=0.0(0.1)}
[P1T2] Init LEX: bring :- S/PP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#34=10.0(1.0),XEME#146=0.0(1.0),XTMP#85=0.0(0.1)}
[P1T2] Init LEX: give :- S/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#9=10.0(1.0),XEME#14=0.0(1.0),XTMP#143=0.0(0.1)}
[P1T2] Init LEX: deliver :- S/NP/NP : (lambda $0:e (lambda $1:e (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) (actionpatient:<a,<e,t>> bring:a $1)))) -> {LEX#83=10.0(1.0),XEME#32=0.0(1.0),XTMP#12=0.0(0.1)}
[P1T2] Init LEX: give :- S/NP/NP : (lambda $0:e (lambda $1:e (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) (actionpatient:<a,<e,t>> bring:a $1)))) -> {LEX#41=10.0(1.0),XEME#57=0.0(1.0),XTMP#104=0.0(0.1)}
[P1T2] Init LEX: bring :- S/PP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#34=10.0(1.0),XEME#73=0.0(1.0),XTMP#7=0.0(0.1)}
[P1T2] Init LEX: take :- S/PP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#2=10.0(1.0),XEME#120=0.0(1.0),XTMP#115=0.0(0.1)}
[P1T2] Init LEX: deliver :- S/NP/NP : (lambda $0:e (lambda $1:e (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) (actionpatient:<a,<e,t>> bring:a $1)))) -> {LEX#83=10.0(1.0),XEME#21=0.0(1.0),XTMP#27=0.0(0.1)}
[P1T2] Init LEX: what :- S/(S/NP)/N : (lambda $0:<e,t> (lambda $1:<e,t> (lambda $2:e (and:<t*,t> ($0 $2) ($1 $2))))) -> {LEX#562=10.0(1.0),XEME#150=0.0(1.0),XTMP#71=0.0(0.1)}
[P1T2] Init LEX: are :- N\N/N : (lambda $0:<e,t> (lambda $1:<e,t> (lambda $2:e (and:<t*,t> ($0 $2) ($1 $2))))) -> {LEX#567=10.0(1.0),XEME#143=0.0(1.0),XTMP#69=0.0(0.1)}
[P1T2] Init LEX: deliver :- S/PP/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#31=10.0(1.0),XEME#104=0.0(1.0),XTMP#17=0.0(0.1)}
[P1T2] Init LEX: take :- S/PP/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#66=10.0(1.0),XEME#105=0.0(1.0),XTMP#134=0.0(0.1)}
[P1T2] Init LEX: bring :- S/PP/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#117=10.0(1.0),XEME#80=0.0(1.0),XTMP#132=0.0(0.1)}
[P1T2] Init LEX: deliver :- S/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#22=10.0(1.0),XEME#137=0.0(1.0),XTMP#137=0.0(0.1)}
[P1T2] Init LEX: give :- S/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#9=10.0(1.0),XEME#59=0.0(1.0),XTMP#83=0.0(0.1)}
[P1T2] Init LEX: deliver :- S/PP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#10=10.0(1.0),XEME#104=0.0(1.0),XTMP#145=0.0(0.1)}
[P1T2] Init LEX: give :- S/NP/NP : (lambda $0:e (lambda $1:e (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) (actionpatient:<a,<e,t>> bring:a $1)))) -> {LEX#41=10.0(1.0),XEME#14=0.0(1.0),XTMP#123=0.0(0.1)}
[P1T2] Init LEX: bring :- S/NP/NP : (lambda $0:e (lambda $1:e (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) (actionpatient:<a,<e,t>> bring:a $1)))) -> {LEX#64=10.0(1.0),XEME#28=0.0(1.0),XTMP#22=0.0(0.1)}
[P1T2] Init LEX: s :- NP/N\NP : (lambda $0:e (lambda $1:<e,t> (the:<<e,t>,e> (lambda $2:e (and:<t*,t> (person:<pe,t> $0) ($1 $2) (possesses:<pe,<e,t>> $0 $2)))))) -> {LEX#73=10.0(1.0),XEME#209=0.0(1.0),XTMP#148=0.0(0.1)}
[P1T2] Init LEX: give :- S/PP/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#18=10.0(1.0),XEME#14=0.0(1.0),XTMP#28=0.0(0.1)}
[P1T2] Init LEX: bring :- S/NP/NP : (lambda $0:e (lambda $1:e (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) (actionpatient:<a,<e,t>> bring:a $1)))) -> {LEX#64=10.0(1.0),XEME#31=0.0(1.0),XTMP#48=0.0(0.1)}
[P1T2] Init LEX: give :- S/PP/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#18=10.0(1.0),XEME#37=0.0(1.0),XTMP#47=0.0(0.1)}
[P1T2] Init LEX: take :- S/PP/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#66=10.0(1.0),XEME#128=0.0(1.0),XTMP#108=0.0(0.1)}
[P1T2] Init LEX: give :- S/PP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#119=10.0(1.0),XEME#14=0.0(1.0),XTMP#125=0.0(0.1)}
[P1T2] Init LEX: give :- S/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#9=10.0(1.0),XEME#190=0.0(1.0),XTMP#21=0.0(0.1)}
[P1T2] Init LEX: walk :- S/PP : (lambda $0:<a,t> (and:<t*,t> (action:<a,t> walk:a) ($0 walk:a))) -> {LEX#4=10.0(1.0),XEME#47=0.0(1.0),XTMP#15=0.0(0.1)}
[P1T2] Init LEX: take :- S/NP/NP : (lambda $0:e (lambda $1:e (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) (actionpatient:<a,<e,t>> bring:a $1)))) -> {LEX#57=10.0(1.0),XEME#87=0.0(1.0),XTMP#78=0.0(0.1)}
[P1T2] Init LEX: give :- S/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#9=10.0(1.0),XEME#37=0.0(1.0),XTMP#141=0.0(0.1)}
[P1T2] Init LEX: count :- S/(S/NP)/N : (lambda $0:<e,t> (lambda $1:<e,t> (count:<<e,t>,i> (lambda $2:e (and:<t*,t> ($0 $2) ($1 $2)))))) -> {LEX#134=10.0(1.0),XEME#204=0.0(1.0),XTMP#151=0.0(0.1)}
[P1T2] Init LEX: ellen edwards :- NP : ellen:pe -> {LEX#307=21.435469250725863(1.0),XEME#160=0.0(1.0),XTMP#19=0.0(0.1)}
[P1T2] Init LEX: take :- S/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#44=10.0(1.0),XEME#58=0.0(1.0),XTMP#21=0.0(0.1)}
[P1T2] Init LEX: bring :- S/NP/NP : (lambda $0:e (lambda $1:e (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) (actionpatient:<a,<e,t>> bring:a $1)))) -> {LEX#64=10.0(1.0),XEME#210=0.0(1.0),XTMP#76=0.0(0.1)}
[P1T2] Init LEX: dana ballard :- NP : dana:pe -> {LEX#309=21.435469250725863(1.0),XEME#161=0.0(1.0),XTMP#19=0.0(0.1)}
[P1T2] Init LEX: give :- S/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#9=10.0(1.0),XEME#37=0.0(1.0),XTMP#58=0.0(0.1)}
[P1T2] Init LEX: take :- S/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#44=10.0(1.0),XEME#12=0.0(1.0),XTMP#83=0.0(0.1)}
[P1T2] Init LEX: go :- S/PP : (lambda $0:<a,t> (and:<t*,t> (action:<a,t> walk:a) ($0 walk:a))) -> {LEX#40=10.0(1.0),XEME#11=0.0(1.0),XTMP#124=0.0(0.1)}
[P1T2] Init LEX: give :- S/PP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#119=10.0(1.0),XEME#40=0.0(1.0),XTMP#40=0.0(0.1)}
[P1T2] Init LEX: deliver :- S/PP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#10=10.0(1.0),XEME#127=0.0(1.0),XTMP#2=0.0(0.1)}
[P1T2] Init LEX: take :- S/PP/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#66=10.0(1.0),XEME#50=0.0(1.0),XTMP#28=0.0(0.1)}
[P1T2] Init LEX: take :- S/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#44=10.0(1.0),XEME#89=0.0(1.0),XTMP#141=0.0(0.1)}
[P1T2] Init LEX: give :- S/PP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#119=10.0(1.0),XEME#145=0.0(1.0),XTMP#115=0.0(0.1)}
[P1T2] Init LEX: take :- S/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#44=10.0(1.0),XEME#112=0.0(1.0),XTMP#32=0.0(0.1)}
[P1T2] Init LEX: deliver :- S/PP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#10=10.0(1.0),XEME#29=0.0(1.0),XTMP#64=0.0(0.1)}
[P1T2] Init LEX: give :- S/NP/NP : (lambda $0:e (lambda $1:e (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) (actionpatient:<a,<e,t>> bring:a $1)))) -> {LEX#41=10.0(1.0),XEME#34=0.0(1.0),XTMP#63=0.0(0.1)}
[P1T2] Init LEX: bring :- S/PP/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#117=10.0(1.0),XEME#80=0.0(1.0),XTMP#126=0.0(0.1)}
[P1T2] Init LEX: bring :- S/PP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#34=10.0(1.0),XEME#91=0.0(1.0),XTMP#113=0.0(0.1)}
[P1T2] Init LEX: give :- S/PP/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#18=10.0(1.0),XEME#26=0.0(1.0),XTMP#54=0.0(0.1)}
[P1T2] Init LEX: give :- S/PP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#119=10.0(1.0),XEME#162=0.0(1.0),XTMP#135=0.0(0.1)}
[P1T2] Init LEX: raymond mooney :- NP : ray:pe -> {LEX#321=21.435469250725863(1.0),XEME#163=0.0(1.0),XTMP#19=0.0(0.1)}
[P1T2] Init LEX: hamburger :- NP : hamburger:it -> {LEX#580=10.0(1.0),XEME#211=0.0(1.0),XTMP#19=0.0(0.1)}
[P1T2] Init LEX: please :- S\S : (lambda $0:t $0) -> {LEX#581=10.0(1.0),XEME#25=0.0(1.0),XTMP#0=0.0(0.1)}
[P1T2] Init LEX: take :- S/NP/NP : (lambda $0:e (lambda $1:e (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) (actionpatient:<a,<e,t>> bring:a $1)))) -> {LEX#57=10.0(1.0),XEME#112=0.0(1.0),XTMP#94=0.0(0.1)}
[P1T2] Init LEX: give :- S/NP/NP : (lambda $0:e (lambda $1:e (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) (actionpatient:<a,<e,t>> bring:a $1)))) -> {LEX#41=10.0(1.0),XEME#8=0.0(1.0),XTMP#78=0.0(0.1)}
[P1T2] Init LEX: bring :- S/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#60=10.0(1.0),XEME#31=0.0(1.0),XTMP#35=0.0(0.1)}
[P1T2] Init LEX: of :- NP\N/NP : (lambda $0:e (lambda $1:<e,t> (the:<<e,t>,e> (lambda $2:e (and:<t*,t> (person:<pe,t> $0) ($1 $2) (possesses:<pe,<e,t>> $0 $2)))))) -> {LEX#33=10.0(1.0),XEME#164=0.0(1.0),XTMP#147=0.0(0.1)}
[P1T2] Init LEX: take :- S/PP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#2=10.0(1.0),XEME#112=0.0(1.0),XTMP#80=0.0(0.1)}
[P1T2] Init LEX: bring :- S/PP/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#117=10.0(1.0),XEME#53=0.0(1.0),XTMP#118=0.0(0.1)}
[P1T2] Init LEX: 3436 :- NP : l3_436:ro -> {LEX#327=10.0(1.0),XEME#165=0.0(1.0),XTMP#19=0.0(0.1)}
[P1T2] Init LEX: give :- S/PP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#119=10.0(1.0),XEME#33=0.0(1.0),XTMP#31=0.0(0.1)}
[P1T2] Init LEX: take :- S/PP/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#66=10.0(1.0),XEME#87=0.0(1.0),XTMP#14=0.0(0.1)}
[P1T2] Init LEX: give :- S/PP/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#18=10.0(1.0),XEME#125=0.0(1.0),XTMP#108=0.0(0.1)}
[P1T2] Init LEX: excluding :- PP/NP : (lambda $0:e (lambda $1:e (not:<t,t> (equals:<e,<e,t>> $1 $0)))) -> {LEX#123=10.0(1.0),XEME#166=0.0(1.0),XTMP#149=0.0(0.1)}
[P1T2] Init LEX: bring :- S/PP/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#117=10.0(1.0),XEME#91=0.0(1.0),XTMP#91=0.0(0.1)}
[P1T2] Init LEX: deliver :- S/PP/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#31=10.0(1.0),XEME#44=0.0(1.0),XTMP#18=0.0(0.1)}
[P1T2] Init LEX: 3426 :- NP : l3_426:ro -> {LEX#434=10.0(1.0),XEME#192=0.0(1.0),XTMP#19=0.0(0.1)}
[P1T2] Init LEX: stacy miller :- NP : stacy:pe -> {LEX#92=21.435469250725863(1.0),XEME#83=0.0(1.0),XTMP#19=0.0(0.1)}
[P1T2] Init LEX: 3428 :- NP : l3_428:ro -> {LEX#114=10.0(1.0),XEME#103=0.0(1.0),XTMP#19=0.0(0.1)}
[P1T2] Init LEX: dana ballard :- NP : dana:pe -> {LEX#309=21.435469250725863(1.0),XEME#161=0.0(1.0),XTMP#19=0.0(0.1)}
[P1T2] Init LEX: 3422 :- NP : l3_422:ro -> {LEX#248=10.0(1.0),XEME#149=0.0(1.0),XTMP#19=0.0(0.1)}
[P1T2] Init LEX: 3502 :- NP : l3_502:ro -> {LEX#68=10.0(1.0),XEME#60=0.0(1.0),XTMP#19=0.0(0.1)}
[P1T2] Init LEX: peter stone :- NP : peter:pe -> {LEX#363=21.435469250725863(1.0),XEME#173=0.0(1.0),XTMP#19=0.0(0.1)}
[P1T2] Init LEX: 3402 :- NP : l3_402:ro -> {LEX#457=10.0(1.0),XEME#194=0.0(1.0),XTMP#19=0.0(0.1)}
[P1T2] Init LEX: alice anderson :- NP : alice:pe -> {LEX#389=21.435469250725863(1.0),XEME#181=0.0(1.0),XTMP#19=0.0(0.1)}
[P1T2] Init LEX: 3420 :- NP : l3_420:ro -> {LEX#338=10.0(1.0),XEME#168=0.0(1.0),XTMP#19=0.0(0.1)}
[P1T2] Init LEX: i :- NP : me:pe -> {LEX#263=10.0(1.0),XEME#154=0.0(1.0),XTMP#19=0.0(0.1)}
[P1T2] Init LEX: apple :- NP : apple:it -> {LEX#390=10.0(1.0),XEME#182=0.0(1.0),XTMP#19=0.0(0.1)}
[P1T2] Init LEX: counter :- NP : coffeecounter:sc -> {LEX#491=10.0(1.0),XEME#197=0.0(1.0),XTMP#19=0.0(0.1)}
[P1T2] Init LEX: piyush khandelwal :- NP : piyush:pe -> {LEX#201=21.435469250725863(1.0),XEME#138=0.0(1.0),XTMP#19=0.0(0.1)}
[P1T2] Init LEX: kazunori iwata :- NP : kazunori:pe -> {LEX#377=21.435469250725863(1.0),XEME#177=0.0(1.0),XTMP#19=0.0(0.1)}
[P1T2] Init LEX: dennis davis :- NP : dennis:pe -> {LEX#77=21.435469250725863(1.0),XEME#67=0.0(1.0),XTMP#19=0.0(0.1)}
[P1T2] Init LEX: 3508 :- NP : l3_508:ro -> {LEX#284=10.0(1.0),XEME#157=0.0(1.0),XTMP#19=0.0(0.1)}
[P1T2] Init LEX: 3404 :- NP : l3_404:ro -> {LEX#407=10.0(1.0),XEME#186=0.0(1.0),XTMP#19=0.0(0.1)}
[P1T2] Init LEX: trashcan :- NP : trashcan:it -> {LEX#540=10.0(1.0),XEME#205=0.0(1.0),XTMP#19=0.0(0.1)}
[P1T2] Init LEX: 3430 :- NP : l3_430:ro -> {LEX#425=10.0(1.0),XEME#188=0.0(1.0),XTMP#19=0.0(0.1)}
[P1T2] Init LEX: carol clark :- NP : carol:pe -> {LEX#426=21.435469250725863(1.0),XEME#189=0.0(1.0),XTMP#19=0.0(0.1)}
[P1T2] Init LEX: 3516 :- NP : l3_516:ro -> {LEX#352=10.0(1.0),XEME#172=0.0(1.0),XTMP#19=0.0(0.1)}
[P1T2] Init LEX: me :- NP : me:pe -> {LEX#268=10.0(1.0),XEME#155=0.0(1.0),XTMP#19=0.0(0.1)}
[P1T2] Init LEX: calendar :- NP : calendar:it -> {LEX#445=10.0(1.0),XEME#193=0.0(1.0),XTMP#19=0.0(0.1)}
[P1T2] Init LEX: raymond mooney :- NP : ray:pe -> {LEX#321=21.435469250725863(1.0),XEME#163=0.0(1.0),XTMP#19=0.0(0.1)}
[P1T2] Init LEX: 3512 :- NP : l3_512:ro -> {LEX#527=10.0(1.0),XEME#203=0.0(1.0),XTMP#19=0.0(0.1)}
[P1T2] Init LEX: 3412 :- NP : l3_412:ro -> {LEX#101=10.0(1.0),XEME#95=0.0(1.0),XTMP#19=0.0(0.1)}
[P1T2] Init LEX: yourself :- NP : self:self -> {LEX#170=10.0(1.0),XEME#126=0.0(1.0),XTMP#19=0.0(0.1)}
[P1T2] Init LEX: bob brown :- NP : bob:pe -> {LEX#121=21.435469250725863(1.0),XEME#108=0.0(1.0),XTMP#19=0.0(0.1)}
[P1T2] Init LEX: hamburger :- NP : hamburger:it -> {LEX#580=10.0(1.0),XEME#211=0.0(1.0),XTMP#19=0.0(0.1)}
[P1T2] Init LEX: cell phone :- NP : phone:it -> {LEX#20=21.435469250725863(1.0),XEME#18=0.0(1.0),XTMP#19=0.0(0.1)}
[P1T2] Init LEX: 3510 :- NP : l3_510:ro -> {LEX#345=10.0(1.0),XEME#169=0.0(1.0),XTMP#19=0.0(0.1)}
[P1T2] Init LEX: 3414 :- NP : l3_414:ro -> {LEX#548=10.0(1.0),XEME#207=0.0(1.0),XTMP#19=0.0(0.1)}
[P1T2] Init LEX: you :- NP : self:self -> {LEX#371=10.0(1.0),XEME#174=0.0(1.0),XTMP#19=0.0(0.1)}
[P1T2] Init LEX: 3416 :- NP : l3_416:ro -> {LEX#460=10.0(1.0),XEME#195=0.0(1.0),XTMP#19=0.0(0.1)}
[P1T2] Init LEX: daniel urieli :- NP : daniel:pe -> {LEX#54=21.435469250725863(1.0),XEME#49=0.0(1.0),XTMP#19=0.0(0.1)}
[P1T2] Init LEX: 3436 :- NP : l3_436:ro -> {LEX#327=10.0(1.0),XEME#165=0.0(1.0),XTMP#19=0.0(0.1)}
[P1T2] Init LEX: 3418 :- NP : l3_418:ro -> {LEX#86=10.0(1.0),XEME#74=0.0(1.0),XTMP#19=0.0(0.1)}
[P1T2] Init LEX: jivko sinapov :- NP : jivko:pe -> {LEX#348=21.435469250725863(1.0),XEME#170=0.0(1.0),XTMP#19=0.0(0.1)}
[P1T2] Init LEX: 3432 :- NP : l3_432:ro -> {LEX#401=10.0(1.0),XEME#184=0.0(1.0),XTMP#19=0.0(0.1)}
[P1T2] Init LEX: 3414a :- NP : l3_414a:ro -> {LEX#127=10.0(1.0),XEME#111=0.0(1.0),XTMP#19=0.0(0.1)}
[P1T2] Init LEX: coffee :- NP : coffee:it -> {LEX#385=10.0(1.0),XEME#180=0.0(1.0),XTMP#19=0.0(0.1)}
[P1T2] Init LEX: 3414b :- NP : l3_414b:ro -> {LEX#519=10.0(1.0),XEME#201=0.0(1.0),XTMP#19=0.0(0.1)}
[P1T2] Init LEX: matteo leonetti :- NP : matteo:pe -> {LEX#29=21.435469250725863(1.0),XEME#27=0.0(1.0),XTMP#19=0.0(0.1)}
[P1T2] Init LEX: shiqi zhang :- NP : shiqi:pe -> {LEX#430=21.435469250725863(1.0),XEME#191=0.0(1.0),XTMP#19=0.0(0.1)}
[P1T2] Init LEX: soda :- NP : soda:it -> {LEX#403=10.0(1.0),XEME#185=0.0(1.0),XTMP#19=0.0(0.1)}
[P1T2] Init LEX: ellen edwards :- NP : ellen:pe -> {LEX#307=21.435469250725863(1.0),XEME#160=0.0(1.0),XTMP#19=0.0(0.1)}
[P1T2] Init XEME: 3420 :- NP : l3_420:ro -> {LEX#338=10.0(1.0),XEME#168=10.0(1.0),XTMP#19=0.0(0.1)}
[P1T2] Init XEME: take :- S/PP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#2=10.0(1.0),XEME#2=10.0(1.0),XTMP#2=0.0(0.1)}
[P1T2] Init XEME: walk :- S/PP : (lambda $0:<a,t> (and:<t*,t> (action:<a,t> walk:a) ($0 walk:a))) -> {LEX#4=10.0(1.0),XEME#4=10.0(1.0),XTMP#4=0.0(0.1)}
[P1T2] Init XEME: is :- S\NP/(S\NP) : (lambda $0:<e,t> (lambda $1:e ($0 $1))) -> {LEX#5=10.0(1.0),XEME#5=10.0(1.0),XTMP#5=0.0(0.1)}
[P1T2] Init XEME: what :- S/NP : (lambda $0:e $0) -> {LEX#339=10.0(1.0),XEME#76=10.0(1.0),XTMP#146=0.0(0.1)}
[P1T2] Init XEME: bring :- S/PP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#34=10.0(1.0),XEME#78=10.0(1.0),XTMP#37=0.0(0.1)}
[P1T2] Init XEME: what :- S/(S\NP)/N : (lambda $0:<e,t> (lambda $1:<e,t> (lambda $2:e (and:<t*,t> ($0 $2) ($1 $2))))) -> {LEX#340=10.0(1.0),XEME#150=10.0(1.0),XTMP#86=0.0(0.1)}
[P1T2] Init XEME: give :- S/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#9=10.0(1.0),XEME#8=10.0(1.0),XTMP#9=0.0(0.1)}
[P1T2] Init XEME: take :- S/PP/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#66=10.0(1.0),XEME#41=10.0(1.0),XTMP#56=0.0(0.1)}
[P1T2] Init XEME: bring :- S/PP/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#117=10.0(1.0),XEME#31=10.0(1.0),XTMP#92=0.0(0.1)}
[P1T2] Init XEME: deliver :- S/PP/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#31=10.0(1.0),XEME#32=10.0(1.0),XTMP#91=0.0(0.1)}
[P1T2] Init XEME: deliver :- S/PP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#10=10.0(1.0),XEME#9=10.0(1.0),XTMP#10=0.0(0.1)}
[P1T2] Init XEME: does :- S/NP/(S/NP) : (lambda $0:<e,t> (lambda $1:e ($0 $1))) -> {LEX#11=10.0(1.0),XEME#10=10.0(1.0),XTMP#11=0.0(0.1)}
[P1T2] Init XEME: take :- S/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#44=10.0(1.0),XEME#89=10.0(1.0),XTMP#58=0.0(0.1)}
[P1T2] Init XEME: deliver :- S/NP/NP : (lambda $0:e (lambda $1:e (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) (actionpatient:<a,<e,t>> bring:a $1)))) -> {LEX#83=10.0(1.0),XEME#130=10.0(1.0),XTMP#1=0.0(0.1)}
[P1T2] Init XEME: give :- S/PP/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#18=10.0(1.0),XEME#8=10.0(1.0),XTMP#17=0.0(0.1)}
[P1T2] Init XEME: how :- S/NP : (lambda $0:e $0) -> {LEX#344=10.0(1.0),XEME#61=10.0(1.0),XTMP#146=0.0(0.1)}
[P1T2] Init XEME: deliver :- S/PP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#10=10.0(1.0),XEME#44=10.0(1.0),XTMP#7=0.0(0.1)}
[P1T2] Init XEME: cell phone :- NP : phone:it -> {LEX#20=21.435469250725863(1.0),XEME#18=10.0(1.0),XTMP#19=0.0(0.1)}
[P1T2] Init XEME: 3510 :- NP : l3_510:ro -> {LEX#345=10.0(1.0),XEME#169=10.0(1.0),XTMP#19=0.0(0.1)}
[P1T2] Init XEME: take :- S/PP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#2=10.0(1.0),XEME#89=10.0(1.0),XTMP#34=0.0(0.1)}
[P1T2] Init XEME: are there :- S\NP : (lambda $0:e true:t) -> {LEX#21=21.435469250725863(1.0),XEME#19=10.0(1.0),XTMP#20=0.0(0.1)}
[P1T2] Init XEME: deliver :- S/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#22=10.0(1.0),XEME#20=10.0(1.0),XTMP#21=0.0(0.1)}
[P1T2] Init XEME: how many :- S/(S\NP)/N : (lambda $0:<e,t> (lambda $1:<e,t> (count:<<e,t>,i> (lambda $2:e (and:<t*,t> ($0 $2) ($1 $2)))))) -> {LEX#25=21.435469250725863(1.0),XEME#23=10.0(1.0),XTMP#24=0.0(0.1)}
[P1T2] Init XEME: jivko sinapov :- NP : jivko:pe -> {LEX#348=21.435469250725863(1.0),XEME#170=10.0(1.0),XTMP#19=0.0(0.1)}
[P1T2] Init XEME: matteo leonetti :- NP : matteo:pe -> {LEX#29=21.435469250725863(1.0),XEME#27=10.0(1.0),XTMP#19=0.0(0.1)}
[P1T2] Init XEME: deliver :- S/PP/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#31=10.0(1.0),XEME#20=10.0(1.0),XTMP#65=0.0(0.1)}
[P1T2] Init XEME: deliver :- S/PP/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#31=10.0(1.0),XEME#29=10.0(1.0),XTMP#28=0.0(0.1)}
[P1T2] Init XEME: take :- S/NP/NP : (lambda $0:e (lambda $1:e (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) (actionpatient:<a,<e,t>> bring:a $1)))) -> {LEX#57=10.0(1.0),XEME#119=10.0(1.0),XTMP#22=0.0(0.1)}
[P1T2] Init XEME: take :- S/PP/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#66=10.0(1.0),XEME#93=10.0(1.0),XTMP#87=0.0(0.1)}
[P1T2] Init XEME: the :- N/N : (lambda $0:<e,t> (lambda $1:e ($0 $1))) -> {LEX#32=10.0(1.0),XEME#0=10.0(1.0),XTMP#29=0.0(0.1)}
[P1T2] Init XEME: deliver :- S/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#22=10.0(1.0),XEME#32=10.0(1.0),XTMP#141=0.0(0.1)}
[P1T2] Init XEME: of :- NP\N/NP : (lambda $0:e (lambda $1:<e,t> (the:<<e,t>,e> (lambda $2:e (and:<t*,t> (person:<pe,t> $0) ($1 $2) (possesses:<pe,<e,t>> $0 $2)))))) -> {LEX#33=10.0(1.0),XEME#30=10.0(1.0),XTMP#30=0.0(0.1)}
[P1T2] Init XEME: give :- S/PP/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#18=10.0(1.0),XEME#94=10.0(1.0),XTMP#18=0.0(0.1)}
[P1T2] Init XEME: bring :- S/PP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#34=10.0(1.0),XEME#31=10.0(1.0),XTMP#31=0.0(0.1)}
[P1T2] Init XEME: give :- S/PP/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#18=10.0(1.0),XEME#8=10.0(1.0),XTMP#14=0.0(0.1)}
[P1T2] Init XEME: take :- S/PP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#2=10.0(1.0),XEME#50=10.0(1.0),XTMP#109=0.0(0.1)}
[P1T2] Init XEME: deliver :- S/PP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#10=10.0(1.0),XEME#32=10.0(1.0),XTMP#34=0.0(0.1)}
[P1T2] Init XEME: deliver :- S/PP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#10=10.0(1.0),XEME#132=10.0(1.0),XTMP#84=0.0(0.1)}
[P1T2] Init XEME: give :- S/PP/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#18=10.0(1.0),XEME#82=10.0(1.0),XTMP#134=0.0(0.1)}
[P1T2] Init XEME: give :- S/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#9=10.0(1.0),XEME#33=10.0(1.0),XTMP#35=0.0(0.1)}
[P1T2] Init XEME: person :- N : (lambda $0:e (person:<pe,t> $0)) -> {LEX#351=10.0(1.0),XEME#116=10.0(1.0),XTMP#101=0.0(0.1)}
[P1T2] Init XEME: bring :- S/NP/NP : (lambda $0:e (lambda $1:e (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) (actionpatient:<a,<e,t>> bring:a $1)))) -> {LEX#64=10.0(1.0),XEME#106=10.0(1.0),XTMP#33=0.0(0.1)}
[P1T2] Init XEME: deliver :- S/PP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#10=10.0(1.0),XEME#158=10.0(1.0),XTMP#115=0.0(0.1)}
[P1T2] Init XEME: go :- S/PP : (lambda $0:<a,t> (and:<t*,t> (action:<a,t> walk:a) ($0 walk:a))) -> {LEX#40=10.0(1.0),XEME#22=10.0(1.0),XTMP#39=0.0(0.1)}
[P1T2] Init XEME: bring :- S/NP/NP : (lambda $0:e (lambda $1:e (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) (actionpatient:<a,<e,t>> bring:a $1)))) -> {LEX#64=10.0(1.0),XEME#53=10.0(1.0),XTMP#116=0.0(0.1)}
[P1T2] Init XEME: deliver :- S/PP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#10=10.0(1.0),XEME#36=10.0(1.0),XTMP#40=0.0(0.1)}
[P1T2] Init XEME: give :- S/NP/NP : (lambda $0:e (lambda $1:e (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) (actionpatient:<a,<e,t>> bring:a $1)))) -> {LEX#41=10.0(1.0),XEME#37=10.0(1.0),XTMP#41=0.0(0.1)}
[P1T2] Init XEME: give :- S/NP/NP : (lambda $0:e (lambda $1:e (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) (actionpatient:<a,<e,t>> bring:a $1)))) -> {LEX#41=10.0(1.0),XEME#38=10.0(1.0),XTMP#42=0.0(0.1)}
[P1T2] Init XEME: give :- S/PP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#119=10.0(1.0),XEME#101=10.0(1.0),XTMP#85=0.0(0.1)}
[P1T2] Init XEME: go :- S/PP : (lambda $0:<a,t> (and:<t*,t> (action:<a,t> walk:a) ($0 walk:a))) -> {LEX#40=10.0(1.0),XEME#24=10.0(1.0),XTMP#43=0.0(0.1)}
[P1T2] Init XEME: give :- S/NP/NP : (lambda $0:e (lambda $1:e (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) (actionpatient:<a,<e,t>> bring:a $1)))) -> {LEX#41=10.0(1.0),XEME#40=10.0(1.0),XTMP#44=0.0(0.1)}
[P1T2] Init XEME: 3516 :- NP : l3_516:ro -> {LEX#352=10.0(1.0),XEME#172=10.0(1.0),XTMP#19=0.0(0.1)}
[P1T2] Init XEME: take :- S/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#44=10.0(1.0),XEME#41=10.0(1.0),XTMP#46=0.0(0.1)}
[P1T2] Init XEME: please :- S\S : (lambda $0:e $0) -> {LEX#48=10.0(1.0),XEME#25=10.0(1.0),XTMP#49=0.0(0.1)}
[P1T2] Init XEME: of :- NP/NP : (lambda $0:e $0) -> {LEX#51=10.0(1.0),XEME#45=10.0(1.0),XTMP#51=0.0(0.1)}
[P1T2] Init XEME: of :- NP\N/NP : (lambda $0:e (lambda $1:<e,t> (the:<<e,t>,e> (lambda $2:e (and:<t*,t> (person:<pe,t> $0) ($1 $2) (possesses:<pe,<e,t>> $0 $2)))))) -> {LEX#33=10.0(1.0),XEME#46=10.0(1.0),XTMP#52=0.0(0.1)}
[P1T2] Init XEME: where :- S/NP : (lambda $0:e $0) -> {LEX#353=10.0(1.0),XEME#64=10.0(1.0),XTMP#146=0.0(0.1)}
[P1T2] Init XEME: give :- S/NP/NP : (lambda $0:e (lambda $1:e (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) (actionpatient:<a,<e,t>> bring:a $1)))) -> {LEX#41=10.0(1.0),XEME#33=10.0(1.0),XTMP#23=0.0(0.1)}
[P1T2] Init XEME: daniel urieli :- NP : daniel:pe -> {LEX#54=21.435469250725863(1.0),XEME#49=10.0(1.0),XTMP#19=0.0(0.1)}
[P1T2] Init XEME: take :- S/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#44=10.0(1.0),XEME#50=10.0(1.0),XTMP#57=0.0(0.1)}
[P1T2] Init XEME: no :- S\NP/(S\NP) : (lambda $0:<e,t> (lambda $1:e (not:<t,t> ($0 $1)))) -> {LEX#354=10.0(1.0),XEME#15=10.0(1.0),XTMP#150=0.0(0.1)}
[P1T2] Init XEME: deliver :- S/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#22=10.0(1.0),XEME#32=10.0(1.0),XTMP#58=0.0(0.1)}
[P1T2] Init XEME: take :- S/NP/NP : (lambda $0:e (lambda $1:e (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) (actionpatient:<a,<e,t>> bring:a $1)))) -> {LEX#57=10.0(1.0),XEME#51=10.0(1.0),XTMP#1=0.0(0.1)}
[P1T2] Init XEME: give :- S/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#9=10.0(1.0),XEME#33=10.0(1.0),XTMP#32=0.0(0.1)}
[P1T2] Init XEME: does :- S\NP/(S\NP) : (lambda $0:<e,t> (lambda $1:e ($0 $1))) -> {LEX#356=10.0(1.0),XEME#10=10.0(1.0),XTMP#5=0.0(0.1)}
[P1T2] Init XEME: bring :- S/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#60=10.0(1.0),XEME#53=10.0(1.0),XTMP#60=0.0(0.1)}
[P1T2] Init XEME: take :- S/PP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#2=10.0(1.0),XEME#54=10.0(1.0),XTMP#7=0.0(0.1)}
[P1T2] Init XEME: bring :- S/NP/NP : (lambda $0:e (lambda $1:e (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) (actionpatient:<a,<e,t>> bring:a $1)))) -> {LEX#64=10.0(1.0),XEME#153=10.0(1.0),XTMP#136=0.0(0.1)}
[P1T2] Init XEME: bring :- S/NP/NP : (lambda $0:e (lambda $1:e (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) (actionpatient:<a,<e,t>> bring:a $1)))) -> {LEX#64=10.0(1.0),XEME#91=10.0(1.0),XTMP#12=0.0(0.1)}
[P1T2] Init XEME: bring :- S/NP/NP : (lambda $0:e (lambda $1:e (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) (actionpatient:<a,<e,t>> bring:a $1)))) -> {LEX#64=10.0(1.0),XEME#56=10.0(1.0),XTMP#63=0.0(0.1)}
[P1T2] Init XEME: bring :- S/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#60=10.0(1.0),XEME#53=10.0(1.0),XTMP#143=0.0(0.1)}
[P1T2] Init XEME: give :- S/NP/NP : (lambda $0:e (lambda $1:e (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) (actionpatient:<a,<e,t>> bring:a $1)))) -> {LEX#41=10.0(1.0),XEME#40=10.0(1.0),XTMP#133=0.0(0.1)}
[P1T2] Init XEME: take :- S/PP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#2=10.0(1.0),XEME#50=10.0(1.0),XTMP#64=0.0(0.1)}
[P1T2] Init XEME: take :- S/PP/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#66=10.0(1.0),XEME#58=10.0(1.0),XTMP#65=0.0(0.1)}
[P1T2] Init XEME: give :- S/PP/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#18=10.0(1.0),XEME#33=10.0(1.0),XTMP#98=0.0(0.1)}
[P1T2] Init XEME: peter stone :- NP : peter:pe -> {LEX#363=21.435469250725863(1.0),XEME#173=10.0(1.0),XTMP#19=0.0(0.1)}
[P1T2] Init XEME: deliver :- S/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#22=10.0(1.0),XEME#130=10.0(1.0),XTMP#112=0.0(0.1)}
[P1T2] Init XEME: give :- S/NP/NP : (lambda $0:e (lambda $1:e (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) (actionpatient:<a,<e,t>> bring:a $1)))) -> {LEX#41=10.0(1.0),XEME#33=10.0(1.0),XTMP#48=0.0(0.1)}
[P1T2] Init XEME: 3502 :- NP : l3_502:ro -> {LEX#68=10.0(1.0),XEME#60=10.0(1.0),XTMP#19=0.0(0.1)}
[P1T2] Init XEME: take :- S/PP/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#66=10.0(1.0),XEME#89=10.0(1.0),XTMP#117=0.0(0.1)}
[P1T2] Init XEME: s :- NP/N\NP : (lambda $0:e (lambda $1:<e,t> (the:<<e,t>,e> (lambda $2:e (and:<t*,t> (person:<pe,t> $0) ($1 $2) (possesses:<pe,<e,t>> $0 $2)))))) -> {LEX#73=10.0(1.0),XEME#63=10.0(1.0),XTMP#70=0.0(0.1)}
[P1T2] Init XEME: deliver :- S/PP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#10=10.0(1.0),XEME#32=10.0(1.0),XTMP#131=0.0(0.1)}
[P1T2] Init XEME: count :- S/(S\NP)/N : (lambda $0:<e,t> (lambda $1:<e,t> (count:<<e,t>,i> (lambda $2:e (and:<t*,t> ($0 $2) ($1 $2)))))) -> {LEX#75=10.0(1.0),XEME#65=10.0(1.0),XTMP#24=0.0(0.1)}
[P1T2] Init XEME: dennis davis :- NP : dennis:pe -> {LEX#77=21.435469250725863(1.0),XEME#67=10.0(1.0),XTMP#19=0.0(0.1)}
[P1T2] Init XEME: s :- NP/N\NP : (lambda $0:e (lambda $1:<e,t> (the:<<e,t>,e> (lambda $2:e (and:<t*,t> (person:<pe,t> $0) ($1 $2) (possesses:<pe,<e,t>> $0 $2)))))) -> {LEX#73=10.0(1.0),XEME#68=10.0(1.0),XTMP#73=0.0(0.1)}
[P1T2] Init XEME: give :- S/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#9=10.0(1.0),XEME#125=10.0(1.0),XTMP#25=0.0(0.1)}
[P1T2] Init XEME: not :- PP/PP : (lambda $0:<e,t> (lambda $1:e (not:<t,t> ($0 $1)))) -> {LEX#81=10.0(1.0),XEME#7=10.0(1.0),XTMP#16=0.0(0.1)}
[P1T2] Init XEME: bring :- S/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#60=10.0(1.0),XEME#71=10.0(1.0),XTMP#75=0.0(0.1)}
[P1T2] Init XEME: give :- S/NP/NP : (lambda $0:e (lambda $1:e (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) (actionpatient:<a,<e,t>> bring:a $1)))) -> {LEX#41=10.0(1.0),XEME#72=10.0(1.0),XTMP#76=0.0(0.1)}
[P1T2] Init XEME: you :- NP : self:self -> {LEX#371=10.0(1.0),XEME#174=10.0(1.0),XTMP#19=0.0(0.1)}
[P1T2] Init XEME: deliver :- S/NP/NP : (lambda $0:e (lambda $1:e (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) (actionpatient:<a,<e,t>> bring:a $1)))) -> {LEX#83=10.0(1.0),XEME#43=10.0(1.0),XTMP#77=0.0(0.1)}
[P1T2] Init XEME: s :- NP/N\NP : (lambda $0:e (lambda $1:<e,t> (the:<<e,t>,e> (lambda $2:e (and:<t*,t> (person:<pe,t> $0) ($1 $2) (possesses:<pe,<e,t>> $0 $2)))))) -> {LEX#73=10.0(1.0),XEME#175=10.0(1.0),XTMP#144=0.0(0.1)}
[P1T2] Init XEME: bring :- S/PP/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#117=10.0(1.0),XEME#71=10.0(1.0),XTMP#127=0.0(0.1)}
[P1T2] Init XEME: deliver :- S/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#22=10.0(1.0),XEME#29=10.0(1.0),XTMP#57=0.0(0.1)}
[P1T2] Init XEME: bring :- S/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#60=10.0(1.0),XEME#73=10.0(1.0),XTMP#79=0.0(0.1)}
[P1T2] Init XEME: of :- NP\N/NP : (lambda $0:e (lambda $1:<e,t> (the:<<e,t>,e> (lambda $2:e (and:<t*,t> (person:<pe,t> $0) ($1 $2) (possesses:<pe,<e,t>> $0 $2)))))) -> {LEX#33=10.0(1.0),XEME#176=10.0(1.0),XTMP#100=0.0(0.1)}
[P1T2] Init XEME: 3418 :- NP : l3_418:ro -> {LEX#86=10.0(1.0),XEME#74=10.0(1.0),XTMP#19=0.0(0.1)}
[P1T2] Init XEME: give :- S/NP/NP : (lambda $0:e (lambda $1:e (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) (actionpatient:<a,<e,t>> bring:a $1)))) -> {LEX#41=10.0(1.0),XEME#124=10.0(1.0),XTMP#103=0.0(0.1)}
[P1T2] Init XEME: deliver :- S/PP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#10=10.0(1.0),XEME#77=10.0(1.0),XTMP#80=0.0(0.1)}
[P1T2] Init XEME: go :- S/PP : (lambda $0:<a,t> (and:<t*,t> (action:<a,t> walk:a) ($0 walk:a))) -> {LEX#40=10.0(1.0),XEME#79=10.0(1.0),XTMP#15=0.0(0.1)}
[P1T2] Init XEME: give :- S/PP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#119=10.0(1.0),XEME#96=10.0(1.0),XTMP#13=0.0(0.1)}
[P1T2] Init XEME: of :- NP\N/NP : (lambda $0:e (lambda $1:<e,t> (the:<<e,t>,e> (lambda $2:e (and:<t*,t> (person:<pe,t> $0) ($1 $2) (possesses:<pe,<e,t>> $0 $2)))))) -> {LEX#33=10.0(1.0),XEME#6=10.0(1.0),XTMP#50=0.0(0.1)}
[P1T2] Init XEME: bring :- S/PP/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#117=10.0(1.0),XEME#109=10.0(1.0),XTMP#54=0.0(0.1)}
[P1T2] Init XEME: bring :- S/PP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#34=10.0(1.0),XEME#31=10.0(1.0),XTMP#110=0.0(0.1)}
[P1T2] Init XEME: bring :- S/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#60=10.0(1.0),XEME#80=10.0(1.0),XTMP#83=0.0(0.1)}
[P1T2] Init XEME: bring :- S/NP/NP : (lambda $0:e (lambda $1:e (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) (actionpatient:<a,<e,t>> bring:a $1)))) -> {LEX#64=10.0(1.0),XEME#56=10.0(1.0),XTMP#106=0.0(0.1)}
[P1T2] Init XEME: bring :- S/NP/NP : (lambda $0:e (lambda $1:e (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) (actionpatient:<a,<e,t>> bring:a $1)))) -> {LEX#64=10.0(1.0),XEME#92=10.0(1.0),XTMP#133=0.0(0.1)}
[P1T2] Init XEME: give :- S/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#9=10.0(1.0),XEME#82=10.0(1.0),XTMP#45=0.0(0.1)}
[P1T2] Init XEME: stacy miller :- NP : stacy:pe -> {LEX#92=21.435469250725863(1.0),XEME#83=10.0(1.0),XTMP#19=0.0(0.1)}
[P1T2] Init XEME: deliver :- S/PP/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#31=10.0(1.0),XEME#85=10.0(1.0),XTMP#87=0.0(0.1)}
[P1T2] Init XEME: bring :- S/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#60=10.0(1.0),XEME#106=10.0(1.0),XTMP#25=0.0(0.1)}
[P1T2] Init XEME: take :- S/PP/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#66=10.0(1.0),XEME#89=10.0(1.0),XTMP#91=0.0(0.1)}
[P1T2] Init XEME: bring :- S/NP/NP : (lambda $0:e (lambda $1:e (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) (actionpatient:<a,<e,t>> bring:a $1)))) -> {LEX#64=10.0(1.0),XEME#73=10.0(1.0),XTMP#93=0.0(0.1)}
[P1T2] Init XEME: deliver :- S/NP/NP : (lambda $0:e (lambda $1:e (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) (actionpatient:<a,<e,t>> bring:a $1)))) -> {LEX#83=10.0(1.0),XEME#77=10.0(1.0),XTMP#94=0.0(0.1)}
[P1T2] Init XEME: go :- S/PP : (lambda $0:<a,t> (and:<t*,t> (action:<a,t> walk:a) ($0 walk:a))) -> {LEX#40=10.0(1.0),XEME#13=10.0(1.0),XTMP#4=0.0(0.1)}
[P1T2] Init XEME: take :- S/PP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#2=10.0(1.0),XEME#2=10.0(1.0),XTMP#66=0.0(0.1)}
[P1T2] Init XEME: bring :- S/PP/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#117=10.0(1.0),XEME#53=10.0(1.0),XTMP#53=0.0(0.1)}
[P1T2] Init XEME: kazunori iwata :- NP : kazunori:pe -> {LEX#377=21.435469250725863(1.0),XEME#177=10.0(1.0),XTMP#19=0.0(0.1)}
[P1T2] Init XEME: bring :- S/PP/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#117=10.0(1.0),XEME#88=10.0(1.0),XTMP#6=0.0(0.1)}
[P1T2] Init XEME: bring :- S/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#60=10.0(1.0),XEME#91=10.0(1.0),XTMP#95=0.0(0.1)}
[P1T2] Init XEME: deliver :- S/PP/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#31=10.0(1.0),XEME#43=10.0(1.0),XTMP#56=0.0(0.1)}
[P1T2] Init XEME: give :- S/NP/NP : (lambda $0:e (lambda $1:e (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) (actionpatient:<a,<e,t>> bring:a $1)))) -> {LEX#41=10.0(1.0),XEME#145=10.0(1.0),XTMP#89=0.0(0.1)}
[P1T2] Init XEME: walk :- S/PP : (lambda $0:<a,t> (and:<t*,t> (action:<a,t> walk:a) ($0 walk:a))) -> {LEX#4=10.0(1.0),XEME#35=10.0(1.0),XTMP#82=0.0(0.1)}
[P1T2] Init XEME: bring :- S/PP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#34=10.0(1.0),XEME#92=10.0(1.0),XTMP#96=0.0(0.1)}
[P1T2] Init XEME: bring :- S/NP/NP : (lambda $0:e (lambda $1:e (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) (actionpatient:<a,<e,t>> bring:a $1)))) -> {LEX#64=10.0(1.0),XEME#53=10.0(1.0),XTMP#72=0.0(0.1)}
[P1T2] Init XEME: take :- S/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#44=10.0(1.0),XEME#93=10.0(1.0),XTMP#97=0.0(0.1)}
[P1T2] Init XEME: how many :- S/(S/NP)/N : (lambda $0:<e,t> (lambda $1:<e,t> (count:<<e,t>,i> (lambda $2:e (and:<t*,t> ($0 $2) ($1 $2)))))) -> {LEX#227=21.435469250725863(1.0),XEME#178=10.0(1.0),XTMP#151=0.0(0.1)}
[P1T2] Init XEME: room :- N : (lambda $0:e (room:<ro,t> $0)) -> {LEX#380=10.0(1.0),XEME#179=10.0(1.0),XTMP#101=0.0(0.1)}
[P1T2] Init XEME: 3412 :- NP : l3_412:ro -> {LEX#101=10.0(1.0),XEME#95=10.0(1.0),XTMP#19=0.0(0.1)}
[P1T2] Init XEME: give :- S/NP/NP : (lambda $0:e (lambda $1:e (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) (actionpatient:<a,<e,t>> bring:a $1)))) -> {LEX#41=10.0(1.0),XEME#96=10.0(1.0),XTMP#67=0.0(0.1)}
[P1T2] Init XEME: rooms :- N : (lambda $0:e (room:<ro,t> $0)) -> {LEX#104=10.0(1.0),XEME#98=10.0(1.0),XTMP#101=0.0(0.1)}
[P1T2] Init XEME: have :- S/NP/(S/NP) : (lambda $0:<e,t> (lambda $1:e ($0 $1))) -> {LEX#105=10.0(1.0),XEME#70=10.0(1.0),XTMP#11=0.0(0.1)}
[P1T2] Init XEME: s :- NP/N\NP : (lambda $0:e (lambda $1:<e,t> (the:<<e,t>,e> (lambda $2:e (and:<t*,t> (person:<pe,t> $0) ($1 $2) (possesses:<pe,<e,t>> $0 $2)))))) -> {LEX#73=10.0(1.0),XEME#99=10.0(1.0),XTMP#99=0.0(0.1)}
[P1T2] Init XEME: deliver :- S/NP/NP : (lambda $0:e (lambda $1:e (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) (actionpatient:<a,<e,t>> bring:a $1)))) -> {LEX#83=10.0(1.0),XEME#29=10.0(1.0),XTMP#72=0.0(0.1)}
[P1T2] Init XEME: give :- S/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#9=10.0(1.0),XEME#34=10.0(1.0),XTMP#46=0.0(0.1)}
[P1T2] Init XEME: take :- S/PP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#2=10.0(1.0),XEME#1=10.0(1.0),XTMP#85=0.0(0.1)}
[P1T2] Init XEME: coffee :- NP : coffee:it -> {LEX#385=10.0(1.0),XEME#180=10.0(1.0),XTMP#19=0.0(0.1)}
[P1T2] Init XEME: go :- S/PP : (lambda $0:<a,t> (and:<t*,t> (action:<a,t> walk:a) ($0 walk:a))) -> {LEX#40=10.0(1.0),XEME#55=10.0(1.0),XTMP#102=0.0(0.1)}
[P1T2] Init XEME: take :- S/NP/NP : (lambda $0:e (lambda $1:e (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) (actionpatient:<a,<e,t>> bring:a $1)))) -> {LEX#57=10.0(1.0),XEME#93=10.0(1.0),XTMP#103=0.0(0.1)}
[P1T2] Init XEME: give :- S/NP/NP : (lambda $0:e (lambda $1:e (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) (actionpatient:<a,<e,t>> bring:a $1)))) -> {LEX#41=10.0(1.0),XEME#101=10.0(1.0),XTMP#26=0.0(0.1)}
[P1T2] Init XEME: bring :- S/NP/NP : (lambda $0:e (lambda $1:e (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) (actionpatient:<a,<e,t>> bring:a $1)))) -> {LEX#64=10.0(1.0),XEME#88=10.0(1.0),XTMP#78=0.0(0.1)}
[P1T2] Init XEME: give :- S/NP/NP : (lambda $0:e (lambda $1:e (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) (actionpatient:<a,<e,t>> bring:a $1)))) -> {LEX#41=10.0(1.0),XEME#156=10.0(1.0),XTMP#136=0.0(0.1)}
[P1T2] Init XEME: deliver :- S/NP/NP : (lambda $0:e (lambda $1:e (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) (actionpatient:<a,<e,t>> bring:a $1)))) -> {LEX#83=10.0(1.0),XEME#43=10.0(1.0),XTMP#106=0.0(0.1)}
[P1T2] Init XEME: 3428 :- NP : l3_428:ro -> {LEX#114=10.0(1.0),XEME#103=10.0(1.0),XTMP#19=0.0(0.1)}
[P1T2] Init XEME: bring :- S/PP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#34=10.0(1.0),XEME#31=10.0(1.0),XTMP#80=0.0(0.1)}
[P1T2] Init XEME: alice anderson :- NP : alice:pe -> {LEX#389=21.435469250725863(1.0),XEME#181=10.0(1.0),XTMP#19=0.0(0.1)}
[P1T2] Init XEME: deliver :- S/PP/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#31=10.0(1.0),XEME#104=10.0(1.0),XTMP#6=0.0(0.1)}
[P1T2] Init XEME: bring :- S/PP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#34=10.0(1.0),XEME#92=10.0(1.0),XTMP#40=0.0(0.1)}
[P1T2] Init XEME: apple :- NP : apple:it -> {LEX#390=10.0(1.0),XEME#182=10.0(1.0),XTMP#19=0.0(0.1)}
[P1T2] Init XEME: take :- S/PP/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#66=10.0(1.0),XEME#112=10.0(1.0),XTMP#119=0.0(0.1)}
[P1T2] Init XEME: take :- S/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#44=10.0(1.0),XEME#112=10.0(1.0),XTMP#35=0.0(0.1)}
[P1T2] Init XEME: take :- S/NP/NP : (lambda $0:e (lambda $1:e (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) (actionpatient:<a,<e,t>> bring:a $1)))) -> {LEX#57=10.0(1.0),XEME#122=10.0(1.0),XTMP#67=0.0(0.1)}
[P1T2] Init XEME: bring :- S/PP/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#117=10.0(1.0),XEME#106=10.0(1.0),XTMP#108=0.0(0.1)}
[P1T2] Init XEME: give :- S/PP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#119=10.0(1.0),XEME#14=10.0(1.0),XTMP#109=0.0(0.1)}
[P1T2] Init XEME: deliver :- S/PP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#10=10.0(1.0),XEME#77=10.0(1.0),XTMP#110=0.0(0.1)}
[P1T2] Init XEME: bob brown :- NP : bob:pe -> {LEX#121=21.435469250725863(1.0),XEME#108=10.0(1.0),XTMP#19=0.0(0.1)}
[P1T2] Init XEME: give :- S/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#9=10.0(1.0),XEME#37=10.0(1.0),XTMP#95=0.0(0.1)}
[P1T2] Init XEME: excluding :- PP/NP : (lambda $0:e (lambda $1:e (not:<t,t> (equals:<e,<e,t>> $1 $0)))) -> {LEX#123=10.0(1.0),XEME#102=10.0(1.0),XTMP#111=0.0(0.1)}
[P1T2] Init XEME: deliver :- S/PP/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#31=10.0(1.0),XEME#137=10.0(1.0),XTMP#132=0.0(0.1)}
[P1T2] Init XEME: give :- S/NP/NP : (lambda $0:e (lambda $1:e (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) (actionpatient:<a,<e,t>> bring:a $1)))) -> {LEX#41=10.0(1.0),XEME#94=10.0(1.0),XTMP#93=0.0(0.1)}
[P1T2] Init XEME: take :- S/PP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#2=10.0(1.0),XEME#89=10.0(1.0),XTMP#113=0.0(0.1)}
[P1T2] Init XEME: give :- S/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#9=10.0(1.0),XEME#14=10.0(1.0),XTMP#57=0.0(0.1)}
[P1T2] Init XEME: take :- S/NP/NP : (lambda $0:e (lambda $1:e (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) (actionpatient:<a,<e,t>> bring:a $1)))) -> {LEX#57=10.0(1.0),XEME#183=10.0(1.0),XTMP#42=0.0(0.1)}
[P1T2] Init XEME: bring :- S/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#60=10.0(1.0),XEME#109=10.0(1.0),XTMP#112=0.0(0.1)}
[P1T2] Init XEME: take :- S/NP/NP : (lambda $0:e (lambda $1:e (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) (actionpatient:<a,<e,t>> bring:a $1)))) -> {LEX#57=10.0(1.0),XEME#135=10.0(1.0),XTMP#44=0.0(0.1)}
[P1T2] Init XEME: count :- S/(S\NP)/N : (lambda $0:<e,t> (lambda $1:<e,t> (count:<<e,t>,i> (lambda $2:e (and:<t*,t> ($0 $2) ($1 $2)))))) -> {LEX#75=10.0(1.0),XEME#66=10.0(1.0),XTMP#62=0.0(0.1)}
[P1T2] Init XEME: deliver :- S/PP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#10=10.0(1.0),XEME#36=10.0(1.0),XTMP#96=0.0(0.1)}
[P1T2] Init XEME: go :- S/PP : (lambda $0:<a,t> (and:<t*,t> (action:<a,t> walk:a) ($0 walk:a))) -> {LEX#40=10.0(1.0),XEME#110=10.0(1.0),XTMP#114=0.0(0.1)}
[P1T2] Init XEME: 3432 :- NP : l3_432:ro -> {LEX#401=10.0(1.0),XEME#184=10.0(1.0),XTMP#19=0.0(0.1)}
[P1T2] Init XEME: 3414a :- NP : l3_414a:ro -> {LEX#127=10.0(1.0),XEME#111=10.0(1.0),XTMP#19=0.0(0.1)}
[P1T2] Init XEME: take :- S/NP/NP : (lambda $0:e (lambda $1:e (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) (actionpatient:<a,<e,t>> bring:a $1)))) -> {LEX#57=10.0(1.0),XEME#112=10.0(1.0),XTMP#23=0.0(0.1)}
[P1T2] Init XEME: give :- S/PP/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#18=10.0(1.0),XEME#14=10.0(1.0),XTMP#53=0.0(0.1)}
[P1T2] Init XEME: bring :- S/PP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#34=10.0(1.0),XEME#113=10.0(1.0),XTMP#115=0.0(0.1)}
[P1T2] Init XEME: soda :- NP : soda:it -> {LEX#403=10.0(1.0),XEME#185=10.0(1.0),XTMP#19=0.0(0.1)}
[P1T2] Init XEME: give :- S/NP/NP : (lambda $0:e (lambda $1:e (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) (actionpatient:<a,<e,t>> bring:a $1)))) -> {LEX#41=10.0(1.0),XEME#125=10.0(1.0),XTMP#33=0.0(0.1)}
[P1T2] Init XEME: bring :- S/NP/NP : (lambda $0:e (lambda $1:e (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) (actionpatient:<a,<e,t>> bring:a $1)))) -> {LEX#64=10.0(1.0),XEME#109=10.0(1.0),XTMP#1=0.0(0.1)}
[P1T2] Init XEME: bring :- S/NP/NP : (lambda $0:e (lambda $1:e (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) (actionpatient:<a,<e,t>> bring:a $1)))) -> {LEX#64=10.0(1.0),XEME#115=10.0(1.0),XTMP#67=0.0(0.1)}
[P1T2] Init XEME: a :- N/N : (lambda $0:<e,t> (lambda $1:e ($0 $1))) -> {LEX#131=10.0(1.0),XEME#62=10.0(1.0),XTMP#29=0.0(0.1)}
[P1T2] Init XEME: can you :- S/S : (lambda $0:<e,t> (lambda $1:e ($0 $1))) -> {LEX#132=21.435469250725863(1.0),XEME#16=10.0(1.0),XTMP#107=0.0(0.1)}
[P1T2] Init XEME: bring :- S/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#60=10.0(1.0),XEME#80=10.0(1.0),XTMP#137=0.0(0.1)}
[P1T2] Init XEME: count :- S/(S/NP)/N : (lambda $0:<e,t> (lambda $1:<e,t> (count:<<e,t>,i> (lambda $2:e (and:<t*,t> ($0 $2) ($1 $2)))))) -> {LEX#134=10.0(1.0),XEME#66=10.0(1.0),XTMP#59=0.0(0.1)}
[P1T2] Init XEME: of :- NP\N/NP : (lambda $0:e (lambda $1:<e,t> (the:<<e,t>,e> (lambda $2:e (and:<t*,t> (person:<pe,t> $0) ($1 $2) (possesses:<pe,<e,t>> $0 $2)))))) -> {LEX#33=10.0(1.0),XEME#171=10.0(1.0),XTMP#152=0.0(0.1)}
[P1T2] Init XEME: deliver :- S/PP/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#31=10.0(1.0),XEME#77=10.0(1.0),XTMP#92=0.0(0.1)}
[P1T2] Init XEME: give :- S/NP/NP : (lambda $0:e (lambda $1:e (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) (actionpatient:<a,<e,t>> bring:a $1)))) -> {LEX#41=10.0(1.0),XEME#100=10.0(1.0),XTMP#22=0.0(0.1)}
[P1T2] Init XEME: give :- S/PP/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#18=10.0(1.0),XEME#14=10.0(1.0),XTMP#118=0.0(0.1)}
[P1T2] Init XEME: take :- S/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#44=10.0(1.0),XEME#87=10.0(1.0),XTMP#9=0.0(0.1)}
[P1T2] Init XEME: 3404 :- NP : l3_404:ro -> {LEX#407=10.0(1.0),XEME#186=10.0(1.0),XTMP#19=0.0(0.1)}
[P1T2] Init XEME: deliver :- S/PP/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#31=10.0(1.0),XEME#77=10.0(1.0),XTMP#119=0.0(0.1)}
[P1T2] Init XEME: deliver :- S/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#22=10.0(1.0),XEME#29=10.0(1.0),XTMP#60=0.0(0.1)}
[P1T2] Init XEME: are :- PP/PP : (lambda $0:<e,t> (lambda $1:e ($0 $1))) -> {LEX#138=10.0(1.0),XEME#75=10.0(1.0),XTMP#68=0.0(0.1)}
[P1T2] Init XEME: deliver :- S/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#22=10.0(1.0),XEME#104=10.0(1.0),XTMP#142=0.0(0.1)}
[P1T2] Init XEME: take :- S/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#44=10.0(1.0),XEME#51=10.0(1.0),XTMP#112=0.0(0.1)}
[P1T2] Init XEME: give :- S/PP/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#18=10.0(1.0),XEME#59=10.0(1.0),XTMP#126=0.0(0.1)}
[P1T2] Init XEME: walk :- S/PP : (lambda $0:<a,t> (and:<t*,t> (action:<a,t> walk:a) ($0 walk:a))) -> {LEX#4=10.0(1.0),XEME#90=10.0(1.0),XTMP#138=0.0(0.1)}
[P1T2] Init XEME: offices :- N : (lambda $0:e (office:<of,t> $0)) -> {LEX#142=10.0(1.0),XEME#118=10.0(1.0),XTMP#101=0.0(0.1)}
[P1T2] Init XEME: is :- S/S : (lambda $0:t $0) -> {LEX#143=10.0(1.0),XEME#5=10.0(1.0),XTMP#120=0.0(0.1)}
[P1T2] Init XEME: take :- S/PP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#2=10.0(1.0),XEME#119=10.0(1.0),XTMP#84=0.0(0.1)}
[P1T2] Init XEME: take :- S/NP/NP : (lambda $0:e (lambda $1:e (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) (actionpatient:<a,<e,t>> bring:a $1)))) -> {LEX#57=10.0(1.0),XEME#120=10.0(1.0),XTMP#89=0.0(0.1)}
[P1T2] Init XEME: bring :- S/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#60=10.0(1.0),XEME#88=10.0(1.0),XTMP#9=0.0(0.1)}
[P1T2] Init XEME: take :- S/NP/NP : (lambda $0:e (lambda $1:e (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) (actionpatient:<a,<e,t>> bring:a $1)))) -> {LEX#57=10.0(1.0),XEME#89=10.0(1.0),XTMP#128=0.0(0.1)}
[P1T2] Init XEME: take :- S/PP/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#66=10.0(1.0),XEME#112=10.0(1.0),XTMP#98=0.0(0.1)}
[P1T2] Init XEME: is :- S\NP/NP : (lambda $0:e (lambda $1:e (equals:<e,<e,t>> $1 $0))) -> {LEX#148=10.0(1.0),XEME#121=10.0(1.0),XTMP#121=0.0(0.1)}
[P1T2] Init XEME: deliver :- S/NP/NP : (lambda $0:e (lambda $1:e (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) (actionpatient:<a,<e,t>> bring:a $1)))) -> {LEX#83=10.0(1.0),XEME#29=10.0(1.0),XTMP#116=0.0(0.1)}
[P1T2] Init XEME: give :- S/NP/NP : (lambda $0:e (lambda $1:e (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) (actionpatient:<a,<e,t>> bring:a $1)))) -> {LEX#41=10.0(1.0),XEME#34=10.0(1.0),XTMP#106=0.0(0.1)}
[P1T2] Init XEME: take :- S/NP/NP : (lambda $0:e (lambda $1:e (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) (actionpatient:<a,<e,t>> bring:a $1)))) -> {LEX#57=10.0(1.0),XEME#50=10.0(1.0),XTMP#116=0.0(0.1)}
[P1T2] Init XEME: take :- S/PP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#2=10.0(1.0),XEME#122=10.0(1.0),XTMP#13=0.0(0.1)}
[P1T2] Init XEME: bring :- S/NP/NP : (lambda $0:e (lambda $1:e (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) (actionpatient:<a,<e,t>> bring:a $1)))) -> {LEX#64=10.0(1.0),XEME#53=10.0(1.0),XTMP#123=0.0(0.1)}
[P1T2] Init XEME: go :- S/PP : (lambda $0:<a,t> (and:<t*,t> (action:<a,t> walk:a) ($0 walk:a))) -> {LEX#40=10.0(1.0),XEME#79=10.0(1.0),XTMP#81=0.0(0.1)}
[P1T2] Init XEME: give :- S/PP/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#18=10.0(1.0),XEME#187=10.0(1.0),XTMP#127=0.0(0.1)}
[P1T2] Init XEME: bring :- S/PP/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#117=10.0(1.0),XEME#91=10.0(1.0),XTMP#47=0.0(0.1)}
[P1T2] Init XEME: are :- NP\N/(NP/N) : (lambda $0:<<e,t>,e> (lambda $1:<e,t> ($0 (lambda $2:e ($1 $2))))) -> {LEX#422=10.0(1.0),XEME#75=10.0(1.0),XTMP#55=0.0(0.1)}
[P1T2] Init XEME: give :- S/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#9=10.0(1.0),XEME#94=10.0(1.0),XTMP#79=0.0(0.1)}
[P1T2] Init XEME: deliver :- S/PP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#10=10.0(1.0),XEME#29=10.0(1.0),XTMP#109=0.0(0.1)}
[P1T2] Init XEME: how many :- S/(S\NP)/N : (lambda $0:<e,t> (lambda $1:<e,t> (count:<<e,t>,i> (lambda $2:e (and:<t*,t> ($0 $2) ($1 $2)))))) -> {LEX#25=21.435469250725863(1.0),XEME#17=10.0(1.0),XTMP#62=0.0(0.1)}
[P1T2] Init XEME: 3430 :- NP : l3_430:ro -> {LEX#425=10.0(1.0),XEME#188=10.0(1.0),XTMP#19=0.0(0.1)}
[P1T2] Init XEME: carol clark :- NP : carol:pe -> {LEX#426=21.435469250725863(1.0),XEME#189=10.0(1.0),XTMP#19=0.0(0.1)}
[P1T2] Init XEME: take :- S/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#44=10.0(1.0),XEME#87=10.0(1.0),XTMP#88=0.0(0.1)}
[P1T2] Init XEME: bring :- S/PP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#34=10.0(1.0),XEME#91=10.0(1.0),XTMP#34=0.0(0.1)}
[P1T2] Init XEME: give :- S/PP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#119=10.0(1.0),XEME#125=10.0(1.0),XTMP#10=0.0(0.1)}
[P1T2] Init XEME: the :- NP/N : (lambda $0:<e,t> (the:<<e,t>,e> (lambda $1:e ($0 $1)))) -> {LEX#166=10.0(1.0),XEME#0=10.0(1.0),XTMP#74=0.0(0.1)}
[P1T2] Init XEME: bring :- S/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#60=10.0(1.0),XEME#81=10.0(1.0),XTMP#45=0.0(0.1)}
[P1T2] Init XEME: yourself :- NP : self:self -> {LEX#170=10.0(1.0),XEME#126=10.0(1.0),XTMP#19=0.0(0.1)}
[P1T2] Init XEME: how many :- S/(S/NP)/N : (lambda $0:<e,t> (lambda $1:<e,t> (count:<<e,t>,i> (lambda $2:e (and:<t*,t> ($0 $2) ($1 $2)))))) -> {LEX#227=21.435469250725863(1.0),XEME#23=10.0(1.0),XTMP#153=0.0(0.1)}
[P1T2] Init XEME: deliver :- S/PP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#10=10.0(1.0),XEME#127=10.0(1.0),XTMP#66=0.0(0.1)}
[P1T2] Init XEME: give :- S/PP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#119=10.0(1.0),XEME#94=10.0(1.0),XTMP#7=0.0(0.1)}
[P1T2] Init XEME: take :- S/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#44=10.0(1.0),XEME#128=10.0(1.0),XTMP#25=0.0(0.1)}
[P1T2] Init XEME: are :- S\NP/PP : (lambda $0:<e,t> (lambda $1:e ($0 $1))) -> {LEX#175=10.0(1.0),XEME#75=10.0(1.0),XTMP#38=0.0(0.1)}
[P1T2] Init XEME: give :- S/PP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#119=10.0(1.0),XEME#33=10.0(1.0),XTMP#110=0.0(0.1)}
[P1T2] Init XEME: take :- S/NP/NP : (lambda $0:e (lambda $1:e (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) (actionpatient:<a,<e,t>> bring:a $1)))) -> {LEX#57=10.0(1.0),XEME#41=10.0(1.0),XTMP#106=0.0(0.1)}
[P1T2] Init XEME: bring :- S/PP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#34=10.0(1.0),XEME#88=10.0(1.0),XTMP#145=0.0(0.1)}
[P1T2] Init XEME: bring :- S/PP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#34=10.0(1.0),XEME#53=10.0(1.0),XTMP#125=0.0(0.1)}
[P1T2] Init XEME: give :- S/PP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#119=10.0(1.0),XEME#40=10.0(1.0),XTMP#96=0.0(0.1)}
[P1T2] Init XEME: give :- S/PP/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#18=10.0(1.0),XEME#190=10.0(1.0),XTMP#65=0.0(0.1)}
[P1T2] Init XEME: give :- S/PP/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#18=10.0(1.0),XEME#8=10.0(1.0),XTMP#6=0.0(0.1)}
[P1T2] Init XEME: shiqi zhang :- NP : shiqi:pe -> {LEX#430=21.435469250725863(1.0),XEME#191=10.0(1.0),XTMP#19=0.0(0.1)}
[P1T2] Init XEME: take :- S/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#44=10.0(1.0),XEME#54=10.0(1.0),XTMP#79=0.0(0.1)}
[P1T2] Init XEME: take :- S/NP/NP : (lambda $0:e (lambda $1:e (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) (actionpatient:<a,<e,t>> bring:a $1)))) -> {LEX#57=10.0(1.0),XEME#2=10.0(1.0),XTMP#36=0.0(0.1)}
[P1T2] Init XEME: bring :- S/NP/NP : (lambda $0:e (lambda $1:e (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) (actionpatient:<a,<e,t>> bring:a $1)))) -> {LEX#64=10.0(1.0),XEME#78=10.0(1.0),XTMP#103=0.0(0.1)}
[P1T2] Init XEME: 3426 :- NP : l3_426:ro -> {LEX#434=10.0(1.0),XEME#192=10.0(1.0),XTMP#19=0.0(0.1)}
[P1T2] Init XEME: deliver :- S/PP/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#31=10.0(1.0),XEME#29=10.0(1.0),XTMP#118=0.0(0.1)}
[P1T2] Init XEME: deliver :- S/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#22=10.0(1.0),XEME#77=10.0(1.0),XTMP#35=0.0(0.1)}
[P1T2] Init XEME: take :- S/PP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#2=10.0(1.0),XEME#128=10.0(1.0),XTMP#10=0.0(0.1)}
[P1T2] Init XEME: deliver :- S/PP/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#31=10.0(1.0),XEME#32=10.0(1.0),XTMP#117=0.0(0.1)}
[P1T2] Init XEME: give :- S/NP/NP : (lambda $0:e (lambda $1:e (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) (actionpatient:<a,<e,t>> bring:a $1)))) -> {LEX#41=10.0(1.0),XEME#57=10.0(1.0),XTMP#36=0.0(0.1)}
[P1T2] Init XEME: deliver :- S/NP/NP : (lambda $0:e (lambda $1:e (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) (actionpatient:<a,<e,t>> bring:a $1)))) -> {LEX#83=10.0(1.0),XEME#132=10.0(1.0),XTMP#22=0.0(0.1)}
[P1T2] Init XEME: deliver :- S/NP/NP : (lambda $0:e (lambda $1:e (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) (actionpatient:<a,<e,t>> bring:a $1)))) -> {LEX#83=10.0(1.0),XEME#32=10.0(1.0),XTMP#41=0.0(0.1)}
[P1T2] Init XEME: give :- S/PP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#119=10.0(1.0),XEME#100=10.0(1.0),XTMP#84=0.0(0.1)}
[P1T2] Init XEME: take :- S/PP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#2=10.0(1.0),XEME#112=10.0(1.0),XTMP#110=0.0(0.1)}
[P1T2] Init XEME: take :- S/PP/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#66=10.0(1.0),XEME#134=10.0(1.0),XTMP#127=0.0(0.1)}
[P1T2] Init XEME: with :- NP\N/(NP/N) : (lambda $0:<<e,t>,e> (lambda $1:<e,t> ($0 (lambda $2:e ($1 $2))))) -> {LEX#443=10.0(1.0),XEME#39=10.0(1.0),XTMP#55=0.0(0.1)}
[P1T2] Init XEME: deliver :- S/PP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#10=10.0(1.0),XEME#48=10.0(1.0),XTMP#85=0.0(0.1)}
[P1T2] Init XEME: give :- S/NP/NP : (lambda $0:e (lambda $1:e (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) (actionpatient:<a,<e,t>> bring:a $1)))) -> {LEX#41=10.0(1.0),XEME#37=10.0(1.0),XTMP#128=0.0(0.1)}
[P1T2] Init XEME: give :- S/PP/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#18=10.0(1.0),XEME#33=10.0(1.0),XTMP#119=0.0(0.1)}
[P1T2] Init XEME: calendar :- NP : calendar:it -> {LEX#445=10.0(1.0),XEME#193=10.0(1.0),XTMP#19=0.0(0.1)}
[P1T2] Init XEME: take :- S/PP/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#66=10.0(1.0),XEME#50=10.0(1.0),XTMP#53=0.0(0.1)}
[P1T2] Init XEME: take :- S/PP/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#66=10.0(1.0),XEME#87=10.0(1.0),XTMP#6=0.0(0.1)}
[P1T2] Init XEME: is :- S/NP/(S/NP) : (lambda $0:<e,t> (lambda $1:e ($0 $1))) -> {LEX#446=10.0(1.0),XEME#5=10.0(1.0),XTMP#11=0.0(0.1)}
[P1T2] Init XEME: take :- S/PP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#2=10.0(1.0),XEME#135=10.0(1.0),XTMP#96=0.0(0.1)}
[P1T2] Init XEME: not :- N/N : (lambda $0:<e,t> (lambda $1:e (not:<t,t> ($0 $1)))) -> {LEX#186=10.0(1.0),XEME#7=10.0(1.0),XTMP#129=0.0(0.1)}
[P1T2] Init XEME: bring :- S/PP/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#117=10.0(1.0),XEME#73=10.0(1.0),XTMP#18=0.0(0.1)}
[P1T2] Init XEME: deliver :- S/PP/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#31=10.0(1.0),XEME#137=10.0(1.0),XTMP#126=0.0(0.1)}
[P1T2] Init XEME: bring :- S/NP/NP : (lambda $0:e (lambda $1:e (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) (actionpatient:<a,<e,t>> bring:a $1)))) -> {LEX#64=10.0(1.0),XEME#81=10.0(1.0),XTMP#27=0.0(0.1)}
[P1T2] Init XEME: which :- S/NP : (lambda $0:e $0) -> {LEX#451=10.0(1.0),XEME#117=10.0(1.0),XTMP#146=0.0(0.1)}
[P1T2] Init XEME: bring :- S/PP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#34=10.0(1.0),XEME#53=10.0(1.0),XTMP#64=0.0(0.1)}
[P1T2] Init XEME: deliver :- S/PP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#10=10.0(1.0),XEME#32=10.0(1.0),XTMP#113=0.0(0.1)}
[P1T2] Init XEME: give :- S/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#9=10.0(1.0),XEME#8=10.0(1.0),XTMP#88=0.0(0.1)}
[P1T2] Init XEME: is :- NP\N/(NP/N) : (lambda $0:<<e,t>,e> (lambda $1:<e,t> ($0 (lambda $2:e ($1 $2))))) -> {LEX#192=10.0(1.0),XEME#5=10.0(1.0),XTMP#55=0.0(0.1)}
[P1T2] Init XEME: bring :- S/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#60=10.0(1.0),XEME#31=10.0(1.0),XTMP#130=0.0(0.1)}
[P1T2] Init XEME: bring :- S/PP/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#117=10.0(1.0),XEME#88=10.0(1.0),XTMP#17=0.0(0.1)}
[P1T2] Init XEME: bring :- S/PP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#34=10.0(1.0),XEME#129=10.0(1.0),XTMP#2=0.0(0.1)}
[P1T2] Init XEME: give :- S/NP/NP : (lambda $0:e (lambda $1:e (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) (actionpatient:<a,<e,t>> bring:a $1)))) -> {LEX#41=10.0(1.0),XEME#14=10.0(1.0),XTMP#116=0.0(0.1)}
[P1T2] Init XEME: walk :- S/PP : (lambda $0:<a,t> (and:<t*,t> (action:<a,t> walk:a) ($0 walk:a))) -> {LEX#4=10.0(1.0),XEME#84=10.0(1.0),XTMP#102=0.0(0.1)}
[P1T2] Init XEME: s :- NP/N\NP : (lambda $0:e (lambda $1:<e,t> (the:<<e,t>,e> (lambda $2:e (and:<t*,t> (person:<pe,t> $0) ($1 $2) (possesses:<pe,<e,t>> $0 $2)))))) -> {LEX#73=10.0(1.0),XEME#136=10.0(1.0),XTMP#105=0.0(0.1)}
[P1T2] Init XEME: tell me :- S/S : (lambda $0:<e,t> (lambda $1:e ($0 $1))) -> {LEX#193=21.435469250725863(1.0),XEME#107=10.0(1.0),XTMP#107=0.0(0.1)}
[P1T2] Init XEME: deliver :- S/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#22=10.0(1.0),XEME#44=10.0(1.0),XTMP#79=0.0(0.1)}
[P1T2] Init XEME: deliver :- S/NP/NP : (lambda $0:e (lambda $1:e (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) (actionpatient:<a,<e,t>> bring:a $1)))) -> {LEX#83=10.0(1.0),XEME#77=10.0(1.0),XTMP#48=0.0(0.1)}
[P1T2] Init XEME: take :- S/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#44=10.0(1.0),XEME#89=10.0(1.0),XTMP#95=0.0(0.1)}
[P1T2] Init XEME: 3402 :- NP : l3_402:ro -> {LEX#457=10.0(1.0),XEME#194=10.0(1.0),XTMP#19=0.0(0.1)}
[P1T2] Init XEME: give :- S/PP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#119=10.0(1.0),XEME#37=10.0(1.0),XTMP#131=0.0(0.1)}
[P1T2] Init XEME: count :- S/(S/NP)/N : (lambda $0:<e,t> (lambda $1:<e,t> (count:<<e,t>,i> (lambda $2:e (and:<t*,t> ($0 $2) ($1 $2)))))) -> {LEX#134=10.0(1.0),XEME#65=10.0(1.0),XTMP#153=0.0(0.1)}
[P1T2] Init XEME: give :- S/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#9=10.0(1.0),XEME#26=10.0(1.0),XTMP#112=0.0(0.1)}
[P1T2] Init XEME: take :- S/NP/NP : (lambda $0:e (lambda $1:e (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) (actionpatient:<a,<e,t>> bring:a $1)))) -> {LEX#57=10.0(1.0),XEME#41=10.0(1.0),XTMP#63=0.0(0.1)}
[P1T2] Init XEME: take :- S/NP/NP : (lambda $0:e (lambda $1:e (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) (actionpatient:<a,<e,t>> bring:a $1)))) -> {LEX#57=10.0(1.0),XEME#128=10.0(1.0),XTMP#33=0.0(0.1)}
[P1T2] Init XEME: take :- S/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#44=10.0(1.0),XEME#134=10.0(1.0),XTMP#75=0.0(0.1)}
[P1T2] Init XEME: deliver :- S/NP/NP : (lambda $0:e (lambda $1:e (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) (actionpatient:<a,<e,t>> bring:a $1)))) -> {LEX#83=10.0(1.0),XEME#36=10.0(1.0),XTMP#133=0.0(0.1)}
[P1T2] Init XEME: piyush khandelwal :- NP : piyush:pe -> {LEX#201=21.435469250725863(1.0),XEME#138=10.0(1.0),XTMP#19=0.0(0.1)}
[P1T2] Init XEME: take :- S/PP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#2=10.0(1.0),XEME#112=10.0(1.0),XTMP#31=0.0(0.1)}
[P1T2] Init XEME: deliver :- S/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#22=10.0(1.0),XEME#9=10.0(1.0),XTMP#25=0.0(0.1)}
[P1T2] Init XEME: bring :- S/NP/NP : (lambda $0:e (lambda $1:e (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) (actionpatient:<a,<e,t>> bring:a $1)))) -> {LEX#64=10.0(1.0),XEME#31=10.0(1.0),XTMP#94=0.0(0.1)}
[P1T2] Init XEME: give :- S/PP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#119=10.0(1.0),XEME#57=10.0(1.0),XTMP#66=0.0(0.1)}
[P1T2] Init XEME: take :- S/NP/NP : (lambda $0:e (lambda $1:e (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) (actionpatient:<a,<e,t>> bring:a $1)))) -> {LEX#57=10.0(1.0),XEME#54=10.0(1.0),XTMP#93=0.0(0.1)}
[P1T2] Init XEME: deliver :- S/PP/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#31=10.0(1.0),XEME#32=10.0(1.0),XTMP#47=0.0(0.1)}
[P1T2] Init XEME: give :- S/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#9=10.0(1.0),XEME#59=10.0(1.0),XTMP#137=0.0(0.1)}
[P1T2] Init XEME: bring :- S/PP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#34=10.0(1.0),XEME#53=10.0(1.0),XTMP#109=0.0(0.1)}
[P1T2] Init XEME: 3416 :- NP : l3_416:ro -> {LEX#460=10.0(1.0),XEME#195=10.0(1.0),XTMP#19=0.0(0.1)}
[P1T2] Init XEME: give :- S/NP/NP : (lambda $0:e (lambda $1:e (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) (actionpatient:<a,<e,t>> bring:a $1)))) -> {LEX#41=10.0(1.0),XEME#34=10.0(1.0),XTMP#77=0.0(0.1)}
[P1T2] Init XEME: deliver :- S/NP/NP : (lambda $0:e (lambda $1:e (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) (actionpatient:<a,<e,t>> bring:a $1)))) -> {LEX#83=10.0(1.0),XEME#139=10.0(1.0),XTMP#76=0.0(0.1)}
[P1T2] Init XEME: give :- S/PP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#119=10.0(1.0),XEME#8=10.0(1.0),XTMP#145=0.0(0.1)}
[P1T2] Init XEME: walk :- S/PP : (lambda $0:<a,t> (and:<t*,t> (action:<a,t> walk:a) ($0 walk:a))) -> {LEX#4=10.0(1.0),XEME#196=10.0(1.0),XTMP#114=0.0(0.1)}
[P1T2] Init XEME: deliver :- S/PP/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#31=10.0(1.0),XEME#21=10.0(1.0),XTMP#134=0.0(0.1)}
[P1T2] Init XEME: deliver :- S/PP/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#31=10.0(1.0),XEME#147=10.0(1.0),XTMP#127=0.0(0.1)}
[P1T2] Init XEME: bring :- S/PP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#34=10.0(1.0),XEME#140=10.0(1.0),XTMP#135=0.0(0.1)}
[P1T2] Init XEME: bring :- S/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#60=10.0(1.0),XEME#78=10.0(1.0),XTMP#97=0.0(0.1)}
[P1T2] Init XEME: deliver :- S/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#22=10.0(1.0),XEME#21=10.0(1.0),XTMP#45=0.0(0.1)}
[P1T2] Init XEME: walk :- S/PP : (lambda $0:<a,t> (and:<t*,t> (action:<a,t> walk:a) ($0 walk:a))) -> {LEX#4=10.0(1.0),XEME#4=10.0(1.0),XTMP#90=0.0(0.1)}
[P1T2] Init XEME: give :- S/PP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#119=10.0(1.0),XEME#33=10.0(1.0),XTMP#80=0.0(0.1)}
[P1T2] Init XEME: deliver :- S/NP/NP : (lambda $0:e (lambda $1:e (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) (actionpatient:<a,<e,t>> bring:a $1)))) -> {LEX#83=10.0(1.0),XEME#29=10.0(1.0),XTMP#123=0.0(0.1)}
[P1T2] Init XEME: how many :- S/(S\NP)/N : (lambda $0:<e,t> (lambda $1:<e,t> (count:<<e,t>,i> (lambda $2:e (and:<t*,t> ($0 $2) ($1 $2)))))) -> {LEX#25=21.435469250725863(1.0),XEME#178=10.0(1.0),XTMP#154=0.0(0.1)}
[P1T2] Init XEME: deliver :- S/NP/NP : (lambda $0:e (lambda $1:e (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) (actionpatient:<a,<e,t>> bring:a $1)))) -> {LEX#83=10.0(1.0),XEME#32=10.0(1.0),XTMP#128=0.0(0.1)}
[P1T2] Init XEME: walk :- S/PP : (lambda $0:<a,t> (and:<t*,t> (action:<a,t> walk:a) ($0 walk:a))) -> {LEX#4=10.0(1.0),XEME#47=10.0(1.0),XTMP#81=0.0(0.1)}
[P1T2] Init XEME: deliver :- S/NP/NP : (lambda $0:e (lambda $1:e (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) (actionpatient:<a,<e,t>> bring:a $1)))) -> {LEX#83=10.0(1.0),XEME#48=10.0(1.0),XTMP#26=0.0(0.1)}
[P1T2] Init XEME: bring :- S/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#60=10.0(1.0),XEME#53=10.0(1.0),XTMP#57=0.0(0.1)}
[P1T2] Init XEME: deliver :- S/NP/NP : (lambda $0:e (lambda $1:e (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) (actionpatient:<a,<e,t>> bring:a $1)))) -> {LEX#83=10.0(1.0),XEME#43=10.0(1.0),XTMP#63=0.0(0.1)}
[P1T2] Init XEME: deliver :- S/NP/NP : (lambda $0:e (lambda $1:e (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) (actionpatient:<a,<e,t>> bring:a $1)))) -> {LEX#83=10.0(1.0),XEME#127=10.0(1.0),XTMP#36=0.0(0.1)}
[P1T2] Init XEME: take :- S/NP/NP : (lambda $0:e (lambda $1:e (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) (actionpatient:<a,<e,t>> bring:a $1)))) -> {LEX#57=10.0(1.0),XEME#142=10.0(1.0),XTMP#136=0.0(0.1)}
[P1T2] Init XEME: take :- S/NP/NP : (lambda $0:e (lambda $1:e (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) (actionpatient:<a,<e,t>> bring:a $1)))) -> {LEX#57=10.0(1.0),XEME#50=10.0(1.0),XTMP#123=0.0(0.1)}
[P1T2] Init XEME: take :- S/NP/NP : (lambda $0:e (lambda $1:e (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) (actionpatient:<a,<e,t>> bring:a $1)))) -> {LEX#57=10.0(1.0),XEME#135=10.0(1.0),XTMP#133=0.0(0.1)}
[P1T2] Init XEME: take :- S/PP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#2=10.0(1.0),XEME#93=10.0(1.0),XTMP#37=0.0(0.1)}
[P1T2] Init XEME: take :- S/PP/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#66=10.0(1.0),XEME#89=10.0(1.0),XTMP#47=0.0(0.1)}
[P1T2] Init XEME: give :- S/PP/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#18=10.0(1.0),XEME#37=10.0(1.0),XTMP#117=0.0(0.1)}
[P1T2] Init XEME: give :- S/PP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#119=10.0(1.0),XEME#14=10.0(1.0),XTMP#64=0.0(0.1)}
[P1T2] Init XEME: bring :- S/PP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#34=10.0(1.0),XEME#115=10.0(1.0),XTMP#13=0.0(0.1)}
[P1T2] Init XEME: take :- S/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#44=10.0(1.0),XEME#50=10.0(1.0),XTMP#60=0.0(0.1)}
[P1T2] Init XEME: bring :- S/PP/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#117=10.0(1.0),XEME#31=10.0(1.0),XTMP#98=0.0(0.1)}
[P1T2] Init XEME: take :- S/PP/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#66=10.0(1.0),XEME#112=10.0(1.0),XTMP#92=0.0(0.1)}
[P1T2] Init XEME: who :- N : (lambda $0:e (person:<pe,t> $0)) -> {LEX#476=10.0(1.0),XEME#167=10.0(1.0),XTMP#101=0.0(0.1)}
[P1T2] Init XEME: deliver :- S/PP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#10=10.0(1.0),XEME#77=10.0(1.0),XTMP#31=0.0(0.1)}
[P1T2] Init XEME: bring :- S/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#60=10.0(1.0),XEME#56=10.0(1.0),XTMP#46=0.0(0.1)}
[P1T2] Init XEME: how many :- S/(S/NP)/N : (lambda $0:<e,t> (lambda $1:<e,t> (count:<<e,t>,i> (lambda $2:e (and:<t*,t> ($0 $2) ($1 $2)))))) -> {LEX#227=21.435469250725863(1.0),XEME#17=10.0(1.0),XTMP#59=0.0(0.1)}
[P1T2] Init XEME: deliver :- S/NP/NP : (lambda $0:e (lambda $1:e (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) (actionpatient:<a,<e,t>> bring:a $1)))) -> {LEX#83=10.0(1.0),XEME#104=10.0(1.0),XTMP#78=0.0(0.1)}
[P1T2] Init XEME: take :- S/NP/NP : (lambda $0:e (lambda $1:e (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) (actionpatient:<a,<e,t>> bring:a $1)))) -> {LEX#57=10.0(1.0),XEME#89=10.0(1.0),XTMP#12=0.0(0.1)}
[P1T2] Init XEME: bring :- S/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#60=10.0(1.0),XEME#91=10.0(1.0),XTMP#58=0.0(0.1)}
[P1T2] Init XEME: bring :- S/NP/NP : (lambda $0:e (lambda $1:e (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) (actionpatient:<a,<e,t>> bring:a $1)))) -> {LEX#64=10.0(1.0),XEME#129=10.0(1.0),XTMP#104=0.0(0.1)}
[P1T2] Init XEME: deliver :- S/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#22=10.0(1.0),XEME#104=10.0(1.0),XTMP#88=0.0(0.1)}
[P1T2] Init XEME: give :- S/PP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#119=10.0(1.0),XEME#37=10.0(1.0),XTMP#113=0.0(0.1)}
[P1T2] Init XEME: deliver :- S/PP/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#31=10.0(1.0),XEME#9=10.0(1.0),XTMP#108=0.0(0.1)}
[P1T2] Init XEME: give :- S/NP/NP : (lambda $0:e (lambda $1:e (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) (actionpatient:<a,<e,t>> bring:a $1)))) -> {LEX#41=10.0(1.0),XEME#14=10.0(1.0),XTMP#72=0.0(0.1)}
[P1T2] Init XEME: go :- S/PP : (lambda $0:<a,t> (and:<t*,t> (action:<a,t> walk:a) ($0 walk:a))) -> {LEX#40=10.0(1.0),XEME#22=10.0(1.0),XTMP#138=0.0(0.1)}
[P1T2] Init XEME: bring :- S/PP/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#117=10.0(1.0),XEME#53=10.0(1.0),XTMP#28=0.0(0.1)}
[P1T2] Init XEME: deliver :- S/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#22=10.0(1.0),XEME#104=10.0(1.0),XTMP#9=0.0(0.1)}
[P1T2] Init XEME: deliver :- S/PP/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#31=10.0(1.0),XEME#29=10.0(1.0),XTMP#53=0.0(0.1)}
[P1T2] Init XEME: bring :- S/NP/NP : (lambda $0:e (lambda $1:e (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) (actionpatient:<a,<e,t>> bring:a $1)))) -> {LEX#64=10.0(1.0),XEME#113=10.0(1.0),XTMP#89=0.0(0.1)}
[P1T2] Init XEME: take :- S/NP/NP : (lambda $0:e (lambda $1:e (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) (actionpatient:<a,<e,t>> bring:a $1)))) -> {LEX#57=10.0(1.0),XEME#89=10.0(1.0),XTMP#41=0.0(0.1)}
[P1T2] Init XEME: of :- NP\N/NP : (lambda $0:e (lambda $1:<e,t> (the:<<e,t>,e> (lambda $2:e (and:<t*,t> (person:<pe,t> $0) ($1 $2) (possesses:<pe,<e,t>> $0 $2)))))) -> {LEX#33=10.0(1.0),XEME#144=10.0(1.0),XTMP#139=0.0(0.1)}
[P1T2] Init XEME: deliver :- S/NP/NP : (lambda $0:e (lambda $1:e (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) (actionpatient:<a,<e,t>> bring:a $1)))) -> {LEX#83=10.0(1.0),XEME#86=10.0(1.0),XTMP#136=0.0(0.1)}
[P1T2] Init XEME: counter :- NP : coffeecounter:sc -> {LEX#491=10.0(1.0),XEME#197=10.0(1.0),XTMP#19=0.0(0.1)}
[P1T2] Init XEME: take :- S/NP/NP : (lambda $0:e (lambda $1:e (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) (actionpatient:<a,<e,t>> bring:a $1)))) -> {LEX#57=10.0(1.0),XEME#198=10.0(1.0),XTMP#76=0.0(0.1)}
[P1T2] Init XEME: walk :- S/PP : (lambda $0:<a,t> (and:<t*,t> (action:<a,t> walk:a) ($0 walk:a))) -> {LEX#4=10.0(1.0),XEME#42=10.0(1.0),XTMP#124=0.0(0.1)}
[P1T2] Init XEME: take :- S/PP/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#66=10.0(1.0),XEME#54=10.0(1.0),XTMP#18=0.0(0.1)}
[P1T2] Init XEME: bring :- S/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#60=10.0(1.0),XEME#199=10.0(1.0),XTMP#21=0.0(0.1)}
[P1T2] Init XEME: give :- S/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#9=10.0(1.0),XEME#33=10.0(1.0),XTMP#130=0.0(0.1)}
[P1T2] Init XEME: give :- S/PP/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#18=10.0(1.0),XEME#37=10.0(1.0),XTMP#91=0.0(0.1)}
[P1T2] Init XEME: give :- S/PP/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#18=10.0(1.0),XEME#59=10.0(1.0),XTMP#132=0.0(0.1)}
[P1T2] Init XEME: bring :- S/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#60=10.0(1.0),XEME#91=10.0(1.0),XTMP#141=0.0(0.1)}
[P1T2] Init XEME: give :- S/NP/NP : (lambda $0:e (lambda $1:e (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) (actionpatient:<a,<e,t>> bring:a $1)))) -> {LEX#41=10.0(1.0),XEME#26=10.0(1.0),XTMP#1=0.0(0.1)}
[P1T2] Init XEME: bring :- S/PP/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#117=10.0(1.0),XEME#78=10.0(1.0),XTMP#87=0.0(0.1)}
[P1T2] Init XEME: take :- S/NP/NP : (lambda $0:e (lambda $1:e (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) (actionpatient:<a,<e,t>> bring:a $1)))) -> {LEX#57=10.0(1.0),XEME#1=10.0(1.0),XTMP#26=0.0(0.1)}
[P1T2] Init XEME: deliver :- S/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#22=10.0(1.0),XEME#32=10.0(1.0),XTMP#95=0.0(0.1)}
[P1T2] Init XEME: that :- PP/(S/NP) : (lambda $0:<e,t> (lambda $1:e ($0 $1))) -> {LEX#245=10.0(1.0),XEME#114=10.0(1.0),XTMP#3=0.0(0.1)}
[P1T2] Init XEME: take :- S/PP/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#66=10.0(1.0),XEME#12=10.0(1.0),XTMP#126=0.0(0.1)}
[P1T2] Init XEME: deliver :- S/NP/NP : (lambda $0:e (lambda $1:e (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) (actionpatient:<a,<e,t>> bring:a $1)))) -> {LEX#83=10.0(1.0),XEME#44=10.0(1.0),XTMP#93=0.0(0.1)}
[P1T2] Init XEME: deliver :- S/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#22=10.0(1.0),XEME#147=10.0(1.0),XTMP#75=0.0(0.1)}
[P1T2] Init XEME: deliver :- S/NP/NP : (lambda $0:e (lambda $1:e (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) (actionpatient:<a,<e,t>> bring:a $1)))) -> {LEX#83=10.0(1.0),XEME#9=10.0(1.0),XTMP#33=0.0(0.1)}
[P1T2] Init XEME: take :- S/NP/NP : (lambda $0:e (lambda $1:e (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) (actionpatient:<a,<e,t>> bring:a $1)))) -> {LEX#57=10.0(1.0),XEME#112=10.0(1.0),XTMP#48=0.0(0.1)}
[P1T2] Init XEME: bring :- S/NP/NP : (lambda $0:e (lambda $1:e (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) (actionpatient:<a,<e,t>> bring:a $1)))) -> {LEX#64=10.0(1.0),XEME#92=10.0(1.0),XTMP#44=0.0(0.1)}
[P1T2] Init XEME: bring :- S/NP/NP : (lambda $0:e (lambda $1:e (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) (actionpatient:<a,<e,t>> bring:a $1)))) -> {LEX#64=10.0(1.0),XEME#148=10.0(1.0),XTMP#42=0.0(0.1)}
[P1T2] Init XEME: bring :- S/NP/NP : (lambda $0:e (lambda $1:e (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) (actionpatient:<a,<e,t>> bring:a $1)))) -> {LEX#64=10.0(1.0),XEME#31=10.0(1.0),XTMP#23=0.0(0.1)}
[P1T2] Init XEME: is :- NP/NP : (lambda $0:e $0) -> {LEX#505=10.0(1.0),XEME#5=10.0(1.0),XTMP#51=0.0(0.1)}
[P1T2] Init XEME: 3422 :- NP : l3_422:ro -> {LEX#248=10.0(1.0),XEME#149=10.0(1.0),XTMP#19=0.0(0.1)}
[P1T2] Init XEME: deliver :- S/NP/NP : (lambda $0:e (lambda $1:e (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) (actionpatient:<a,<e,t>> bring:a $1)))) -> {LEX#83=10.0(1.0),XEME#36=10.0(1.0),XTMP#44=0.0(0.1)}
[P1T2] Init XEME: the :- NP/NP : (lambda $0:e $0) -> {LEX#249=10.0(1.0),XEME#0=10.0(1.0),XTMP#51=0.0(0.1)}
[P1T2] Init XEME: take :- S/PP/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#66=10.0(1.0),XEME#87=10.0(1.0),XTMP#17=0.0(0.1)}
[P1T2] Init XEME: s :- NP/N\NP : (lambda $0:e (lambda $1:<e,t> (the:<<e,t>,e> (lambda $2:e (and:<t*,t> (person:<pe,t> $0) ($1 $2) (possesses:<pe,<e,t>> $0 $2)))))) -> {LEX#73=10.0(1.0),XEME#200=10.0(1.0),XTMP#140=0.0(0.1)}
[P1T2] Init XEME: take :- S/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#44=10.0(1.0),XEME#105=10.0(1.0),XTMP#45=0.0(0.1)}
[P1T2] Init XEME: of :- N/N : (lambda $0:<e,t> (lambda $1:e ($0 $1))) -> {LEX#508=10.0(1.0),XEME#45=10.0(1.0),XTMP#29=0.0(0.1)}
[P1T2] Init XEME: deliver :- S/NP/NP : (lambda $0:e (lambda $1:e (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) (actionpatient:<a,<e,t>> bring:a $1)))) -> {LEX#83=10.0(1.0),XEME#151=10.0(1.0),XTMP#42=0.0(0.1)}
[P1T2] Init XEME: deliver :- S/PP/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#31=10.0(1.0),XEME#104=10.0(1.0),XTMP#14=0.0(0.1)}
[P1T2] Init XEME: give :- S/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#9=10.0(1.0),XEME#8=10.0(1.0),XTMP#142=0.0(0.1)}
[P1T2] Init XEME: give :- S/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#9=10.0(1.0),XEME#14=10.0(1.0),XTMP#60=0.0(0.1)}
[P1T2] Init XEME: take :- S/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#44=10.0(1.0),XEME#112=10.0(1.0),XTMP#130=0.0(0.1)}
[P1T2] Init XEME: bring :- S/PP/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#117=10.0(1.0),XEME#88=10.0(1.0),XTMP#14=0.0(0.1)}
[P1T2] Init XEME: take :- S/NP/NP : (lambda $0:e (lambda $1:e (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) (actionpatient:<a,<e,t>> bring:a $1)))) -> {LEX#57=10.0(1.0),XEME#105=10.0(1.0),XTMP#27=0.0(0.1)}
[P1T2] Init XEME: give :- S/PP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#119=10.0(1.0),XEME#124=10.0(1.0),XTMP#37=0.0(0.1)}
[P1T2] Init XEME: objects :- N : (lambda $0:e (object:<ob,t> $0)) -> {LEX#255=10.0(1.0),XEME#152=10.0(1.0),XTMP#101=0.0(0.1)}
[P1T2] Init XEME: deliver :- S/NP/NP : (lambda $0:e (lambda $1:e (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) (actionpatient:<a,<e,t>> bring:a $1)))) -> {LEX#83=10.0(1.0),XEME#77=10.0(1.0),XTMP#23=0.0(0.1)}
[P1T2] Init XEME: bring :- S/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#60=10.0(1.0),XEME#31=10.0(1.0),XTMP#32=0.0(0.1)}
[P1T2] Init XEME: deliver :- S/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#22=10.0(1.0),XEME#77=10.0(1.0),XTMP#32=0.0(0.1)}
[P1T2] Init XEME: give :- S/PP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#119=10.0(1.0),XEME#37=10.0(1.0),XTMP#34=0.0(0.1)}
[P1T2] Init XEME: excluding :- PP/NP : (lambda $0:e (lambda $1:e (not:<t,t> (equals:<e,<e,t>> $1 $0)))) -> {LEX#123=10.0(1.0),XEME#141=10.0(1.0),XTMP#8=0.0(0.1)}
[P1T2] Init XEME: take :- S/PP/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#66=10.0(1.0),XEME#12=10.0(1.0),XTMP#132=0.0(0.1)}
[P1T2] Init XEME: people :- N : (lambda $0:e (person:<pe,t> $0)) -> {LEX#518=10.0(1.0),XEME#123=10.0(1.0),XTMP#101=0.0(0.1)}
[P1T2] Init XEME: 3414b :- NP : l3_414b:ro -> {LEX#519=10.0(1.0),XEME#201=10.0(1.0),XTMP#19=0.0(0.1)}
[P1T2] Init XEME: that :- PP/(S\NP) : (lambda $0:<e,t> (lambda $1:e ($0 $1))) -> {LEX#520=10.0(1.0),XEME#114=10.0(1.0),XTMP#61=0.0(0.1)}
[P1T2] Init XEME: which :- PP/(S/NP) : (lambda $0:<e,t> (lambda $1:e ($0 $1))) -> {LEX#521=10.0(1.0),XEME#117=10.0(1.0),XTMP#3=0.0(0.1)}
[P1T2] Init XEME: bring :- S/PP/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#117=10.0(1.0),XEME#56=10.0(1.0),XTMP#56=0.0(0.1)}
[P1T2] Init XEME: bring :- S/PP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#34=10.0(1.0),XEME#106=10.0(1.0),XTMP#10=0.0(0.1)}
[P1T2] Init XEME: take :- S/PP/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#66=10.0(1.0),XEME#50=10.0(1.0),XTMP#118=0.0(0.1)}
[P1T2] Init XEME: deliver :- S/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#22=10.0(1.0),XEME#29=10.0(1.0),XTMP#143=0.0(0.1)}
[P1T2] Init XEME: office :- N : (lambda $0:e (office:<of,t> $0)) -> {LEX#522=10.0(1.0),XEME#202=10.0(1.0),XTMP#101=0.0(0.1)}
[P1T2] Init XEME: give :- S/NP/NP : (lambda $0:e (lambda $1:e (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) (actionpatient:<a,<e,t>> bring:a $1)))) -> {LEX#41=10.0(1.0),XEME#37=10.0(1.0),XTMP#12=0.0(0.1)}
[P1T2] Init XEME: deliver :- S/NP/NP : (lambda $0:e (lambda $1:e (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) (actionpatient:<a,<e,t>> bring:a $1)))) -> {LEX#83=10.0(1.0),XEME#127=10.0(1.0),XTMP#104=0.0(0.1)}
[P1T2] Init XEME: give :- S/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#9=10.0(1.0),XEME#124=10.0(1.0),XTMP#97=0.0(0.1)}
[P1T2] Init XEME: bring :- S/NP/NP : (lambda $0:e (lambda $1:e (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) (actionpatient:<a,<e,t>> bring:a $1)))) -> {LEX#64=10.0(1.0),XEME#129=10.0(1.0),XTMP#36=0.0(0.1)}
[P1T2] Init XEME: i :- NP : me:pe -> {LEX#263=10.0(1.0),XEME#154=10.0(1.0),XTMP#19=0.0(0.1)}
[P1T2] Init XEME: walk :- S/PP : (lambda $0:<a,t> (and:<t*,t> (action:<a,t> walk:a) ($0 walk:a))) -> {LEX#4=10.0(1.0),XEME#90=10.0(1.0),XTMP#39=0.0(0.1)}
[P1T2] Init XEME: to :- PP/NP : (lambda $0:e (lambda $1:a (actionrecipient:<a,<e,t>> $1 $0))) -> {LEX#266=10.0(1.0),XEME#97=10.0(1.0),XTMP#122=0.0(0.1)}
[P1T2] Init XEME: give :- S/NP/NP : (lambda $0:e (lambda $1:e (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) (actionpatient:<a,<e,t>> bring:a $1)))) -> {LEX#41=10.0(1.0),XEME#82=10.0(1.0),XTMP#27=0.0(0.1)}
[P1T2] Init XEME: bring :- S/NP/NP : (lambda $0:e (lambda $1:e (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) (actionpatient:<a,<e,t>> bring:a $1)))) -> {LEX#64=10.0(1.0),XEME#146=10.0(1.0),XTMP#26=0.0(0.1)}
[P1T2] Init XEME: please :- S/S : (lambda $0:<e,t> (lambda $1:e ($0 $1))) -> {LEX#267=10.0(1.0),XEME#25=10.0(1.0),XTMP#107=0.0(0.1)}
[P1T2] Init XEME: go :- S/PP : (lambda $0:<a,t> (and:<t*,t> (action:<a,t> walk:a) ($0 walk:a))) -> {LEX#40=10.0(1.0),XEME#69=10.0(1.0),XTMP#82=0.0(0.1)}
[P1T2] Init XEME: deliver :- S/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#22=10.0(1.0),XEME#77=10.0(1.0),XTMP#130=0.0(0.1)}
[P1T2] Init XEME: take :- S/PP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#2=10.0(1.0),XEME#87=10.0(1.0),XTMP#145=0.0(0.1)}
[P1T2] Init XEME: deliver :- S/PP/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#31=10.0(1.0),XEME#77=10.0(1.0),XTMP#98=0.0(0.1)}
[P1T2] Init XEME: me :- NP : me:pe -> {LEX#268=10.0(1.0),XEME#155=10.0(1.0),XTMP#19=0.0(0.1)}
[P1T2] Init XEME: walk :- S/PP : (lambda $0:<a,t> (and:<t*,t> (action:<a,t> walk:a) ($0 walk:a))) -> {LEX#4=10.0(1.0),XEME#52=10.0(1.0),XTMP#43=0.0(0.1)}
[P1T2] Init XEME: deliver :- S/PP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#10=10.0(1.0),XEME#29=10.0(1.0),XTMP#125=0.0(0.1)}
[P1T2] Init XEME: 3512 :- NP : l3_512:ro -> {LEX#527=10.0(1.0),XEME#203=10.0(1.0),XTMP#19=0.0(0.1)}
[P1T2] Init XEME: deliver :- S/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#22=10.0(1.0),XEME#137=10.0(1.0),XTMP#83=0.0(0.1)}
[P1T2] Init XEME: bring :- S/PP/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#117=10.0(1.0),XEME#81=10.0(1.0),XTMP#134=0.0(0.1)}
[P1T2] Init XEME: take :- S/PP/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#66=10.0(1.0),XEME#51=10.0(1.0),XTMP#54=0.0(0.1)}
[P1T2] Init XEME: deliver :- S/NP/NP : (lambda $0:e (lambda $1:e (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) (actionpatient:<a,<e,t>> bring:a $1)))) -> {LEX#83=10.0(1.0),XEME#85=10.0(1.0),XTMP#103=0.0(0.1)}
[P1T2] Init XEME: take :- S/NP/NP : (lambda $0:e (lambda $1:e (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) (actionpatient:<a,<e,t>> bring:a $1)))) -> {LEX#57=10.0(1.0),XEME#50=10.0(1.0),XTMP#72=0.0(0.1)}
[P1T2] Init XEME: deliver :- S/PP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#10=10.0(1.0),XEME#133=10.0(1.0),XTMP#13=0.0(0.1)}
[P1T2] Init XEME: bring :- S/PP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#34=10.0(1.0),XEME#129=10.0(1.0),XTMP#66=0.0(0.1)}
[P1T2] Init XEME: give :- S/NP/NP : (lambda $0:e (lambda $1:e (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) (actionpatient:<a,<e,t>> bring:a $1)))) -> {LEX#41=10.0(1.0),XEME#33=10.0(1.0),XTMP#94=0.0(0.1)}
[P1T2] Init XEME: bring :- S/NP/NP : (lambda $0:e (lambda $1:e (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) (actionpatient:<a,<e,t>> bring:a $1)))) -> {LEX#64=10.0(1.0),XEME#56=10.0(1.0),XTMP#77=0.0(0.1)}
[P1T2] Init XEME: give :- S/PP/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#18=10.0(1.0),XEME#33=10.0(1.0),XTMP#92=0.0(0.1)}
[P1T2] Init XEME: give :- S/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#9=10.0(1.0),XEME#187=10.0(1.0),XTMP#75=0.0(0.1)}
[P1T2] Init XEME: which :- PP/(S\NP) : (lambda $0:<e,t> (lambda $1:e ($0 $1))) -> {LEX#536=10.0(1.0),XEME#117=10.0(1.0),XTMP#61=0.0(0.1)}
[P1T2] Init XEME: go :- S/PP : (lambda $0:<a,t> (and:<t*,t> (action:<a,t> walk:a) ($0 walk:a))) -> {LEX#40=10.0(1.0),XEME#13=10.0(1.0),XTMP#90=0.0(0.1)}
[P1T2] Init XEME: bring :- S/PP/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#117=10.0(1.0),XEME#91=10.0(1.0),XTMP#117=0.0(0.1)}
[P1T2] Init XEME: bring :- S/NP/NP : (lambda $0:e (lambda $1:e (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) (actionpatient:<a,<e,t>> bring:a $1)))) -> {LEX#64=10.0(1.0),XEME#91=10.0(1.0),XTMP#41=0.0(0.1)}
[P1T2] Init XEME: deliver :- S/PP/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#31=10.0(1.0),XEME#130=10.0(1.0),XTMP#54=0.0(0.1)}
[P1T2] Init XEME: count :- S/(S\NP)/N : (lambda $0:<e,t> (lambda $1:<e,t> (count:<<e,t>,i> (lambda $2:e (and:<t*,t> ($0 $2) ($1 $2)))))) -> {LEX#75=10.0(1.0),XEME#204=10.0(1.0),XTMP#154=0.0(0.1)}
[P1T2] Init XEME: give :- S/PP/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#18=10.0(1.0),XEME#124=10.0(1.0),XTMP#87=0.0(0.1)}
[P1T2] Init XEME: bring :- S/PP/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#117=10.0(1.0),XEME#199=10.0(1.0),XTMP#65=0.0(0.1)}
[P1T2] Init XEME: give :- S/PP/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#18=10.0(1.0),XEME#34=10.0(1.0),XTMP#56=0.0(0.1)}
[P1T2] Init XEME: 3508 :- NP : l3_508:ro -> {LEX#284=10.0(1.0),XEME#157=10.0(1.0),XTMP#19=0.0(0.1)}
[P1T2] Init XEME: trashcan :- NP : trashcan:it -> {LEX#540=10.0(1.0),XEME#205=10.0(1.0),XTMP#19=0.0(0.1)}
[P1T2] Init XEME: bring :- S/PP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#34=10.0(1.0),XEME#91=10.0(1.0),XTMP#131=0.0(0.1)}
[P1T2] Init XEME: take :- S/PP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#2=10.0(1.0),XEME#50=10.0(1.0),XTMP#125=0.0(0.1)}
[P1T2] Init XEME: deliver :- S/PP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#10=10.0(1.0),XEME#206=10.0(1.0),XTMP#135=0.0(0.1)}
[P1T2] Init XEME: deliver :- S/NP/NP : (lambda $0:e (lambda $1:e (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) (actionpatient:<a,<e,t>> bring:a $1)))) -> {LEX#83=10.0(1.0),XEME#158=10.0(1.0),XTMP#89=0.0(0.1)}
[P1T2] Init XEME: take :- S/NP/NP : (lambda $0:e (lambda $1:e (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) (actionpatient:<a,<e,t>> bring:a $1)))) -> {LEX#57=10.0(1.0),XEME#41=10.0(1.0),XTMP#77=0.0(0.1)}
[P1T2] Init XEME: give :- S/PP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#119=10.0(1.0),XEME#57=10.0(1.0),XTMP#2=0.0(0.1)}
[P1T2] Init XEME: take :- S/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#44=10.0(1.0),XEME#87=10.0(1.0),XTMP#142=0.0(0.1)}
[P1T2] Init XEME: deliver :- S/PP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#10=10.0(1.0),XEME#85=10.0(1.0),XTMP#37=0.0(0.1)}
[P1T2] Init XEME: how many :- S/NP : (lambda $0:e $0) -> {LEX#545=21.435469250725863(1.0),XEME#3=10.0(1.0),XTMP#146=0.0(0.1)}
[P1T2] Init XEME: do not :- S\NP/(S\NP) : (lambda $0:<e,t> (lambda $1:e (not:<t,t> ($0 $1)))) -> {LEX#546=21.435469250725863(1.0),XEME#131=10.0(1.0),XTMP#150=0.0(0.1)}
[P1T2] Init XEME: take :- S/PP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#2=10.0(1.0),XEME#89=10.0(1.0),XTMP#131=0.0(0.1)}
[P1T2] Init XEME: 3414 :- NP : l3_414:ro -> {LEX#548=10.0(1.0),XEME#207=10.0(1.0),XTMP#19=0.0(0.1)}
[P1T2] Init XEME: take :- S/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#44=10.0(1.0),XEME#50=10.0(1.0),XTMP#143=0.0(0.1)}
[P1T2] Init XEME: object :- N : (lambda $0:e (object:<ob,t> $0)) -> {LEX#550=10.0(1.0),XEME#208=10.0(1.0),XTMP#101=0.0(0.1)}
[P1T2] Init XEME: deliver :- S/NP/NP : (lambda $0:e (lambda $1:e (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) (actionpatient:<a,<e,t>> bring:a $1)))) -> {LEX#83=10.0(1.0),XEME#133=10.0(1.0),XTMP#67=0.0(0.1)}
[P1T2] Init XEME: bring :- S/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#60=10.0(1.0),XEME#88=10.0(1.0),XTMP#88=0.0(0.1)}
[P1T2] Init XEME: deliver :- S/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#22=10.0(1.0),XEME#43=10.0(1.0),XTMP#46=0.0(0.1)}
[P1T2] Init XEME: bring :- S/PP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#34=10.0(1.0),XEME#28=10.0(1.0),XTMP#84=0.0(0.1)}
[P1T2] Init XEME: take :- S/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#44=10.0(1.0),XEME#12=10.0(1.0),XTMP#137=0.0(0.1)}
[P1T2] Init XEME: bring :- S/NP/NP : (lambda $0:e (lambda $1:e (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) (actionpatient:<a,<e,t>> bring:a $1)))) -> {LEX#64=10.0(1.0),XEME#91=10.0(1.0),XTMP#128=0.0(0.1)}
[P1T2] Init XEME: is :- N/N : (lambda $0:<e,t> (lambda $1:e ($0 $1))) -> {LEX#555=10.0(1.0),XEME#5=10.0(1.0),XTMP#29=0.0(0.1)}
[P1T2] Init XEME: bring :- S/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#60=10.0(1.0),XEME#88=10.0(1.0),XTMP#142=0.0(0.1)}
[P1T2] Init XEME: bring :- S/PP/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#117=10.0(1.0),XEME#31=10.0(1.0),XTMP#119=0.0(0.1)}
[P1T2] Init XEME: take :- S/PP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#2=10.0(1.0),XEME#135=10.0(1.0),XTMP#40=0.0(0.1)}
[P1T2] Init XEME: take :- S/NP/NP : (lambda $0:e (lambda $1:e (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) (actionpatient:<a,<e,t>> bring:a $1)))) -> {LEX#57=10.0(1.0),XEME#2=10.0(1.0),XTMP#104=0.0(0.1)}
[P1T2] Init XEME: deliver :- S/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#22=10.0(1.0),XEME#85=10.0(1.0),XTMP#97=0.0(0.1)}
[P1T2] Init XEME: take :- S/PP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#2=10.0(1.0),XEME#159=10.0(1.0),XTMP#135=0.0(0.1)}
[P1T2] Init XEME: bring :- S/PP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#34=10.0(1.0),XEME#146=10.0(1.0),XTMP#85=0.0(0.1)}
[P1T2] Init XEME: give :- S/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#9=10.0(1.0),XEME#14=10.0(1.0),XTMP#143=0.0(0.1)}
[P1T2] Init XEME: deliver :- S/NP/NP : (lambda $0:e (lambda $1:e (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) (actionpatient:<a,<e,t>> bring:a $1)))) -> {LEX#83=10.0(1.0),XEME#32=10.0(1.0),XTMP#12=0.0(0.1)}
[P1T2] Init XEME: give :- S/NP/NP : (lambda $0:e (lambda $1:e (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) (actionpatient:<a,<e,t>> bring:a $1)))) -> {LEX#41=10.0(1.0),XEME#57=10.0(1.0),XTMP#104=0.0(0.1)}
[P1T2] Init XEME: bring :- S/PP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#34=10.0(1.0),XEME#73=10.0(1.0),XTMP#7=0.0(0.1)}
[P1T2] Init XEME: take :- S/PP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#2=10.0(1.0),XEME#120=10.0(1.0),XTMP#115=0.0(0.1)}
[P1T2] Init XEME: deliver :- S/NP/NP : (lambda $0:e (lambda $1:e (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) (actionpatient:<a,<e,t>> bring:a $1)))) -> {LEX#83=10.0(1.0),XEME#21=10.0(1.0),XTMP#27=0.0(0.1)}
[P1T2] Init XEME: what :- S/(S/NP)/N : (lambda $0:<e,t> (lambda $1:<e,t> (lambda $2:e (and:<t*,t> ($0 $2) ($1 $2))))) -> {LEX#562=10.0(1.0),XEME#150=10.0(1.0),XTMP#71=0.0(0.1)}
[P1T2] Init XEME: are :- N\N/N : (lambda $0:<e,t> (lambda $1:<e,t> (lambda $2:e (and:<t*,t> ($0 $2) ($1 $2))))) -> {LEX#567=10.0(1.0),XEME#143=10.0(1.0),XTMP#69=0.0(0.1)}
[P1T2] Init XEME: deliver :- S/PP/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#31=10.0(1.0),XEME#104=10.0(1.0),XTMP#17=0.0(0.1)}
[P1T2] Init XEME: take :- S/PP/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#66=10.0(1.0),XEME#105=10.0(1.0),XTMP#134=0.0(0.1)}
[P1T2] Init XEME: bring :- S/PP/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#117=10.0(1.0),XEME#80=10.0(1.0),XTMP#132=0.0(0.1)}
[P1T2] Init XEME: deliver :- S/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#22=10.0(1.0),XEME#137=10.0(1.0),XTMP#137=0.0(0.1)}
[P1T2] Init XEME: give :- S/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#9=10.0(1.0),XEME#59=10.0(1.0),XTMP#83=0.0(0.1)}
[P1T2] Init XEME: deliver :- S/PP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#10=10.0(1.0),XEME#104=10.0(1.0),XTMP#145=0.0(0.1)}
[P1T2] Init XEME: give :- S/NP/NP : (lambda $0:e (lambda $1:e (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) (actionpatient:<a,<e,t>> bring:a $1)))) -> {LEX#41=10.0(1.0),XEME#14=10.0(1.0),XTMP#123=0.0(0.1)}
[P1T2] Init XEME: bring :- S/NP/NP : (lambda $0:e (lambda $1:e (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) (actionpatient:<a,<e,t>> bring:a $1)))) -> {LEX#64=10.0(1.0),XEME#28=10.0(1.0),XTMP#22=0.0(0.1)}
[P1T2] Init XEME: s :- NP/N\NP : (lambda $0:e (lambda $1:<e,t> (the:<<e,t>,e> (lambda $2:e (and:<t*,t> (person:<pe,t> $0) ($1 $2) (possesses:<pe,<e,t>> $0 $2)))))) -> {LEX#73=10.0(1.0),XEME#209=10.0(1.0),XTMP#148=0.0(0.1)}
[P1T2] Init XEME: give :- S/PP/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#18=10.0(1.0),XEME#14=10.0(1.0),XTMP#28=0.0(0.1)}
[P1T2] Init XEME: bring :- S/NP/NP : (lambda $0:e (lambda $1:e (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) (actionpatient:<a,<e,t>> bring:a $1)))) -> {LEX#64=10.0(1.0),XEME#31=10.0(1.0),XTMP#48=0.0(0.1)}
[P1T2] Init XEME: give :- S/PP/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#18=10.0(1.0),XEME#37=10.0(1.0),XTMP#47=0.0(0.1)}
[P1T2] Init XEME: take :- S/PP/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#66=10.0(1.0),XEME#128=10.0(1.0),XTMP#108=0.0(0.1)}
[P1T2] Init XEME: give :- S/PP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#119=10.0(1.0),XEME#14=10.0(1.0),XTMP#125=0.0(0.1)}
[P1T2] Init XEME: give :- S/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#9=10.0(1.0),XEME#190=10.0(1.0),XTMP#21=0.0(0.1)}
[P1T2] Init XEME: walk :- S/PP : (lambda $0:<a,t> (and:<t*,t> (action:<a,t> walk:a) ($0 walk:a))) -> {LEX#4=10.0(1.0),XEME#47=10.0(1.0),XTMP#15=0.0(0.1)}
[P1T2] Init XEME: take :- S/NP/NP : (lambda $0:e (lambda $1:e (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) (actionpatient:<a,<e,t>> bring:a $1)))) -> {LEX#57=10.0(1.0),XEME#87=10.0(1.0),XTMP#78=0.0(0.1)}
[P1T2] Init XEME: give :- S/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#9=10.0(1.0),XEME#37=10.0(1.0),XTMP#141=0.0(0.1)}
[P1T2] Init XEME: count :- S/(S/NP)/N : (lambda $0:<e,t> (lambda $1:<e,t> (count:<<e,t>,i> (lambda $2:e (and:<t*,t> ($0 $2) ($1 $2)))))) -> {LEX#134=10.0(1.0),XEME#204=10.0(1.0),XTMP#151=0.0(0.1)}
[P1T2] Init XEME: ellen edwards :- NP : ellen:pe -> {LEX#307=21.435469250725863(1.0),XEME#160=10.0(1.0),XTMP#19=0.0(0.1)}
[P1T2] Init XEME: take :- S/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#44=10.0(1.0),XEME#58=10.0(1.0),XTMP#21=0.0(0.1)}
[P1T2] Init XEME: bring :- S/NP/NP : (lambda $0:e (lambda $1:e (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) (actionpatient:<a,<e,t>> bring:a $1)))) -> {LEX#64=10.0(1.0),XEME#210=10.0(1.0),XTMP#76=0.0(0.1)}
[P1T2] Init XEME: dana ballard :- NP : dana:pe -> {LEX#309=21.435469250725863(1.0),XEME#161=10.0(1.0),XTMP#19=0.0(0.1)}
[P1T2] Init XEME: give :- S/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#9=10.0(1.0),XEME#37=10.0(1.0),XTMP#58=0.0(0.1)}
[P1T2] Init XEME: take :- S/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#44=10.0(1.0),XEME#12=10.0(1.0),XTMP#83=0.0(0.1)}
[P1T2] Init XEME: go :- S/PP : (lambda $0:<a,t> (and:<t*,t> (action:<a,t> walk:a) ($0 walk:a))) -> {LEX#40=10.0(1.0),XEME#11=10.0(1.0),XTMP#124=0.0(0.1)}
[P1T2] Init XEME: give :- S/PP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#119=10.0(1.0),XEME#40=10.0(1.0),XTMP#40=0.0(0.1)}
[P1T2] Init XEME: deliver :- S/PP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#10=10.0(1.0),XEME#127=10.0(1.0),XTMP#2=0.0(0.1)}
[P1T2] Init XEME: take :- S/PP/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#66=10.0(1.0),XEME#50=10.0(1.0),XTMP#28=0.0(0.1)}
[P1T2] Init XEME: take :- S/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#44=10.0(1.0),XEME#89=10.0(1.0),XTMP#141=0.0(0.1)}
[P1T2] Init XEME: give :- S/PP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#119=10.0(1.0),XEME#145=10.0(1.0),XTMP#115=0.0(0.1)}
[P1T2] Init XEME: take :- S/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#44=10.0(1.0),XEME#112=10.0(1.0),XTMP#32=0.0(0.1)}
[P1T2] Init XEME: deliver :- S/PP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#10=10.0(1.0),XEME#29=10.0(1.0),XTMP#64=0.0(0.1)}
[P1T2] Init XEME: give :- S/NP/NP : (lambda $0:e (lambda $1:e (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) (actionpatient:<a,<e,t>> bring:a $1)))) -> {LEX#41=10.0(1.0),XEME#34=10.0(1.0),XTMP#63=0.0(0.1)}
[P1T2] Init XEME: bring :- S/PP/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#117=10.0(1.0),XEME#80=10.0(1.0),XTMP#126=0.0(0.1)}
[P1T2] Init XEME: bring :- S/PP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#34=10.0(1.0),XEME#91=10.0(1.0),XTMP#113=0.0(0.1)}
[P1T2] Init XEME: give :- S/PP/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#18=10.0(1.0),XEME#26=10.0(1.0),XTMP#54=0.0(0.1)}
[P1T2] Init XEME: give :- S/PP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#119=10.0(1.0),XEME#162=10.0(1.0),XTMP#135=0.0(0.1)}
[P1T2] Init XEME: raymond mooney :- NP : ray:pe -> {LEX#321=21.435469250725863(1.0),XEME#163=10.0(1.0),XTMP#19=0.0(0.1)}
[P1T2] Init XEME: hamburger :- NP : hamburger:it -> {LEX#580=10.0(1.0),XEME#211=10.0(1.0),XTMP#19=0.0(0.1)}
[P1T2] Init XEME: please :- S\S : (lambda $0:t $0) -> {LEX#581=10.0(1.0),XEME#25=10.0(1.0),XTMP#0=0.0(0.1)}
[P1T2] Init XEME: take :- S/NP/NP : (lambda $0:e (lambda $1:e (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) (actionpatient:<a,<e,t>> bring:a $1)))) -> {LEX#57=10.0(1.0),XEME#112=10.0(1.0),XTMP#94=0.0(0.1)}
[P1T2] Init XEME: give :- S/NP/NP : (lambda $0:e (lambda $1:e (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) (actionpatient:<a,<e,t>> bring:a $1)))) -> {LEX#41=10.0(1.0),XEME#8=10.0(1.0),XTMP#78=0.0(0.1)}
[P1T2] Init XEME: bring :- S/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#60=10.0(1.0),XEME#31=10.0(1.0),XTMP#35=0.0(0.1)}
[P1T2] Init XEME: of :- NP\N/NP : (lambda $0:e (lambda $1:<e,t> (the:<<e,t>,e> (lambda $2:e (and:<t*,t> (person:<pe,t> $0) ($1 $2) (possesses:<pe,<e,t>> $0 $2)))))) -> {LEX#33=10.0(1.0),XEME#164=10.0(1.0),XTMP#147=0.0(0.1)}
[P1T2] Init XEME: take :- S/PP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#2=10.0(1.0),XEME#112=10.0(1.0),XTMP#80=0.0(0.1)}
[P1T2] Init XEME: bring :- S/PP/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#117=10.0(1.0),XEME#53=10.0(1.0),XTMP#118=0.0(0.1)}
[P1T2] Init XEME: 3436 :- NP : l3_436:ro -> {LEX#327=10.0(1.0),XEME#165=10.0(1.0),XTMP#19=0.0(0.1)}
[P1T2] Init XEME: give :- S/PP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionrecipient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#119=10.0(1.0),XEME#33=10.0(1.0),XTMP#31=0.0(0.1)}
[P1T2] Init XEME: take :- S/PP/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#66=10.0(1.0),XEME#87=10.0(1.0),XTMP#14=0.0(0.1)}
[P1T2] Init XEME: give :- S/PP/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#18=10.0(1.0),XEME#125=10.0(1.0),XTMP#108=0.0(0.1)}
[P1T2] Init XEME: excluding :- PP/NP : (lambda $0:e (lambda $1:e (not:<t,t> (equals:<e,<e,t>> $1 $0)))) -> {LEX#123=10.0(1.0),XEME#166=10.0(1.0),XTMP#149=0.0(0.1)}
[P1T2] Init XEME: bring :- S/PP/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#117=10.0(1.0),XEME#91=10.0(1.0),XTMP#91=0.0(0.1)}
[P1T2] Init XEME: deliver :- S/PP/NP : (lambda $0:e (lambda $1:<a,t> (and:<t*,t> (action:<a,t> bring:a) (actionpatient:<a,<e,t>> bring:a $0) ($1 bring:a)))) -> {LEX#31=10.0(1.0),XEME#44=10.0(1.0),XTMP#18=0.0(0.1)}
[P1T2] Init XEME: 3426 :- NP : l3_426:ro -> {LEX#434=10.0(1.0),XEME#192=10.0(1.0),XTMP#19=0.0(0.1)}
[P1T2] Init XEME: stacy miller :- NP : stacy:pe -> {LEX#92=21.435469250725863(1.0),XEME#83=10.0(1.0),XTMP#19=0.0(0.1)}
[P1T2] Init XEME: 3428 :- NP : l3_428:ro -> {LEX#114=10.0(1.0),XEME#103=10.0(1.0),XTMP#19=0.0(0.1)}
[P1T2] Init XEME: dana ballard :- NP : dana:pe -> {LEX#309=21.435469250725863(1.0),XEME#161=10.0(1.0),XTMP#19=0.0(0.1)}
[P1T2] Init XEME: 3422 :- NP : l3_422:ro -> {LEX#248=10.0(1.0),XEME#149=10.0(1.0),XTMP#19=0.0(0.1)}
[P1T2] Init XEME: 3502 :- NP : l3_502:ro -> {LEX#68=10.0(1.0),XEME#60=10.0(1.0),XTMP#19=0.0(0.1)}
[P1T2] Init XEME: peter stone :- NP : peter:pe -> {LEX#363=21.435469250725863(1.0),XEME#173=10.0(1.0),XTMP#19=0.0(0.1)}
[P1T2] Init XEME: 3402 :- NP : l3_402:ro -> {LEX#457=10.0(1.0),XEME#194=10.0(1.0),XTMP#19=0.0(0.1)}
[P1T2] Init XEME: alice anderson :- NP : alice:pe -> {LEX#389=21.435469250725863(1.0),XEME#181=10.0(1.0),XTMP#19=0.0(0.1)}
[P1T2] Init XEME: 3420 :- NP : l3_420:ro -> {LEX#338=10.0(1.0),XEME#168=10.0(1.0),XTMP#19=0.0(0.1)}
[P1T2] Init XEME: i :- NP : me:pe -> {LEX#263=10.0(1.0),XEME#154=10.0(1.0),XTMP#19=0.0(0.1)}
[P1T2] Init XEME: apple :- NP : apple:it -> {LEX#390=10.0(1.0),XEME#182=10.0(1.0),XTMP#19=0.0(0.1)}
[P1T2] Init XEME: counter :- NP : coffeecounter:sc -> {LEX#491=10.0(1.0),XEME#197=10.0(1.0),XTMP#19=0.0(0.1)}
[P1T2] Init XEME: piyush khandelwal :- NP : piyush:pe -> {LEX#201=21.435469250725863(1.0),XEME#138=10.0(1.0),XTMP#19=0.0(0.1)}
[P1T2] Init XEME: kazunori iwata :- NP : kazunori:pe -> {LEX#377=21.435469250725863(1.0),XEME#177=10.0(1.0),XTMP#19=0.0(0.1)}
[P1T2] Init XEME: dennis davis :- NP : dennis:pe -> {LEX#77=21.435469250725863(1.0),XEME#67=10.0(1.0),XTMP#19=0.0(0.1)}
[P1T2] Init XEME: 3508 :- NP : l3_508:ro -> {LEX#284=10.0(1.0),XEME#157=10.0(1.0),XTMP#19=0.0(0.1)}
[P1T2] Init XEME: 3404 :- NP : l3_404:ro -> {LEX#407=10.0(1.0),XEME#186=10.0(1.0),XTMP#19=0.0(0.1)}
[P1T2] Init XEME: trashcan :- NP : trashcan:it -> {LEX#540=10.0(1.0),XEME#205=10.0(1.0),XTMP#19=0.0(0.1)}
[P1T2] Init XEME: 3430 :- NP : l3_430:ro -> {LEX#425=10.0(1.0),XEME#188=10.0(1.0),XTMP#19=0.0(0.1)}
[P1T2] Init XEME: carol clark :- NP : carol:pe -> {LEX#426=21.435469250725863(1.0),XEME#189=10.0(1.0),XTMP#19=0.0(0.1)}
[P1T2] Init XEME: 3516 :- NP : l3_516:ro -> {LEX#352=10.0(1.0),XEME#172=10.0(1.0),XTMP#19=0.0(0.1)}
[P1T2] Init XEME: me :- NP : me:pe -> {LEX#268=10.0(1.0),XEME#155=10.0(1.0),XTMP#19=0.0(0.1)}
[P1T2] Init XEME: calendar :- NP : calendar:it -> {LEX#445=10.0(1.0),XEME#193=10.0(1.0),XTMP#19=0.0(0.1)}
[P1T2] Init XEME: raymond mooney :- NP : ray:pe -> {LEX#321=21.435469250725863(1.0),XEME#163=10.0(1.0),XTMP#19=0.0(0.1)}
[P1T2] Init XEME: 3512 :- NP : l3_512:ro -> {LEX#527=10.0(1.0),XEME#203=10.0(1.0),XTMP#19=0.0(0.1)}
[P1T2] Init XEME: 3412 :- NP : l3_412:ro -> {LEX#101=10.0(1.0),XEME#95=10.0(1.0),XTMP#19=0.0(0.1)}
[P1T2] Init XEME: yourself :- NP : self:self -> {LEX#170=10.0(1.0),XEME#126=10.0(1.0),XTMP#19=0.0(0.1)}
[P1T2] Init XEME: bob brown :- NP : bob:pe -> {LEX#121=21.435469250725863(1.0),XEME#108=10.0(1.0),XTMP#19=0.0(0.1)}
[P1T2] Init XEME: hamburger :- NP : hamburger:it -> {LEX#580=10.0(1.0),XEME#211=10.0(1.0),XTMP#19=0.0(0.1)}
[P1T2] Init XEME: cell phone :- NP : phone:it -> {LEX#20=21.435469250725863(1.0),XEME#18=10.0(1.0),XTMP#19=0.0(0.1)}
[P1T2] Init XEME: 3510 :- NP : l3_510:ro -> {LEX#345=10.0(1.0),XEME#169=10.0(1.0),XTMP#19=0.0(0.1)}
[P1T2] Init XEME: 3414 :- NP : l3_414:ro -> {LEX#548=10.0(1.0),XEME#207=10.0(1.0),XTMP#19=0.0(0.1)}
[P1T2] Init XEME: you :- NP : self:self -> {LEX#371=10.0(1.0),XEME#174=10.0(1.0),XTMP#19=0.0(0.1)}
[P1T2] Init XEME: 3416 :- NP : l3_416:ro -> {LEX#460=10.0(1.0),XEME#195=10.0(1.0),XTMP#19=0.0(0.1)}
[P1T2] Init XEME: daniel urieli :- NP : daniel:pe -> {LEX#54=21.435469250725863(1.0),XEME#49=10.0(1.0),XTMP#19=0.0(0.1)}
[P1T2] Init XEME: 3436 :- NP : l3_436:ro -> {LEX#327=10.0(1.0),XEME#165=10.0(1.0),XTMP#19=0.0(0.1)}
[P1T2] Init XEME: 3418 :- NP : l3_418:ro -> {LEX#86=10.0(1.0),XEME#74=10.0(1.0),XTMP#19=0.0(0.1)}
[P1T2] Init XEME: jivko sinapov :- NP : jivko:pe -> {LEX#348=21.435469250725863(1.0),XEME#170=10.0(1.0),XTMP#19=0.0(0.1)}
[P1T2] Init XEME: 3432 :- NP : l3_432:ro -> {LEX#401=10.0(1.0),XEME#184=10.0(1.0),XTMP#19=0.0(0.1)}
[P1T2] Init XEME: 3414a :- NP : l3_414a:ro -> {LEX#127=10.0(1.0),XEME#111=10.0(1.0),XTMP#19=0.0(0.1)}
[P1T2] Init XEME: coffee :- NP : coffee:it -> {LEX#385=10.0(1.0),XEME#180=10.0(1.0),XTMP#19=0.0(0.1)}
[P1T2] Init XEME: 3414b :- NP : l3_414b:ro -> {LEX#519=10.0(1.0),XEME#201=10.0(1.0),XTMP#19=0.0(0.1)}
[P1T2] Init XEME: matteo leonetti :- NP : matteo:pe -> {LEX#29=21.435469250725863(1.0),XEME#27=10.0(1.0),XTMP#19=0.0(0.1)}
[P1T2] Init XEME: shiqi zhang :- NP : shiqi:pe -> {LEX#430=21.435469250725863(1.0),XEME#191=10.0(1.0),XTMP#19=0.0(0.1)}
[P1T2] Init XEME: soda :- NP : soda:it -> {LEX#403=10.0(1.0),XEME#185=10.0(1.0),XTMP#19=0.0(0.1)}
[P1T2] Init XEME: ellen edwards :- NP : ellen:pe -> {LEX#307=21.435469250725863(1.0),XEME#160=10.0(1.0),XTMP#19=0.0(0.1)}
